{"config":{"lang":["es","en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Informaci\u00f3n del proyecto","text":"<p>El objetivo principal de este proyecto es mostrar y explicar una configuraci\u00f3n detallada, robusta, segura y monitorizada del despliegue de un servidor Zentyal 7.0 en el proveedor cloud de Amazon AWS para un entorno de producci\u00f3n.</p> <p>Note</p> <p>Es importante tener en cuenta que todo lo explicado en el proyecto es un ejemplo real de implementaci\u00f3n, el cual puede usarse como base o gu\u00eda para el dise\u00f1o de vuestro propio entorno.</p> <p>Las funciones que tendr\u00e1 este servidor ser\u00e1 de actuar como servidor de correo para la organizaci\u00f3n y adicionalmente, como servidor de recursos compartidos para los distintos departamentos.</p> <p>Finalmente, mencionar que tambi\u00e9n se realizar\u00e1n m\u00faltiples configuraciones adicionales, como la securizaci\u00f3n mediante SPF, DKIM y DMARC para el servicio de correo, pol\u00edticas de contrase\u00f1as para el controlador de dominio o incluso, mejoras a nivel de CLI.</p>"},{"location":"#aws","title":"AWS","text":"<p>Como se ha explicado, se usar\u00e1 AWS para alojar el servidor Zentyal. Este servidor tendr\u00e1 un coste mensual, el cual depender\u00e1 de varios factores, como por ejemplo:</p> <ul> <li>Tipo de servidor.</li> <li>Tipo y n\u00famero de vol\u00famenes EBS.</li> <li>Tr\u00e1fico que recibe el servidor.</li> <li>Pol\u00edticas de copias de seguridad.</li> <li>Sistema de monitorizaci\u00f3n.</li> </ul> <p>Para este proyecto en concreto, se har\u00e1n uso de los siguientes servicios disponibles de AWS:</p> <ul> <li>Route53</li> <li>VPC</li> <li>KMS</li> <li>EC2</li> <li>CloudWatch</li> <li>SNS</li> </ul>"},{"location":"#zentyal","title":"Zentyal","text":"<p>El servidor Zentyal usar\u00e1 la \u00faltima versi\u00f3n estable disponible, que a fecha de hoy es 7.0. Adem\u00e1s, no se usar\u00e1 una licencia comercial, aunque es recomendable debido a las funcionalidades adicionales que ofrece as\u00ed como la posibilidad de contactar con soporte en caso de incidencia o duda.</p> <p>Los m\u00f3dulos que se instalar\u00e1n y configurar\u00e1n ser\u00e1n:</p> <ul> <li>Network</li> <li>Logs</li> <li>Firewall</li> <li>Software</li> <li>NTP</li> <li>DNS</li> <li>Controlador de dominio</li> <li>Correo</li> <li>Webmail</li> <li>Antivirus</li> <li>Mailfilter</li> <li>CA</li> <li>OpenVPN</li> </ul> <p>Adicionalmente, se realizar\u00e1n las siguientes configuraciones adicionales:</p> <ul> <li>Creaci\u00f3n de una partici\u00f3n para el SWAP.</li> <li>Uso de varios vol\u00famenes EBS para almacenar all\u00ed distintos tipos de informaci\u00f3n.</li> <li>Generaci\u00f3n de certificados con Let's Encrypt.</li> <li>Implementaci\u00f3n de: SPF, DKIM y DMARC para incrementar la seguridad del servicio de correo.</li> <li>Pol\u00edticas de seguridad y rotaci\u00f3n de contrase\u00f1as del dominio.</li> </ul>"},{"location":"#requisitos","title":"Requisitos","text":"<p>Para poder implementar o probar los pasos descritos en este proyecto, se requerir\u00e1 de lo siguiente:</p> <ol> <li>Conocimiento en la administraci\u00f3n de sistemas operativos Linux, y m\u00e1s concretamente, en Ubuntu.</li> <li>Conocimiento en el manejo de la CLI (l\u00ednea de comandos).</li> <li>Privilegios de administrador sobre el servidor.</li> <li>En caso de querer usar AWS, se deber\u00e1 de tener una cuenta con permisos suficientes para los servicios mencionados en el apartado 'AWS' de este mismo documento.</li> </ol>"},{"location":"#consideraciones","title":"Consideraciones","text":"<p>A continuaci\u00f3n se indican algunas consideraciones a tener en cuenta si se quiere implementar o probar el proyecto:</p> <ol> <li>Aunque los pasos est\u00e1n explicados, es altamente recomendable tener unos conocimientos m\u00ednimos sobre Linux ya que se utiliza bastante la terminal.</li> <li>Si se quiere implementar en producci\u00f3n, es altamente recomendable usar la versi\u00f3n comercial, ya que suele venir con acceso a soporte, lo cual puede ser muy \u00fatil ante incidencias o actualizaciones a versiones superiores de Zentyal.</li> <li>El proyecto ha sido probado en el proveedor cloud AWS, no obstante, deber\u00eda poder funcionar en otros proveedores cloud.</li> <li>En caso de usarse en un proveedor cloud, es muy probable que el despliegue tenga un coste econ\u00f3mico mensual.</li> <li>El m\u00f3dulo de red es el m\u00f3dulo m\u00e1s cr\u00edtico en caso de querer implementar este proyecto en un proveedor cloud, por lo que hay que tener bien analizada y definida la configuraci\u00f3n que tendr\u00e1 antes de proceder con su configuraci\u00f3n.</li> <li>Debido a los m\u00f3dulos instalados en Zentyal, el servidor requerir\u00e1 de un m\u00ednimo de 4GB de RAM para la realizaci\u00f3n de pruebas, no obstante, si se quiere usar en producci\u00f3n habr\u00e1 que a\u00f1adir m\u00e1s RAM.</li> </ol>"},{"location":"#indice","title":"\u00cdndice","text":"<p>El \u00edndice del proyecto para su implementaci\u00f3n ser\u00eda:</p> <ol> <li>AWS</li> <li>Instalaci\u00f3n</li> <li>Configuraci\u00f3n</li> <li>Certificados</li> <li>Hardening</li> <li>Backup</li> <li>Monitorizaci\u00f3n</li> </ol> <p>En caso de querer implementar o probar el proyecto en un servidor on-premise o en otro proveedor cloud, los pasos 1, parte del 6 y 7 no se aplicar\u00edan.</p>"},{"location":"about/","title":"Sobre mi","text":"<p>Mi nombre es Daniel Joven y soy administrador de sistemas Linux desde hace 6 a\u00f1os. Durante estos a\u00f1os, he trabajado principalmente en Zentyal, prestando el soporte oficial para los clientes y colaborando en la gesti\u00f3n de su infraestructura IT. Adicionalmente a este cliente, tambi\u00e9n he trabajado en otros proyectos realizando tareas como:</p> <ul> <li>Creaci\u00f3n y gesti\u00f3n de hosting webs con: cPanel, Plesk e ISPconfig.</li> <li>Automatizaci\u00f3n de tareas con Ansible y bash scripting.</li> <li>Dise\u00f1o, creaci\u00f3n y mantenimiento de entorno cloud en AWS.</li> <li>Dise\u00f1o, creaci\u00f3n y mantenimiento de CI/CD para entornos de desarrollo, staging y producci\u00f3n.</li> </ul> <p>Adem\u00e1s, desde que comenc\u00e9 mi formaci\u00f3n en IT he podido obtener los siguientes certificados:</p> <ul> <li>(2015) Zentyal Certified Associate 3.2.</li> <li>(2015) Red Hat Certified System Administrator (RHCSA).</li> <li>(2016) Linux Professional Institute Certification 201.</li> <li>(2017) Mysql database Administrator 5.6.</li> <li>(2018) Red Hat Certified Engineer (RHCE).</li> <li>(2019) Red Hat Certified Specialist in Ansible Automation.</li> <li>(2022) Certified Kubernetes Administrator (CKA).</li> </ul> <p>Con la experiencia adquirida durante estos a\u00f1os, he decidido crear un proyecto completo con Zentyal y AWS y compartirlo para ayudar - espero - a otros miembros de IT que est\u00e9n considerando o que tengan problemas en la implementaci\u00f3n de un entorno de producci\u00f3n con Zentyal.</p>"},{"location":"aws-configuration/","title":"AWS","text":"<p>En esta p\u00e1gina se explicar\u00e1 como configurar el entorno del proveedor cloud AWS para poder desplegar el servidor Zentyal.</p>","tags":["AWS"]},{"location":"aws-configuration/#requisitos","title":"Requisitos","text":"<p>Para poder seguir este documento, se necesitar\u00e1 lo siguiente:</p> <ol> <li>Una cuenta en AWS.</li> <li>Un usuario con permisos para los siguientes servicios:<ul> <li>Route53 (en caso de tener alojado el dominio en este servicio)</li> <li>VPC</li> <li>KMS</li> <li>EC2</li> </ul> </li> </ol>","tags":["AWS"]},{"location":"aws-configuration/#region","title":"Regi\u00f3n","text":"<p>Antes de empezar a crear los recursos, tenemos que saber cual es la mejor regi\u00f3n a usar. Para ello, haremos uso de esta p\u00e1gina web, donde podremos ver que regi\u00f3n tiene una mejora latencia desde nuestra ubicaci\u00f3n.</p> <p></p> <p>Como se puede ver en la imagen, en mi caso concreto, he seleccionado todas las regiones de Europa, ya que me encuentro en Espa\u00f1a. El resultado mostrado indica que Paris es la regi\u00f3n con mejor latencia, por lo tanto, \u00e9sta ser\u00e1 la regi\u00f3n donde desplegar\u00e9 el entorno.</p>","tags":["AWS"]},{"location":"aws-configuration/#vpc","title":"VPC","text":"<p>El primer servicio que configuraremos es VPC, el cual es b\u00e1sicamente una red virtual donde ubicaremos nuestro servidor Zentyal.</p> <p>Vamos a crear una VPC con la siguiente configuraci\u00f3n:</p> <ul> <li>Name: VPC-Prod-Zentyal</li> <li>IPv4 CIDR: 10.0.0.0/16</li> <li>IPv6: Disabled</li> <li>Tenancy: Default</li> <li>Tags:<ul> <li>Name: VPC-Prod-Zentyal</li> <li>Env: Production</li> </ul> </li> </ul> <p>Nota</p> <p>Como Zentyal no permite IPv6, lo deshabilitamos para evitar posibles brechas de seguridad.</p> <p>A continuaci\u00f3n una imagen con la configuraci\u00f3n.</p> <p></p> <p>Una vez que haya sido creada, podremos habilitar opcionalmente las siguientes opciones:</p> <ul> <li>DNS hostname</li> <li>DNS resolution</li> </ul>","tags":["AWS"]},{"location":"aws-configuration/#subnet","title":"Subnet","text":"<p>Una vez que tenemos nuestra VPC creada, procederemos a crear una subred p\u00fablica, que ser\u00e1 donde ubicaremos nuestro servidor Zentyal.</p> <p>La configuraci\u00f3n de la subnet ser\u00e1:</p> <ul> <li>Name: SUB-Prod-Public-1</li> <li>Availability zone: eu-west-3a</li> <li>IPv4 CIDR: 10.0.1.0/24</li> <li>Tags:<ul> <li>Name: SUB-Prod-Public-1</li> <li>Env: Production</li> </ul> </li> </ul> <p>A continuaci\u00f3n una imagen con la configuraci\u00f3n.</p> <p></p>","tags":["AWS"]},{"location":"aws-configuration/#gateway","title":"Gateway","text":"<p>Lo siguiente que haremos ser\u00e1 configurar la puerta de enlace de tipo Internet gateway para nuestra VPC, de esta forma, las instancias que usen esta subred tendr\u00e1n acceso a Internet.</p> <p>La configuraci\u00f3n de la puerta de enlace ser\u00e1:</p> <ul> <li>Name: GW-Prod-1</li> <li>Tags:<ul> <li>Env: Production</li> <li>Name: GW-Prod-1</li> </ul> </li> </ul> <p>A continuaci\u00f3n una imagen con la configuraci\u00f3n.</p> <p></p> <p>Finalmente, asociaremos el recurso reci\u00e9n creado a nuestra VPC.</p> <p></p>","tags":["AWS"]},{"location":"aws-configuration/#routes","title":"Routes","text":"<p>Una vez que tenemos tanto la subred como la puerta de enlace creadas, tendremos que crear modificar la tabla de enrutamiento que AWS nos crea por defecto cuando creamos una VPC.</p> <p>Para este caso, tendremos que editar el recurso ya existente y realizar las siguientes acciones:</p> <ol> <li> <p>Creamos los tags tal y como muestra la imagen:</p> <p></p> </li> <li> <p>Nos aseguramos que la subred est\u00e9 asociada:</p> <p></p> </li> <li> <p>Establecemos la puerta de enlace para que resuelva el resto de rangos de red.</p> <p></p> </li> </ol>","tags":["AWS"]},{"location":"aws-configuration/#network-acl","title":"Network ACL","text":"<p>El siguiente recurso que modificaremos ser\u00e1 la ACL de red que AWS nos crea por defecto. Las reglas definidas all\u00ed nos permiten denegar o permitir el tr\u00e1fico entrante y saliente de nuestra subnets.</p> <p>Una vez m\u00e1s, AWS nos crea por defecto una ACL de red, la cual modificaremos de la siguiente manera:</p> <ol> <li> <p>Creamos los tags tal y como muestra la imagen:</p> <p></p> </li> <li> <p>Nos aseguramos que la subred est\u00e9 asociada:</p> <p></p> </li> <li> <p>Verificamos que todo el tr\u00e1fico entrante est\u00e1 permitido:</p> <p></p> </li> <li> <p>Verificamos que todo el tr\u00e1fico saliente est\u00e1 permitido:</p> <p></p> </li> </ol>","tags":["AWS"]},{"location":"aws-configuration/#security-group","title":"Security Group","text":"<p>El \u00faltimo recurso que modificaremos en el servicio de VPC es el grupo de seguridad que asociaremos al servidor Zentyal, el cual b\u00e1sicamente un firewall virtual que permite establecer los puertos e IPs que se permiten.</p> <p>Para este recurso concreto, haremos 2 cosas:</p> <ol> <li> <p>Modificaremos las tags del recurso que cre\u00f3 AWS por defecto cuando creamos la VPC.</p> <p></p> </li> <li> <p>Crearemos un nuevo recurso, el cual contendr\u00e1 los puertos que permitiremos acceder p\u00fablicamente, los cuales son:</p> <ul> <li>ICMP-IPv4 echo request -&gt; Permite poder hacer un <code>ping</code> al servidor.</li> <li>22/TCP -&gt; SSH.</li> <li>25/TCP -&gt; SMTP.</li> <li>53/UDP -&gt; DNS.</li> <li>53/TCP -&gt; DNS.</li> <li>143/TCP -&gt; IMAP.</li> <li>443/TCP -&gt; HTTPS.</li> <li>465/TCP -&gt; SMTPS.</li> <li>587/TCP -&gt; SMTPS con StartTLS.</li> <li>993/TCP -&gt; IMAPS.</li> <li>8443/TCP -&gt; Zentyal GUI.</li> <li>11994/UDP -&gt; OpenVPN.</li> </ul> <p>El resultado deber\u00e1 ser el siguiente:</p> <p></p> <p>Adem\u00e1s, tambi\u00e9n le establecemos las siguientes tags:</p> <ul> <li>Name: SG-Prod-Zentyal</li> <li>Tags:<ul> <li>Name: SG-Prod-Zentyal</li> <li>Env: Production</li> <li>Host: arthas.icecrown.es</li> </ul> </li> </ul> <p>Nota</p> <p>El host 'arthas.icecrown.es' ser\u00e1 el nombre que le dar\u00e9 al servidor Zentyal.</p> <p></p> <p>Finalmente, nos aseguraremos de que todo tr\u00e1fico saliente est\u00e9 permitido:</p> <p></p> </li> </ol>","tags":["AWS"]},{"location":"aws-configuration/#ec2","title":"EC2","text":"<p>Una vez que tenemos la red (VPC) configurada, procederemos a crear los recursos necesarios en el servicio de EC2.</p>","tags":["AWS"]},{"location":"aws-configuration/#group-placement","title":"Group Placement","text":"<p>El primer recurso que crearemos ser\u00e1 un grupo de ubicaci\u00f3n, el cual nos permitir\u00e1 distribuir las instancias (servidores) en hardware distinto, por lo que minimizaremos posibles errores que puedan surgir por parte de AWS.</p> <p>La configuraci\u00f3n que estableceremos ser\u00e1:</p> <ul> <li>Name: GP-Prod-1</li> <li>Placement strategy: Spread</li> <li>Spread level: Rack</li> <li>Tags:<ul> <li>Name: GP-Prod-1</li> <li>Env: Production</li> </ul> </li> </ul> <p></p>","tags":["AWS"]},{"location":"aws-configuration/#key-pair","title":"Key Pair","text":"<p>Despu\u00e9s, crearemos un de pares de claves, las cuales nos permitir\u00e1n conectarnos a la instancia a trav\u00e9s de SSH.</p> <p>Consideraciones:</p> <ul> <li>\u00danicamente durante la generaci\u00f3n del par de claves ser\u00e1 posible descargar la clave privada.</li> <li>El acceso a la clave privada descargada deber\u00e1 estar restringido, ya que con este clave tendremos acceso completo como administrador a la instancia sin necesidad de establecer una contrase\u00f1a (comportamiento por defecto en las instancias Linux de AWS).</li> <li>Los permisos que debe tener la clave son de s\u00f3lo lectura para el usuario, en notaci\u00f3n octal es: 0400.</li> </ul> <p>La configuraci\u00f3n que estableceremos ser\u00e1:</p> <ul> <li>Name: KP-Prod-Zentyal</li> <li>Key pair type: RSA</li> <li>Private ket file format: .pem</li> <li>Tags:<ul> <li>Name: KP-Prod-Zentyal</li> <li>Env: Production</li> <li>Host: arthas.icecrown.es</li> </ul> </li> </ul> <p></p>","tags":["AWS"]},{"location":"aws-configuration/#network-interface","title":"Network interface","text":"<p>El siguiente recurso que usaremos ser\u00e1 crear una interfaz de red, la cual nos permitir\u00e1 establecer una IP est\u00e1tica y asociarla con la instancia de Zentyal, evitando as\u00ed posibles incidencias en el m\u00f3dulo m\u00e1s cr\u00edtico, el de red.</p> <p>La configuraci\u00f3n que estableceremos ser\u00e1:</p> <ul> <li>Name: NI-Prod-Zentyal</li> <li>Subnet: SUB-Prod-Public-1</li> <li>Private IPv4 address: 10.0.1.200</li> <li>Security Group: SG-Prod-Zentyal</li> <li>Tags:<ul> <li>Name: NI-Prod-Zentyal</li> <li>Env: Production</li> <li>Host: arthas.icecrown.es</li> </ul> </li> </ul> <p> </p>","tags":["AWS"]},{"location":"aws-configuration/#instance","title":"Instance","text":"<p>Una vez que hemos creado todos los recursos anteriores en el servicio de EC2, procederemos a crear la instancia de computaci\u00f3n (servidor) sobre el que instalaremos Zentyal.</p> <p>Consideraciones:</p> <ul> <li>Debido a los m\u00f3dulos de Zentyal que usaremos, la instancia deber\u00e1 tener un m\u00ednimo de 4GB de RAM.</li> <li>Para las pruebas del proyecto, he optado por la instancia m\u00e1s econ\u00f3mica posible, que es de tipo general y se llama t3a.medium.</li> <li>El precio de la instancia lo pod\u00e9is obtener de aqu\u00ed.<ul> <li>En mi caso concreto, el coste por hora (en caso de estar iniciada) ser\u00e1 de '0.04$'.     </li> </ul> </li> <li>Usar\u00e9 3 vol\u00famenes EBS (discos duros) para establecer el siguiente particionado:<ul> <li>EBS del sistema de 30GB.</li> <li>EBS para los emails de 10GB.</li> <li>EBS para los directorios personales y los recursos compartidos de 10GB.</li> </ul> </li> <li> <p>Habilitar\u00e9 la monitorizaci\u00f3n avanzada ya que usar\u00e9 AWS CloudWatch como sistema de monitorizaci\u00f3n.</p> <p>Warning</p> <p>Esta opci\u00f3n tiene un coste a\u00f1adido, el cual se puede consultar aqu\u00ed.</p> </li> <li> <p>Las opciones que configurar\u00e9 y que suponen un coste mensual son:</p> <ul> <li>Instance type.</li> <li>Root volume.</li> <li>Detailed CloudWatch monitoring.</li> </ul> </li> </ul> <p>Por lo tanto, la configuraci\u00f3n que definiremos en el servicio ser\u00e1:</p> <ul> <li>Name: arthas.icecrown.es</li> <li>AMI: Ubuntu Server 20.04 LTS (HVM), SSD Volume Type</li> <li>Architecture: 64-bit (x86)</li> <li>Instance type: t3a.medium</li> <li>Key pair: KP-Prod-Zentyal</li> <li>Network settings:<ul> <li>VPC: VPC-Prod-Zentyal</li> <li>Subnet: SUB-Prod-Public-1</li> <li>Auto-assign public IP: Disable</li> <li>Firewall: Select existint security group</li> <li>Network interface: NI-Prod-Zentyal</li> </ul> </li> <li>Configure storage:<ul> <li>Root volume: 30 GB, GP3</li> </ul> </li> <li>Advanced details:<ul> <li>Shutdown behavior: Stop</li> <li>Termination protection: Enable</li> <li>Detailed CloudWatch monitoring: Enable</li> <li>Placement group: GP-Prod-1</li> </ul> </li> <li>Tags:<ul> <li>Name: arthas.icecrown.es</li> <li>Env: Production</li> <li>Host: arthas.icecrown.es</li> </ul> </li> </ul> <p> </p>","tags":["AWS"]},{"location":"aws-configuration/#volumes","title":"Volumes","text":"<p>Una vez que tenemos la instancia creada, procederemos a configurar los vol\u00famenes (disco duro) de nuestro servidor Zentyal. En mi caso concreto, crear\u00e9 dos vol\u00famenes adicionales, uno para alojar los emails y otro para los directorios personales y los recursos compartidos. El motivo es que me permitir\u00e1 definir pol\u00edticas de copias de seguridad distintas a nivel de AWS, adem\u00e1s que los datos est\u00e1n en discos separados, con las ventajas que eso conlleva, como por ejemplo, recuperar informaci\u00f3n ante un fallo humano.</p> <p>Antes de proceder a crear los vol\u00famenes adicionales, estableceremos las tags para el volumen del sistema asociado a la instancia en ejecuci\u00f3n:</p> <ul> <li>Name: EBS-Prod-System-Zentyal</li> <li>Env: Production</li> <li>Host: arthas.icecrown.es</li> <li>Type: System</li> </ul> <p></p> <p>A continuaci\u00f3n, creamos los vol\u00famenes adicionales:</p> <p>Warning</p> <p>Los vol\u00famenes deber\u00e1n estar en la misma zona de disponibilidad que la instancia, eu-west-3a en mi caso.</p> <p>Para los buzones de correo:</p> <ul> <li>Volume Type: General Purpose SSD (gp3)</li> <li>Size: 10GiB</li> <li>IOPS: 3000</li> <li>Throughput: 125</li> <li>Availability zone: eu-west-3a</li> <li>Snapshot ID: Don't create volume from a snapshot</li> <li>Encryption: Enabled<ul> <li>KMS key: (default) aws/ebs</li> </ul> </li> <li>Tags:<ul> <li>Name: EBS-Prod-Mail-Zentyal</li> <li>Env: Production</li> <li>Host: arthas.icecrown.es</li> <li>Type: Mail</li> </ul> </li> </ul> <p> </p> <p>Para los directorios personales y recursos compartidos:</p> <ul> <li>Volume Type: General Purpose SSD (gp3)</li> <li>Size: 10GiB</li> <li>IOPS: 3000</li> <li>Throughput: 125</li> <li>Availability zone: eu-west-3a</li> <li>Snapshot ID: Don't create volume from a snapshot</li> <li>Encryption: Enabled<ul> <li>KMS key: (default) aws/ebs</li> </ul> </li> <li>Tags:<ul> <li>Name: EBS-Prod-Shares-Zentyal</li> <li>Env: Production</li> <li>Host: arthas.icecrown.es</li> <li>Type: Shares</li> </ul> </li> </ul> <p> </p> <p>Finalmente, asociaremos ambos vol\u00famenes a la instancia EC2.</p> <p> </p>","tags":["AWS"]},{"location":"aws-configuration/#elastic-ip","title":"Elastic IP","text":"<p>El siguiente recurso que crearemos ser\u00e1 una IP el\u00e1stica, que no es m\u00e1s que una direcci\u00f3n IPv4 p\u00fablica que asociaremos a nuestra instancia.</p> <p>Las tags que definiremos al recurso ser\u00e1n:</p> <ul> <li>Name: EIP-Prod-Zentyal</li> <li>Env: Production</li> <li>Host: arthas.icecrown.es</li> </ul> <p></p> <p>Finalmente, asociamos el recurso reci\u00e9n creado a la instancia.</p> <p></p>","tags":["AWS"]},{"location":"aws-configuration/#route-53","title":"Route 53","text":"<p>La siguiente acci\u00f3n necesaria es crear el registro DNS en el dominio para que apunte a la IP p\u00fablica asociada a la instancia. En mi caso concreto, usar\u00e9 el servicio Route 53 para la creaci\u00f3n del registro DNS de tipo <code>A</code>, ya que es all\u00ed donde tengo contratado el dominio.</p> <p></p>","tags":["AWS"]},{"location":"aws-configuration/#solicitar-envio-de-correos","title":"Solicitar envi\u00f3 de correos","text":"<p>Para poder enviar emails desde el servidor Zentyal a trav\u00e9s de la IP est\u00e1tica asociada, es necesario solicitar a AWS a trav\u00e9s de un formulario que nos elimine la restricci\u00f3n que tienen por defecto. Para ello, simplemente hay que seguir este enlace donde se explican los pasos.</p> <p>Consideraciones sobre el mensaje:</p> <ul> <li>Debe estar escrito en Ingl\u00e9s.</li> <li>Ha de ser detallado, de lo contrario te solicitar\u00e1n m\u00e1s informaci\u00f3n o incluso podr\u00edan negar la solicitud.</li> <li>Algunos detalles recomendados son:<ul> <li>Uso que se le dar\u00e1 al servidor.</li> <li>N\u00famero de usuarios que usar\u00e1n el correo.</li> <li>N\u00famero aproximado de emails que se enviar\u00e1n por hora.</li> </ul> </li> </ul> <p>Un ejemplo del mensaje:</p> <pre><code>Hi Support team,\n\nWe have deployed a new EC2 instance that acts as a Mail server using Zentyal operating system.\nWould you mind removing the default restriction so my users can send emails outside, please?\n\nBelow you have more information:\n\n* We are a small IT business focused on web development.\n* Around 20 users will send and receive emails every day.\n* We think we might send around 50 emails per hour.\n\nKind regards, Daniel.\n</code></pre>","tags":["AWS"]},{"location":"aws-configuration/#saving-plans","title":"Saving Plans","text":"<p>Una vez que el servidor haya sido creado, configurado y testado en profundidad, es altamente recomendable contratar la instancia usando Saving Plans, ya que nos permitir\u00e1 reducir significativamente el coste que supone el uso de la instancia EC2 desplegada.</p>","tags":["AWS"]},{"location":"backup/","title":"Backup","text":"<p>En esta p\u00e1gina se explicar\u00e1n varios opciones para la realizaci\u00f3n de copias de seguridad para este proyecto.</p> <p>Nota</p> <p>Tambi\u00e9n deber\u00edan ser v\u00e1lidas para despliegues en otras infraestructuras.</p> <p>Como es l\u00f3gico, todo servidor de producci\u00f3n debe tener un sistema de copias de seguridad que garantice la recuperaci\u00f3n del sistema y de sus datos ante eventos catastr\u00f3ficos o errores humanos.</p> <p>Las posibilidades de implementaci\u00f3n de copias de seguridad para este proyecto son varias:</p> <ol> <li>AWS DLM (snapshots de los vol\u00famenes EBS).</li> <li>Funcionalidad de backup de configuraci\u00f3n.</li> <li>M\u00f3dulo de backup.</li> <li>Scripting.</li> </ol> <p>En mi caso, usar\u00e9 las siguientes opciones:</p> <ul> <li>AWS DLM para los 3 vol\u00famenes EBS, ya que nos permitir\u00e1 restaurar nuestro servidor Zentyal o los datos de forma r\u00e1pida y sencilla. Adem\u00e1s, que tambi\u00e9n nos permitir\u00eda montar otros entornos como staging o testing usando una configuraci\u00f3n id\u00e9ntica.</li> <li>Funcionalidad de backup de configuraci\u00f3n, automatizaremos el uso de esta funcionalidad para tener siempre disponibles una versi\u00f3n con la configuraci\u00f3n de los m\u00f3dulos.</li> </ul>","tags":["AWS"]},{"location":"backup/#aws-dlm","title":"AWS DLM","text":"<p>Mediante la funcionalidad DLM del servicio de EC2 realizaremos una snapshot diaria de los 3 vol\u00famenes, lo que nos asegurar\u00e1 tener la informaci\u00f3n a resguardo en AWS. Esta funcionalidad lo que hace es hacer una snapshot sobre el volumen, las cuales son snapshots incrementales.</p> <p>Warning</p> <p>Su uso supondr\u00e1 un coste mensual adicional, el cual podemos ver aqu\u00ed.</p> <p>Las horas en las que establecer\u00e9 las snapshots ser\u00e1n:</p> <ul> <li>02:00 AM para el volumen de los correos.</li> <li>03:00 AM para el volumen de los recursos compartidos.</li> <li>04:00 AM para el volumen del sistema.</li> </ul> <p>Nota</p> <p>Es importante que la snapshot del sistema se realiza antes de las actualizaciones autom\u00e1ticas de Zentyal (05:30 AM en mi caso).</p>","tags":["AWS"]},{"location":"backup/#dlm-sobre-el-volumen-del-sistema","title":"DLM sobre el volumen del sistema","text":"<p>La primera regla que crearemos ser\u00e1 la del volumen del sistema. Esta regla constar\u00e1 de lo siguiente:</p> <ul> <li>La etiqueta usada para identificar el disco EBS ser\u00e1: <code>Type = System</code>.</li> <li>La hora establecida ser\u00e1n las 05:00 UTC.</li> </ul> <p>A continuaci\u00f3n las acciones a realizar para implementar la regla DLM:</p> <ol> <li>Desde el servicio de EC2 vamos a <code>Elastic Block Store -&gt; Lifecycle Manager</code>.</li> <li> <p>Creamos una pol\u00edtica de tipo <code>EBS snapshot policy</code>:</p> <p> </p> <p>Resumen de las configuraci\u00f3n:</p> <p></p> </li> <li> <p>Finalmente, confirmamos su funcionamiento, para ello, desde el servicio de EC2 vamos a <code>Elastic Block Store -&gt; Snapshots</code>:</p> <p></p> </li> </ol>","tags":["AWS"]},{"location":"backup/#dlm-sobre-el-volumen-de-los-correos","title":"DLM sobre el volumen de los correos","text":"<p>La segunda regla que crearemos ser\u00e1 la del volumen de los correos. Esta regla constar\u00e1 de lo siguiente:</p> <ul> <li>La etiqueta usada para identificar el disco EBS ser\u00e1: <code>Type = Mail</code>.</li> <li>La hora establecida ser\u00e1n las 03:00 UTC.</li> </ul> <p>A continuaci\u00f3n las acciones a realizar para implementar la regla DLM:</p> <ol> <li>Desde el servicio de EC2 vamos a <code>Elastic Block Store -&gt; Lifecycle Manager</code>.</li> <li> <p>Creamos una pol\u00edtica de tipo <code>EBS snapshot policy</code>:</p> <p> </p> <p>Resumen de las configuraci\u00f3n:</p> <p></p> </li> <li> <p>Finalmente, confirmamos su funcionamiento, para ello, desde el servicio de EC2 vamos a <code>Elastic Block Store -&gt; Snapshots</code>:</p> <p></p> </li> </ol>","tags":["AWS"]},{"location":"backup/#dlm-sobre-el-volumen-de-los-recursos-compartidos","title":"DLM sobre el volumen de los recursos compartidos","text":"<p>La \u00faltima regla que crearemos ser\u00e1 la del volumen de los recursos compartidos. Esta regla constar\u00e1 de lo siguiente:</p> <ul> <li>La etiqueta usada para identificar el disco EBS ser\u00e1: <code>Type = Shares</code>.</li> <li>La hora establecida ser\u00e1n las 04:00 UTC.</li> </ul> <p>A continuaci\u00f3n las acciones a realizar para implementar la regla DLM:</p> <ol> <li>Desde el servicio de EC2 vamos a <code>Elastic Block Store -&gt; Lifecycle Manager</code>.</li> <li> <p>Creamos una pol\u00edtica de tipo <code>EBS snapshot policy</code>:</p> <p> </p> <p>Resumen de las configuraci\u00f3n:</p> <p></p> </li> <li> <p>Finalmente, confirmamos su funcionamiento, para ello, desde el servicio de EC2 vamos a <code>Elastic Block Store -&gt; Snapshots</code>:</p> <p></p> </li> </ol>","tags":["AWS"]},{"location":"backup/#funcionalidad-backup-de-configuracion","title":"Funcionalidad backup de configuraci\u00f3n","text":"<p>Esta funcionalidad nos permitir\u00e1 tener una copia de seguridad de la configuraci\u00f3n de Zentyal, lo que nos ofrece m\u00faltiples ventajas como:</p> <ol> <li>Rollback de la configuraci\u00f3n de los m\u00f3dulos de Zentyal.</li> <li>Posibilidad de crear servidores id\u00e9nticos para otros entornos como staging o testing.</li> <li>Una especia de versionado de la configuraci\u00f3n de Zentyal.</li> </ol> <p>Warning</p> <p>Esta funcionalidad no almacena los datos de los usuarios como sus directorios personales, los recursos compartidos o los emails, sino que simplemente almacena la configuraci\u00f3n para cada m\u00f3dulo - incluyendo los objectos del controlador de dominio como usuarios o grupos -.</p> <p>Para la implementaci\u00f3n de esta funcionalidad definiremos una tarea programada, la cual se ejecutar\u00e1 diariamente a las 02:30 AM.</p> <p>Las acciones que realizaremos para la implementaci\u00f3n son:</p> <ol> <li> <p>Desde la CLI, probamos el comando que realiza la copia de seguridad y ejecutar\u00e1 la tarea programa:</p> <pre><code>sudo /usr/share/zentyal/make-backup --description \"CLI backup on `date '+%d-%m-%Y'`\"\n</code></pre> </li> <li> <p>Una vez que haya terminado, nos logeamos en la interfaz gr\u00e1fica de Zentyal y vamos a <code>System -&gt; Configuration Backup</code> para confirmar que el backup es detectado por Zentyal y que se puede descargar.</p> <p></p> </li> <li> <p>Una vez confirmado su funcionamiento, creamos la tarea programada para que se ejecute diariamente a las 02:30 AM. Para ello, creamos el archivo de configuraci\u00f3n en <code>/etc/cron.d/custom-backup_conf</code> con el siguiente contenido:</p> <pre><code>## Configuration backup created on 12-02-2023 by Daniel\n30 02 * * * root /usr/share/zentyal/make-backup --description \"Cronjob backup on `date '+\\%d-\\%m-\\%Y'`\" &gt;/dev/null 2&gt;&amp;1\n</code></pre> </li> <li> <p>Finalmente, revisamos que la tarea programada:</p> <p></p> <p>Nota</p> <p>La hora es distinta porque la modifiqu\u00e9 para poder verificar su funcionamiento sin tener que esperar a las 02:30 AM.</p> </li> </ol>","tags":["AWS"]},{"location":"maintenance/","title":"Mantenimiento","text":"<p>En esta p\u00e1gina explicar\u00e9 algunas acciones a revisar peri\u00f3dicamente en el servidor Zentyal para confirmar su estabilidad.</p>","tags":["Zentyal"]},{"location":"maintenance/#archivos-de-logs","title":"Archivos de logs","text":"<p>Lo primero y m\u00e1s importante es saber si los archivos de logs importantes del sistema muestra alg\u00fan error. Para este proyecto, los archivos de logs m\u00e1s importantes son:</p> <ul> <li>/var/log/zentyal/zentyal.log -&gt; M\u00f3dulos de Zentyal.</li> <li>/var/log/syslog -&gt; Estado de los servicios y otros eventos gen\u00e9ricos del sistema.</li> <li>/var/log/samba/samba.log -&gt; M\u00f3dulo de controlador de dominio.</li> <li>/var/log/mail.log -&gt; M\u00f3dulo de correo.</li> <li>/var/log/mail.err -&gt; M\u00f3dulo de correo.</li> <li>/var/log/sogo/sogo.log -&gt; M\u00f3dulo de webmail.</li> <li>/var/log/apache2/ -&gt; M\u00f3dulo de webmail.</li> <li>/var/log/clamav/ -&gt; M\u00f3dulo de antivirus.</li> <li>/var/log/letsencrypt/letsencrypt.log -&gt; Certificados emitidos por Let's Encrypt con Certbot.</li> <li>/var/log/openvpn/ -&gt; M\u00f3dulo de vpn.</li> <li>/var/log/auth.log -&gt; Autenticaci\u00f3n locales del sistema.</li> </ul> <p>A continuaci\u00f3n un ejemplo de una b\u00fasqueda de warnings y errores en el log de Zentyal:</p> <pre><code>egrep -i '(ERROR|WARN)&gt;' /var/log/zentyal/zentyal.log\n</code></pre> <p>Info</p> <p>Los warning no suele ser relevantes.</p> <p>El resultado de un warning inofensivo y un error:</p> <pre><code>2023/02/04 20:06:31 WARN&gt; zentyal.psgi:43 Plack::Sandbox::_2fusr_2fshare_2fzentyal_2fpsgi_2fzentyal_2epsgi::__ANON__ - Argument \"Icecrown-RC-\" isn't numeric in numeric eq (==) at /usr/share/perl5/EBox/OpenVPN/Model/ServerConfiguration.pm line 572.\n\n2023/02/04 20:06:53 ERROR&gt; MyDBEngine.pm:200 EBox::MyDBEngine::_connect - Connection DB Error: Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (13)\n</code></pre>","tags":["Zentyal"]},{"location":"maintenance/#estado-del-sistema-de-paquetes-del-sistema","title":"Estado del sistema de paquetes del sistema","text":"<p>Otra tarea cr\u00edtica a revisar es si el servidor tiene alg\u00fan paquete roto. Esto lo se puede ver con el siguiente comando:</p> <pre><code>dpkg -l | egrep -v '^(ii|rc)'\n</code></pre> <p>Un ejemplo de un sistema sin ning\u00fan paquete roto:</p> <pre><code>Desired=Unknown/Install/Remove/Purge/Hold\n| Status=Not/Inst/Conf-files/Unpacked/halF-conf/Half-inst/trig-aWait/Trig-pend\n|/ Err?=(none)/Reinst-required (Status,Err: uppercase=bad)\n||/ Name                                  Version                           Architecture Description\n+++-=====================================-=================================-============-===============================================================================\n</code></pre>","tags":["Zentyal"]},{"location":"maintenance/#reporte-del-sistema","title":"Reporte del sistema","text":"<p>Es conveniente generar un reporte del sistema una vez a la semana para ver el estado general del servidor y detectar posibles incidencias. El reporte se puede generar usando la CLI como se muestra a continuaci\u00f3n:</p> <pre><code>/usr/share/zentyal/smart-admin-report &gt; zentyal-report_12-02-2023\n</code></pre> <p>A continuaci\u00f3n algunas de las secciones m\u00e1s importantes del reporte que hay que revisar con detenimiento (NOTA: El resultado mostrado a continuaci\u00f3n es de un sistema en buen estado):</p> <ul> <li> <p>Disk usage -&gt; Espacio disponible en los discos.</p> <pre><code>Filesystem      Type      Size  Used Avail Use% Mounted on\n/dev/root       ext4       29G  8.0G   21G  28% /\n/dev/nvme2n1p1  ext4      9.8G   17M  9.3G   1% /var/vmail\n/dev/nvme1n1p1  ext4      9.8G  228K  9.3G   1% /home\n/dev/nvme0n1p15 vfat      105M  5.2M  100M   5% /boot/efi\n</code></pre> </li> <li> <p>Network Interfaces where were -&gt; Fallos de red.</p> <pre><code>Network Interfaces where were 'Down': 0\n</code></pre> </li> <li> <p>Server packages -&gt; Paquetes rotos o pendientes por actualizar.</p> <pre><code>Broken packages: 0\nUpgradable packages:\n\nExpanded Security Maintenance for Applications is not enabled.\n\n0 updates can be applied immediately.\n\nEnable ESM Apps to receive additional future security updates.\nSee https://ubuntu.com/esm or run: sudo pro status\n\nLast update by Zentyal: 2023-02-122\n</code></pre> </li> <li> <p>DNS users on DnsAdmins -&gt; El usuario especial del m\u00f3dulo de DNS debe existir y pertenecer al grupo especial del dominio llamado <code>DnsADmins</code>.</p> <pre><code>dns-arthas\n</code></pre> </li> <li> <p>Daemons' information -&gt; Estado de los demonios antiguos del controlador del dominio (deben estar inactivos).</p> <pre><code>Status of the daemon: 'smbd': inactive\nState of the daemon: 'smbd': masked\n\nStatus of the daemon: 'nmbd': inactive\nState of the daemon: 'nmbd': masked\n\nStatus of the daemon: 'winbind': inactive\nState of the daemon: 'winbind': masked\n\nStatus of the daemon: 'sssd': inactive\nState of the daemon: 'sssd':\n</code></pre> </li> <li> <p>Samba database check -&gt; Errores en la base de datos de Samba.</p> <pre><code>Checked 3763 objects (0 errors)\n</code></pre> </li> <li> <p>DNS alias -&gt; Registro especial de tipo CNAME en el dominio para el controlador de dominio.</p> <pre><code>cb8c94d6-fde3-4f61-9d61-8b7e6c1ce537._msdcs.icecrown.es is an alias for arthas.icecrown.es.\n</code></pre> </li> <li> <p>Mails status -&gt; El estado de los emails gestionados por el m\u00f3dulo de correo.</p> <pre><code>Mail queue:\nMail queue is empty\nMails sent: 2\nMails rejected: 0\nMails bounced: 0\nMails analized by Mailfilter: 1\nMails with virus: 0\nMails block by SPAM: 0\nMails block by File Type: 0\n</code></pre> </li> </ul>","tags":["Zentyal"]},{"location":"monitoring/","title":"Monitorizaci\u00f3n","text":"<p>En esta p\u00e1gina configuraremos un sistema de monitorizaci\u00f3n para nuestro servidor Zentyal usando el servicio de AWS Cloudwatch. Adem\u00e1s, tambi\u00e9n haremos uso del servicio de AWS SSM Parameter Store para alojar la configuraci\u00f3n del agente de Cloudwatch en nuestro servidor y finalmente, del servicio AWS SNS para las notificaciones de las alertas.</p> <p>Warning</p> <p>La implementaci\u00f3n de estos servicios tendr\u00e1n un coste adicional mensual.</p>","tags":["AWS"]},{"location":"monitoring/#sns","title":"SNS","text":"<p>Para notificar cualquier alerta que se dispare en CloudWatch haremos uso del servicio SNS, el cual env\u00edar\u00e1 un email a una cuenta de correo. En mi caso, usar\u00e9 la cuenta creada de <code>it.infra@icecrown.es</code>.</p> <ol> <li> <p>Vamos a <code>SNS</code> y creamos un topic llamado <code>Prod-Zentyal-Email-Alerting</code>:</p> <p> </p> </li> <li> <p>Creamos una subscription para la cuenta de correo que recibir\u00e1 las notificaciones:</p> <p></p> </li> <li> <p>Finalmente, esperamos a que nos llegue la invitaci\u00f3n a la cuenta de correo para activar la suscripci\u00f3n.</p> <p></p> <p>Nota</p> <p>Al tener habilitado la lista gris, nos tardar\u00e1 en llegar unos minutos.</p> </li> </ol>","tags":["AWS"]},{"location":"monitoring/#ssm-parameter-store","title":"SSM Parameter Store","text":"<p>Para monitorizar los recursos del servidor Zentyal usaremos el servicio AWS Cloudwatch, cuyo archivo de configuraci\u00f3n almacenaremos en SSM Parameter store.</p> <p>La configuraci\u00f3n que especificar\u00e9 ser\u00e1:</p> <ul> <li>La ruta completa al par\u00e1metro se llamar\u00e1 <code>/zentyal/prod/cloudwatch-config</code></li> <li>El namespace en Cloudwatch se llamar\u00e1 <code>CWA-Prod-Zentyal</code>.</li> <li>El intervalo de las m\u00e9tricas ser\u00e1 de <code>60</code> segundos.</li> <li>Se configurar\u00e1n m\u00e9tricas adicionales para:<ul> <li>RAM</li> <li>Swap</li> <li>Disco.</li> </ul> </li> <li>Los 3 vol\u00famenes EBS se incluir\u00e1n en las m\u00e9tricas de disco.</li> <li>Se monitorizar\u00e1 tambi\u00e9n el log <code>/var/log/zentyal/zentyal.log</code>, el cual tendr\u00e1 una retenci\u00f3n de 7 d\u00edas.</li> <li>El grupo de logs en CloudWatch se llamar\u00e1 <code>CWAL-Prod-Zentyal</code>.</li> </ul> <p>Info</p> <p>Para a\u00f1adir configuraciones adicionales o resolver dudas, aqu\u00ed tenemos la referencia de la configuraci\u00f3n.</p> <p>A continuaci\u00f3n se indican las acciones a realizar:</p> <ol> <li>Nos ubicamos en la regi\u00f3n donde tenemos la instancia, que en mi caso es Paris.</li> <li>Vamos a <code>AWS Systems Manager -&gt; Parameter Store -&gt; Create parameter</code>.</li> <li> <p>Creamos el par\u00e1metro:</p> <p></p> </li> <li> <p>A\u00f1adimos la configuraci\u00f3n del agente en la secci\u00f3n de <code>Value</code>:</p> <pre><code>{\n\"agent\": {\n\"metrics_collection_interval\": 60,\n\"run_as_user\": \"root\"\n},\n\"metrics\": {\n\"namespace\": \"CWA-Prod-Zentyal\",\n\"aggregation_dimensions\": [\n[\n\"InstanceId\"\n]\n],\n\"append_dimensions\": {\n\"AutoScalingGroupName\": \"${aws:AutoScalingGroupName}\",\n\"ImageId\": \"${aws:ImageId}\",\n\"InstanceId\": \"${aws:InstanceId}\",\n\"InstanceType\": \"${aws:InstanceType}\"\n},\n\"metrics_collected\": {\n\"mem\": {\n\"measurement\": [\n\"used_percent\",\n\"used\",\n\"free\",\n\"total\",\n\"cached\",\n\"buffered\"\n],\n\"metrics_collection_interval\": 60\n},\n\"swap\": {\n\"measurement\": [\n\"used_percent\",\n\"used\",\n\"free\"\n],\n\"metrics_collection_interval\": 60\n},\n\"disk\": {\n\"measurement\": [\n\"used_percent\",\n\"used\",\n\"free\",\n\"total\",\n\"inodes_used\",\n\"inodes_free\",\n\"inodes_total\"\n],\n\"metrics_collection_interval\": 60,\n\"ignore_file_system_types\": [\n\"tmpfs\",\n\"vfat\",\n\"devtmps\"\n],\n\"resources\": [\n\"/\",\n\"/var/vmail\",\n\"/home\"\n]\n},\n\"statsd\": {\n\"metrics_aggregation_interval\": 60,\n\"metrics_collection_interval\": 60,\n\"service_address\": \":8125\"\n}\n}\n},\n\"logs\": {\n\"logs_collected\": {\n\"files\": {\n\"collect_list\": [\n{\n\"file_path\": \"/var/log/zentyal/zentyal.log\",\n\"log_group_name\": \"CWAL-Prod-Zentyal\",\n\"log_stream_name\": \"{instance_id}\",\n\"retention_in_days\": 7,\n\"timezone\": \"UTC\"\n}\n]\n}\n},\n\"log_stream_name\": \"Stream-Prod-Zentyal\",\n\"force_flush_interval\" : 15\n}\n}\n</code></pre> </li> <li> <p>Con el par\u00e1metro creado, crearemos una pol\u00edtica de IAM que permita el acceso desde la instancia EC2 al par\u00e1metro reci\u00e9n creado. Para ello vamos a <code>IAM -&gt; Policies</code></p> </li> <li> <p>Creamos una pol\u00edtica que tenga el siguiente contenido:</p> <pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"ParameterStoreZentyal1\",\n\"Effect\": \"Allow\",\n\"Action\": [\n\"ssm:GetParameterHistory\",\n\"ssm:GetParametersByPath\",\n\"ssm:GetParameters\",\n\"ssm:GetParameter\"\n],\n\"Resource\": [\n\"arn:aws:ssm:eu-west-3:*:parameter/zentyal/prod/cloudwatch-config\"\n]\n},\n{\n\"Sid\": \"ParameterStoreZentyal2\",\n\"Effect\": \"Allow\",\n\"Action\": \"ssm:DescribeParameters\",\n\"Resource\": \"*\"\n}\n]\n}\n</code></pre> <p></p> </li> <li> <p>Creamos otra pol\u00edtica que permita subir el archivo de log a Cloudwatch:</p> <pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"ZentyalCloudWatchLogs\",\n\"Effect\": \"Allow\",\n\"Action\": [\n\"logs:CreateLogGroup\",\n\"logs:CreateLogStream\",\n\"logs:PutLogEvents\",\n\"logs:DescribeLogStreams\"\n],\n\"Resource\": [\n\"arn:aws:logs:eu-west-3:*:*\"\n]\n}\n]\n}\n</code></pre> <p></p> </li> <li> <p>Creamos un rol donde asociaremos las pol\u00edticas reci\u00e9n creadas y tambi\u00e9n, la existente llamada <code>CloudWatchAgentServerPolicy</code>. Para ello vamos a <code>IAM -&gt; Roles</code>:</p> <p> </p> </li> <li> <p>Finalmente, asociamos el rol reci\u00e9n creado a la instancia de Zentyal. Para ello vamos a <code>EC2 -&gt; Actions -&gt; Security -&gt; Modify IAM role</code>:</p> <p></p> </li> </ol>","tags":["AWS"]},{"location":"monitoring/#cloudwatch","title":"Cloudwatch","text":"<p>Una vez que tenemos el entorno de AWS listo, procederemos a instalar y configurar el agente de CloudWatch para monitorizar el servidor y el archivo de log principal de Zentyal.</p> <ol> <li> <p>Descargamos el paquete <code>.deb</code> del agente de CloudWatch en nuestro servidor Zentyal:</p> <pre><code>sudo curl \"https://s3.amazonaws.com/amazoncloudwatch-agent/debian/amd64/latest/amazon-cloudwatch-agent.deb\" -o \"/opt/amazon-cloudwatch-agent.deb\"\n</code></pre> </li> <li> <p>Instalamos el paquete:</p> <pre><code>sudo dpkg -i -E /opt/amazon-cloudwatch-agent.deb\n</code></pre> </li> <li> <p>Descargamos tambi\u00e9n el archivo comprimido que contiene el binario de AWS para la CLI:</p> <pre><code>sudo curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"/opt/awscliv2.zip\"\n</code></pre> </li> <li> <p>Instalamos el paquete <code>unzip</code> para poder descomprimir el archivo:</p> <pre><code>sudo apt update\nsudo apt install -y unzip\n</code></pre> </li> <li> <p>Descomprimimos el archivo y lo instalamos:</p> <pre><code>sudo unzip /opt/awscliv2.zip -d /opt/aws/\nsudo /opt/aws/aws/install\n</code></pre> </li> <li> <p>Configuramos el agente de CloudWatch:</p> <pre><code>sudo amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c ssm:/zentyal/prod/cloudwatch-config\n</code></pre> </li> <li> <p>Confirmamos que el servicio est\u00e9 activo:</p> <pre><code>sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a status\n</code></pre> <p>El resultado que he obtenido:</p> <pre><code>{\n\"status\": \"running\",\n\"starttime\": \"2023-02-25T09:59:17+00:00\",\n\"configstatus\": \"configured\",\n\"version\": \"1.247357.0b252275\"\n}\n</code></pre> </li> <li> <p>Tras esperar un par de minutos, vamos a <code>CloudWatch -&gt; All metrics</code> y comprobamos que el namespace con las m\u00e9tricas personalizas se hayan creado:</p> <p> </p> </li> <li> <p>Finalmente, revisamos tambi\u00e9n que se est\u00e9 monitorizando el archivo de log de Zentyal, para ello vamos a <code>CloudWatch -&gt; Log groups</code>:</p> <p> </p> </li> </ol>","tags":["AWS"]},{"location":"monitoring/#logs","title":"Logs","text":"<p>Con el archivo principal de Zentyal monitorizado por CloudWatch, vamos a crear un filtro de m\u00e9trica que compruebe si el archivo de log contiene el evento <code>ERROR&gt;</code>. La finalidad es poder crear una alerta que notifique v\u00eda email a trav\u00e9s de AWS SNS cuando se produzca este tipo de eventos.</p> <ol> <li> <p>Vamos a <code>CloudWatch -&gt; Metric filters</code> y creamos el filtro:</p> <p> </p> </li> <li> <p>Una vez creado el filtro y pasado un par de minutos para que CloudWatch recolecte informaci\u00f3n.</p> </li> <li> <p>Finalmente, verificamos que desde <code>CloudWatch -&gt; All metrics</code> tenemos la m\u00e9trica disponible:</p> <p></p> <p>Nota</p> <p>El tipo de m\u00e9trica mostrado en la imagen es de tipo <code>Number</code> como se puede ver en la parte superior.</p> </li> </ol>","tags":["AWS"]},{"location":"monitoring/#dashboard","title":"Dashboard","text":"<p>Una vez confirmado el funcionamiento del sistema de monitorizaci\u00f3n, podremos crear un dashboard que agrupe las m\u00e9tricas m\u00e1s importantes desde <code>CloudWatch -&gt; Dashboard</code>. A continuaci\u00f3n un ejemplo sencillo:</p> <p></p>","tags":["AWS"]},{"location":"monitoring/#alertas","title":"Alertas","text":"<p>Lo \u00faltimo que haremos sobre el sistema de monitorizaci\u00f3n ser\u00e1 crear las alertas. Todas las alertas que configuraremos se har\u00e1n desde <code>CloudWatch -&gt; All alarm</code> y ser\u00e1n las siguientes:</p> <ul> <li>CPU:<ul> <li>La comprobaci\u00f3n se har\u00e1 cada minuto.</li> <li>El valor de la alerta para que se dispar\u00e9 ser\u00e1 superior a 80%.</li> <li>Para que se env\u00eda una notificaci\u00f3n, la alerta tendr\u00e1 que producirse 3 veces consecutivas.</li> </ul> </li> <li>RAM:<ul> <li>La comprobaci\u00f3n se har\u00e1 cada minuto.</li> <li>El valor de la alerta para que se dispar\u00e9 ser\u00e1 superior a 80%.</li> <li>Para que se env\u00eda una notificaci\u00f3n, la alerta tendr\u00e1 que producirse 3 veces consecutivas.</li> </ul> </li> <li>Disco de sistema:<ul> <li>La comprobaci\u00f3n se har\u00e1 cada minuto.</li> <li>El valor de la alerta para que se dispar\u00e9 ser\u00e1 superior a 80%.</li> <li>Para que se env\u00eda una notificaci\u00f3n, la alerta tendr\u00e1 que producirse 3 veces consecutivas.</li> </ul> </li> <li>Disco de los correos:<ul> <li>La comprobaci\u00f3n se har\u00e1 cada minuto.</li> <li>El valor de la alerta para que se dispar\u00e9 ser\u00e1 superior a 80%.</li> <li>Para que se env\u00eda una notificaci\u00f3n, la alerta tendr\u00e1 que producirse 3 veces consecutivas.</li> </ul> </li> <li>Disco de de los recursos compartidos:<ul> <li>La comprobaci\u00f3n se har\u00e1 cada minuto.</li> <li>El valor de la alerta para que se dispar\u00e9 ser\u00e1 superior a 80%.</li> <li>Para que se env\u00eda una notificaci\u00f3n, la alerta tendr\u00e1 que producirse 3 veces consecutivas.</li> </ul> </li> <li>DLM para el sistema:<ul> <li>La comprobaci\u00f3n se har\u00e1 una vez al d\u00eda.</li> <li>El valor de la alerta para que se dispar\u00e9 ser\u00e1 igual o superior a 1.</li> <li>Para que se env\u00eda una notificaci\u00f3n, la alerta tendr\u00e1 que producirse una \u00fanica vez.</li> </ul> </li> <li>DLM para el correo:<ul> <li>La comprobaci\u00f3n se har\u00e1 una vez al d\u00eda.</li> <li>El valor de la alerta para que se dispar\u00e9 ser\u00e1 igual o superior a 1.</li> <li>Para que se env\u00eda una notificaci\u00f3n, la alerta tendr\u00e1 que producirse una \u00fanica vez.</li> </ul> </li> <li>DLM para el recursos compartidos:<ul> <li>La comprobaci\u00f3n se har\u00e1 una vez al d\u00eda.</li> <li>El valor de la alerta para que se dispar\u00e9 ser\u00e1 igual o superior a 1.</li> <li>Para que se env\u00eda una notificaci\u00f3n, la alerta tendr\u00e1 que producirse una \u00fanica vez.</li> </ul> </li> <li>Comprobaciones fallidas de EC2:<ul> <li>La comprobaci\u00f3n se har\u00e1 cada minuto.</li> <li>El valor de la alerta para que se dispar\u00e9 ser\u00e1 superior a 80%.</li> <li>Para que se env\u00eda una notificaci\u00f3n, la alerta tendr\u00e1 que producirse 3 veces consecutivas.</li> </ul> </li> <li>Comprobaciones fallidas de la instancia:<ul> <li>La comprobaci\u00f3n se har\u00e1 cada minuto.</li> <li>El valor de la alerta para que se dispar\u00e9 ser\u00e1 superior a 80%.</li> <li>Para que se env\u00eda una notificaci\u00f3n, la alerta tendr\u00e1 que producirse 3 veces consecutivas.</li> </ul> </li> <li>Errores en el log de Zentyal:<ul> <li>La comprobaci\u00f3n se har\u00e1 una vez al d\u00eda.</li> <li>El valor de la alerta para que se dispar\u00e9 ser\u00e1 igual o superior a 1.</li> <li>Para que se env\u00eda una notificaci\u00f3n, la alerta tendr\u00e1 que producirse una \u00fanica vez.</li> </ul> </li> </ul>","tags":["AWS"]},{"location":"monitoring/#cpu","title":"CPU","text":"","tags":["AWS"]},{"location":"monitoring/#ram","title":"RAM","text":"","tags":["AWS"]},{"location":"monitoring/#disco-sistema","title":"Disco - Sistema","text":"","tags":["AWS"]},{"location":"monitoring/#disco-mail","title":"Disco - Mail","text":"","tags":["AWS"]},{"location":"monitoring/#disco-shares","title":"Disco - Shares","text":"","tags":["AWS"]},{"location":"monitoring/#dlm-sistema","title":"DLM - Sistema","text":"","tags":["AWS"]},{"location":"monitoring/#dlm-mail","title":"DLM - Mail","text":"","tags":["AWS"]},{"location":"monitoring/#dlm-shares","title":"DLM - Shares","text":"","tags":["AWS"]},{"location":"monitoring/#ec2-system","title":"EC2 - System","text":"","tags":["AWS"]},{"location":"monitoring/#ec2-instance","title":"EC2 - Instance","text":"","tags":["AWS"]},{"location":"monitoring/#log-de-zentyal","title":"Log de Zentyal","text":"","tags":["AWS"]},{"location":"recovery/","title":"Recovery","text":"<p>En esta p\u00e1gina se explicar\u00e1n las tres casu\u00edsticas relativas a recoveries que pueden darse, desde la 'm\u00e1s' probable hasta la 'menos'. En los tres casos se har\u00e1n uso de las pol\u00edticas de copias de seguridad DLM definidas en la p\u00e1gina de backup.</p>","tags":["AWS"]},{"location":"recovery/#recursos-compartidos","title":"Recursos compartidos","text":"<p>En este apartado simular\u00e9 que un usuario ha eliminado un archivo importante llamado <code>Nomimas 2023.pdf</code> en un recurso compartido llamado <code>rrhh</code>. El proceso general consistir\u00e1 en:</p> <ol> <li>Comprobaremos la existencia del recurso y posteriormente lo eliminaremos.</li> <li>Crearemos un volumen EBS de la \u00faltima snapshot disponible.</li> <li>Montaremos el volumen en una ubicaci\u00f3n temporal.</li> <li>Restauraremos el archivo eliminado.</li> <li>Comprobaremos que el usuario vuelve a tener el archivo y que \u00e9ste es accesible.</li> <li>Desmontamos y eliminamos el volumen.</li> </ol> <p>Para simular la p\u00e9rdida del documento importante, simplemente me conectar\u00e9 con el usuario, comprobar\u00e9 la existencia del documento y lo eliminar\u00e9.</p> <ol> <li> <p>Con el usuario comprobamos la existencia del documento en el recurso compartido:</p> <p></p> </li> <li> <p>Eliminamos el recurso:</p> <p></p> </li> </ol> <p>Con el desastre simulado, procederemos a su recuperaci\u00f3n.</p> <ol> <li> <p>Desde <code>EC2 -&gt; Elastic Block Store -&gt; Snapshots -&gt; Create volume from snapshot</code> seleccionamos la \u00faltima snapshot y creamos un volumen:</p> <p></p> </li> <li> <p>Configuramos el volumen temporal:</p> <p>Warning</p> <p>Deber\u00e1 crearse en la misma zona de disponibilidad.</p> <p> </p> </li> <li> <p>Verificamos que el volumen haya sido creado con \u00e9xito y que est\u00e9 disponible:</p> <p></p> </li> <li> <p>Asociamos el volumen a la instancia, para ello, vamos a <code>Actions -&gt; Attach volume</code>:</p> <p></p> </li> <li> <p>Nos conectamos v\u00eda SSH al servidor y verificamos que el sistema operativo detecta el nuevo volumen:</p> <pre><code>lsblk\n</code></pre> <p>En mi entorno, el volumen ha sido montado como <code>nvme3n1p1</code>:</p> <pre><code>NAME         MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nnvme0n1      259:0    0   30G  0 disk\n\u251c\u2500nvme0n1p1  259:2    0 29.9G  0 part /\n\u251c\u2500nvme0n1p14 259:3    0    4M  0 part\n\u2514\u2500nvme0n1p15 259:4    0  106M  0 part /boot/efi\nnvme2n1      259:1    0   10G  0 disk\n\u2514\u2500nvme2n1p1  259:5    0   10G  0 part /home\nnvme1n1      259:6    0   10G  0 disk\n\u2514\u2500nvme1n1p1  259:7    0   10G  0 part /var/vmail\nnvme3n1      259:8    0   10G  0 disk\n\u2514\u2500nvme3n1p1  259:9    0   10G  0 part\n</code></pre> </li> <li> <p>Creamos un directorio temporal donde montaremos el nuevo disco:</p> <pre><code>sudo mkdir -v /mnt/shares-recovery\n</code></pre> </li> <li> <p>Montamos el volumen:</p> <pre><code>sudo mount /dev/nvme3n1p1 /mnt/shares-recovery\n</code></pre> </li> <li> <p>Buscamos el documento en el recurso compartido <code>rrhh</code> en el directorio donde hemos montado el disco temporal:</p> <pre><code>sudo find /mnt/shares-recovery/samba/shares/rrhh/ -type f -exec ls -l {} \\;\n</code></pre> <p>Ejemplo en mi servidor:</p> <pre><code>-rwxrwx---+ 1 ICECROWN\\maria ICECROWN\\domain users 21377 Feb 27 20:57 '/mnt/shares-recovery/samba/shares/rrhh/Nominas 2023.pdf'\n</code></pre> </li> <li> <p>Una vez identificado el archivo, procedemos a su restauraci\u00f3n:</p> <pre><code>cp -vp /mnt/shares-recovery/samba/shares/rrhh/Nominas\\ 2023.pdf /home/samba/shares/rrhh/\n</code></pre> <p>Warning</p> <p>Es importante que usemos la opci\u00f3n <code>-p</code> para preservar los permisos del archivo, de lo contrario, el usuario no podr\u00e1 acceder a el.</p> </li> <li> <p>Desde el usuario, comprobaremos que el archivo fue recuperado y que es accesible:</p> <p></p> </li> <li> <p>Una vez hayamos confirmado la restauraci\u00f3n del fichero, procedemos a desmontar el disco y eliminar el directorio temporal creado:</p> <pre><code>sudo umount -v /mnt/shares-recovery\nsudo rmdir -v /mnt/shares-recovery\n</code></pre> </li> <li> <p>Desvinculamos el volumen EBS de la instancia, para ello, vamos a <code>Actions -&gt; Detach volume</code>:</p> <p></p> </li> <li> <p>Finalmente, eliminamos el volumen EBS desde <code>Actions -&gt; Delete volume</code>:</p> <p></p> </li> </ol>","tags":["AWS"]},{"location":"recovery/#correos","title":"Correos","text":"<p>El objetivo de este apartado es simular que un usuario llamado <code>maria</code> a eliminado un email llamado <code>Presupuesto 2023</code> con un adjunto. El proceso general es muy similar al anterior, que consiste de forma general en:</p> <ol> <li>Comprobaremos la existencia del email y posteriormente lo eliminaremos.</li> <li>Crearemos un volumen EBS de la \u00faltima snapshot disponible.</li> <li>Montaremos el volumen en una ubicaci\u00f3n temporal.</li> <li>Restauraremos el email eliminado.</li> <li>Comprobaremos que el usuario vuelve a tener acceso al email.</li> <li>Desmontamos y eliminamos el volumen.</li> </ol> <p>Para simular la p\u00e9rdida de un email importante, usar\u00e9 el webmail para verificar el correo y posteriormente, lo eliminar\u00e9.</p> <ol> <li> <p>Nos logeamos con el usuario y verificamos el email:</p> <p></p> </li> <li> <p>Eliminamos el email:</p> <p> </p> </li> </ol> <p>Ahora que tenemos simulado el desastre, procederemos a realizar las acciones necesarias para recuperar el email.</p> <ol> <li> <p>Desde <code>EC2 -&gt; Elastic Block Store -&gt; Snapshots -&gt; Create volume from snapshot</code> seleccionamos la \u00faltima snapshot y creamos un volumen:</p> <p></p> </li> <li> <p>Configuramos el volumen temporal:</p> <p>Warning</p> <p>Deber\u00e1 crearse en la misma zona de disponibilidad.</p> <p> </p> </li> <li> <p>Verificamos que el volumen haya sido creado con \u00e9xito y que est\u00e9 disponible:</p> <p></p> </li> <li> <p>Asociamos el volumen a la instancia, para ello, vamos a <code>Actions -&gt; Attach volume</code>:</p> <p></p> </li> <li> <p>Nos conectamos v\u00eda SSH al servidor y verificamos que el sistema operativo detecta el nuevo volumen:</p> <pre><code>lsblk\n</code></pre> <p>En mi entorno, el volumen ha sido montado como <code>nvme3n1p1</code>:</p> <pre><code>NAME         MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nnvme1n1      259:0    0   10G  0 disk\n\u2514\u2500nvme1n1p1  259:1    0   10G  0 part /var/vmail\nnvme0n1      259:2    0   30G  0 disk\n\u251c\u2500nvme0n1p1  259:5    0 29.9G  0 part /\n\u251c\u2500nvme0n1p14 259:6    0    4M  0 part\n\u2514\u2500nvme0n1p15 259:7    0  106M  0 part /boot/efi\nnvme2n1      259:3    0   10G  0 disk\n\u2514\u2500nvme2n1p1  259:4    0   10G  0 part /home\nnvme3n1      259:8    0   10G  0 disk\n\u2514\u2500nvme3n1p1  259:9    0   10G  0 part\n</code></pre> </li> <li> <p>Creamos un directorio temporal donde montaremos el nuevo disco:</p> <pre><code>sudo mkdir -v /mnt/mail-recovery\n</code></pre> </li> <li> <p>Montamos el volumen:</p> <pre><code>sudo mount /dev/nvme3n1p1 /mnt/mail-recovery\n</code></pre> </li> <li> <p>Buscamos el correo del usuario <code>maria</code> en el directorio donde hemos montado el disco temporal:</p> <pre><code>sudo find /mnt/mail-recovery/icecrown.es/maria/ -type f -exec ls -l {} \\;\n</code></pre> <p>Ejemplo en mi servidor:</p> <pre><code>-rw------- 1 ebox ebox 2180 Feb 27 21:36 /mnt/mail-recovery/icecrown.es/maria/Maildir/dovecot.index.cache\n-rw------- 1 ebox ebox 384 Feb 27 21:33 /mnt/mail-recovery/icecrown.es/maria/Maildir/dovecot.list.index.log\n-rw------- 1 ebox ebox 8 Feb 27 21:33 /mnt/mail-recovery/icecrown.es/maria/Maildir/dovecot-uidvalidity\n-rw------- 1 ebox ebox 102 Feb 27 21:36 /mnt/mail-recovery/icecrown.es/maria/Maildir/dovecot-uidlist\n-rw------- 1 ebox ebox 24 Feb 27 21:36 /mnt/mail-recovery/icecrown.es/maria/Maildir/maildirsize\n-r--r--r-- 1 ebox ebox 0 Feb 27 21:33 /mnt/mail-recovery/icecrown.es/maria/Maildir/dovecot-uidvalidity.63fd1386\n-rw------- 1 ebox ebox 31900 Feb 27 21:36 '/mnt/mail-recovery/icecrown.es/maria/Maildir/cur/1677530165.M104169P13132.arthas,S=31900,W=32366:2,S'\n-rw------- 1 ebox ebox 1124 Feb 27 21:37 /mnt/mail-recovery/icecrown.es/maria/Maildir/dovecot.index.log\n</code></pre> </li> <li> <p>Una vez identificado el correo, procedemos a su restauraci\u00f3n:</p> <pre><code>sudo cp -vp '/mnt/mail-recovery/icecrown.es/maria/Maildir/cur/1677530165.M104169P13132.arthas,S=31900,W=32366:2,S' /var/vmail/icecrown.es/maria/Maildir/cur/\n</code></pre> <p>Warning</p> <p>Es importante que se use la opci\u00f3n <code>-p</code> para preservar los permisos del archivo, de lo contrario, el usuario no podr\u00e1 acceder a el. Adem\u00e1s, tambi\u00e9n ser\u00e1 importante que la restauraci\u00f3n se haga en el mismo directorio, que en mi caso es: <code>icecrown.es/maria/Maildir/cur/</code>.</p> </li> <li> <p>Desde la cuenta del usuario de correo, verificamos que lo hemos recuperado junto con su adjunto.</p> <p> </p> </li> <li> <p>Una vez restaurado con \u00e9xito el email, procedemos a desmontar el disco y eliminar el directorio temporal creado:</p> <pre><code>sudo umount -v /mnt/mail-recovery\nsudo rmdir -v /mnt/mail-recovery\n</code></pre> </li> <li> <p>Desvinculamos el volumen EBS de la instancia, para ello, vamos a <code>Actions -&gt; Detach volume</code>:</p> <p></p> </li> <li> <p>Finalmente, eliminamos el volumen EBS desde <code>Actions -&gt; Delete volume</code>:</p> <p></p> </li> </ol>","tags":["AWS"]},{"location":"recovery/#sistema","title":"Sistema","text":"<p>Para este apartado simular\u00e9 que el sistema ha quedado totalmente inoperativo debido a que un administrador de sistemas ha eliminado accidentalmente el paquete <code>zentyal-core</code>. El proceso general consiste en:</p> <ol> <li>Provocaremos el desastre.</li> <li>Crearemos un volumen EBS de la \u00faltima snapshot disponible.</li> <li>Reemplazaremos el volumen de la instancia.</li> <li>Comprobaremos que el servidor vuelve a estar operativo.</li> <li>Eliminamos el volumen original.</li> </ol> <p>Para simular el desastre, lo que har\u00e9 ser\u00e1 eliminar el paquete <code>zentyal-core</code>.</p> <ol> <li> <p>Nos logeamos en el servidor a trav\u00e9s de SSH y comprobamos el estado de los paquetes de Zentyal:</p> <pre><code>dpkg -l | egrep 'zen(buntu|tyal)-'\n</code></pre> <p>El resultado obtenido en mi caso:</p> <pre><code>ii  zentyal-antivirus                     7.0.2                             all          Zentyal - Antivirus\nii  zentyal-ca                            7.0.1                             all          Zentyal - Certification Authority\nii  zentyal-core                          7.0.5                             all          Zentyal - Core\nii  zentyal-dns                           7.0.2                             all          Zentyal - DNS Server\nii  zentyal-firewall                      7.0.0                             all          Zentyal - Firewall\nii  zentyal-mail                          7.0.2                             all          Zentyal - Mail\nii  zentyal-mailfilter                    7.0.0                             all          Zentyal - Mail Filter\nii  zentyal-network                       7.0.0                             all          Zentyal - Network Configuration\nii  zentyal-ntp                           7.0.0                             all          Zentyal - NTP Service\nii  zentyal-openvpn                       7.0.0                             all          Zentyal - VPN\nii  zentyal-samba                         7.0.1                             all          Zentyal - Domain Controller and File Sharing\nii  zentyal-software                      7.0.0                             all          Zentyal - Software Management\nii  zentyal-sogo                          7.0.0                             all          Zentyal - Web Mail\n</code></pre> </li> <li> <p>Eliminamos el paquete <code>zentyal-core</code> para causar la inestabilidad:</p> <pre><code>sudo apt remove -y zentyal-core\n</code></pre> </li> <li> <p>Finalmente, confirmamos que los m\u00f3dulos se han desinstalado, dejando el servidor ha quedado inoperativo:</p> <pre><code>dpkg -l | egrep 'zen(buntu|tyal)-'\n</code></pre> <pre><code>rc  zentyal-antivirus                     7.0.2                             all          Zentyal - Antivirus\nrc  zentyal-ca                            7.0.1                             all          Zentyal - Certification Authority\nrc  zentyal-core                          7.0.5                             all          Zentyal - Core\nrc  zentyal-dns                           7.0.2                             all          Zentyal - DNS Server\nrc  zentyal-firewall                      7.0.0                             all          Zentyal - Firewall\nrc  zentyal-mail                          7.0.2                             all          Zentyal - Mail\nrc  zentyal-mailfilter                    7.0.0                             all          Zentyal - Mail Filter\nrc  zentyal-network                       7.0.0                             all          Zentyal - Network Configuration\nrc  zentyal-ntp                           7.0.0                             all          Zentyal - NTP Service\nrc  zentyal-openvpn                       7.0.0                             all          Zentyal - VPN\nrc  zentyal-samba                         7.0.1                             all          Zentyal - Domain Controller and File Sharing\nrc  zentyal-software                      7.0.0                             all          Zentyal - Software Management\nrc  zentyal-sogo                          7.0.0                             all          Zentyal - Web Mail\n</code></pre> </li> </ol> <p>Con el desastre correctamente implementado, procederemos a restaurarlo a trav\u00e9s de la \u00faltima snapshot disponible.</p> <ol> <li> <p>Desde <code>EC2 -&gt; Elastic Block Store -&gt; Snapshots -&gt; Create volume from snapshot</code> seleccionamos la \u00faltima snapshot y creamos un volumen:</p> <p></p> </li> <li> <p>Configuramos el volumen:</p> <p>Warning</p> <p>Deber\u00e1 crearse en la misma zona de disponibilidad.</p> <p> </p> </li> <li> <p>Verificamos que el volumen haya sido creado con \u00e9xito y que est\u00e9 disponible:</p> <p></p> </li> <li> <p>Paramos la instancia EC2, para ello, vamos a <code>EC2 -&gt; Instances -&gt; Instance state</code>:</p> <p></p> </li> <li> <p>Una vez parada, obtenemos el punto de montaje del volumen del sistema desde <code>EC2 -&gt; Elastic Block Store -&gt; Volumes</code> (opci\u00f3n Attached instances):</p> <p></p> </li> <li> <p>Desvinculamos el EBS del sistema desde <code>Actions -&gt; Detach volume</code>:</p> <p></p> </li> <li> <p>Asociamos el volumen creado en el paso 2 desde <code>Actions -&gt; Detach volume</code>:</p> <p> </p> <p>Warning</p> <p>El punto de montaje (Device name) deber\u00e1 ser el mismo que el obtenido en el paso 5.</p> </li> <li> <p>Iniciamos la instancia desde <code>EC2 -&gt; Instances -&gt; Instance state</code>:</p> <p></p> </li> <li> <p>Nos conectamos a la instancia y verificamos que volvemos a tener los paquetes correctamente instalados:</p> <pre><code>dpkg -l | egrep 'zen(buntu|tyal)-'\n</code></pre> <p>El resultado obtenido en mi caso:</p> <pre><code>ii  zentyal-antivirus                     7.0.2                             all          Zentyal - Antivirus\nii  zentyal-ca                            7.0.1                             all          Zentyal - Certification Authority\nii  zentyal-core                          7.0.5                             all          Zentyal - Core\nii  zentyal-dns                           7.0.2                             all          Zentyal - DNS Server\nii  zentyal-firewall                      7.0.0                             all          Zentyal - Firewall\nii  zentyal-mail                          7.0.2                             all          Zentyal - Mail\nii  zentyal-mailfilter                    7.0.0                             all          Zentyal - Mail Filter\nii  zentyal-network                       7.0.0                             all          Zentyal - Network Configuration\nii  zentyal-ntp                           7.0.0                             all          Zentyal - NTP Service\nii  zentyal-openvpn                       7.0.0                             all          Zentyal - VPN\nii  zentyal-samba                         7.0.1                             all          Zentyal - Domain Controller and File Sharing\nii  zentyal-software                      7.0.0                             all          Zentyal - Software Management\nii  zentyal-sogo                          7.0.0                             all          Zentyal - Web Mail\n</code></pre> </li> <li> <p>Eliminamos el volumen EBS inestable, para ello vamos a <code>EC2 -&gt; Elastic Block Store -&gt; Volumes -&gt; Delete volume</code>:</p> <p></p> </li> <li> <p>Finalmente, modificamos la etiqueta <code>Name</code> del nuevo volumen desde <code>Tags -&gt; Manage tags</code>:</p> <p> </p> </li> </ol>","tags":["AWS"]},{"location":"zentyal-bug-fixing/","title":"Bugfixing","text":"<p>En esta p\u00e1gina se explicar\u00e1n brevemente y se propondr\u00e1n soluciones a los bugs encontrados a fecha de (2023-02) que afectan al despliegue de Zentyal que hemos realizado en este proyecto.</p>","tags":["Zentyal"]},{"location":"zentyal-bug-fixing/#webadmin","title":"Webadmin","text":"<p>A continuaci\u00f3n los bugs en el m\u00f3dulo de Webadmin encontrados.</p>","tags":["Zentyal"]},{"location":"zentyal-bug-fixing/#saving-changes","title":"Saving changes","text":"<p>En la versi\u00f3n <code>7.0.5</code> del m\u00f3dulo <code>zentyal-core</code> existe este bug que hace que la interfaz de administraci\u00f3n se quede siempre con el mensaje guardando cambios.</p> <p>Para solucionar temporalmente la incidencia, hay que realizar lo siguiente:</p> <ol> <li> <p>En el archivo <code>/usr/share/perl5/EBox/WebAdmin.pm</code> modificamos el m\u00e9todo <code>_daemons</code> de la l\u00ednea 99 por el siguiente contenido:</p> <pre><code>sub _daemons\n{\nreturn [\n{ name =&gt; 'zentyal.webadmin-uwsgi' },\n{ name =&gt; 'zentyal.webadmin-nginx' }\n];\n}\n</code></pre> </li> <li> <p>Reiniciamos el m\u00f3dulo de Webadmin:</p> <pre><code>sudo zs webadmin restart\n</code></pre> </li> </ol> <p>Con esto, el bug se solucionar\u00e1 temporalmente.</p>","tags":["Zentyal"]},{"location":"zentyal-bug-fixing/#webmail","title":"Webmail","text":"<p>A continuaci\u00f3n los bugs en el m\u00f3dulo de Webmail encontrados.</p>","tags":["Zentyal"]},{"location":"zentyal-bug-fixing/#imaps","title":"IMAPS","text":"<p>La configuraci\u00f3n establecida por Zentyal para el protocolo IMAPS en el m\u00f3dulo de Webmail es correcta siempre y cuando se tenga un certificado reconocido. En caso de usar el que est\u00e1 configurado por defecto, al logearnos nos mostrar\u00e1 un error indicando que no puede acceder al buz\u00f3n del usuario.</p> <p>Este bug se encuentra en la versi\u00f3n <code>7.0.0</code> del paquete <code>zentyal-sogo</code>. Podemos ver la versi\u00f3n de nuestro paquete ejecutando el comando: <code>sudo dpkg -l zentyal-sogo</code>.</p> <p>Hay varias soluciones a este problema:</p> <ol> <li>Podemos modificar el par\u00e1metro de configuraci\u00f3n para que permita conexiones certificados inseguros en localhost.</li> <li>Podemos habilitar temporalmente el protocolo <code>IMAP</code> desde <code>Mail -&gt; General</code>.</li> <li>Podemos usar un certificado reconocido en el m\u00f3dulo de Webmail (Sogo) como se explica en la p\u00e1gina Certificates.</li> </ol> <p>En caso de que queramos aplicar la primera opci\u00f3n, tendremos que realizar las siguientes acciones:</p> <ol> <li> <p>En el archivo <code>/usr/share/perl5/EBox/SOGo.pm</code> editamos la l\u00ednea 265 y establecemos el siguiente contenido:</p> <pre><code>my $imapServer = ($mail-&gt;imap() ? '127.0.0.1:143' : '\"imaps://127.0.0.1:993/?tlsVerifyMode=allowInsecureLocalhost\"');\n</code></pre> </li> <li> <p>Reiniciamos los m\u00f3dulos: Webmail y Sogo:</p> <pre><code>sudo zs webadmin restart\nsudo zs sogo restart\n</code></pre> </li> <li> <p>Tratamos de iniciar nuevamente sesi\u00f3n en el Webmail para confirmar la soluci\u00f3n.</p> </li> </ol>","tags":["Zentyal"]},{"location":"zentyal-certificates/","title":"Certificados","text":"<p>Zentyal por defecto uso certificados auto firmados para sus m\u00f3dulos, incluyendo el uso del m\u00f3dulo de CA. Esta situaci\u00f3n provoca que se muestren warning como por ejemplo, usando clientes de correo o al acceder al webadmin o webmail. Es por esto que en esta p\u00e1gina se mostrar\u00e1 como generar certificados reconocidos emitidos por Let's Encrypt.</p> <p>Las acciones que realizar\u00e9 para el proyecto ser\u00e1n:</p> <ol> <li>Emitir\u00e9 2 certificados, teniendo uno de ellos dos subdominios:<ul> <li>M\u00f3dulo de webadmin: <code>arthas.icecrown.es</code></li> <li>M\u00f3dulo de correo y webmail: <code>mail.icecrown.es</code> y <code>webmail.icecrown.es</code></li> </ul> </li> <li>Usar\u00e9 el challenge de tipo HTTP.</li> <li>Usar\u00e9 la cuenta de correo <code>it.infra@icecrown.es</code> como cuenta de correo para la recepci\u00f3n de notificaciones por parte de Let's Encrypt.</li> </ol> <p>A continuaci\u00f3n se indican las acciones a realizar antes de proceder a la generaci\u00f3n de los certificados.</p> <ol> <li> <p>Instalamos los paquetes necesarios para la generaci\u00f3n de los certificados:</p> <pre><code>sudo apt update\nsudo apt install -y certbot python3-certbot-apache\n</code></pre> </li> <li> <p>Creamos una regla temporal en el firewall de Zentyal como en el security group de AWS que permita el protocolo HTTP para que el certificado pueda expedirse:</p> <p>Para el firewall de Zentyal: </p> <p>Para el security group de AWS: </p> <p>Nota</p> <p>Podremos eliminar esta regla una vez hayamos emitidos los certificados o la mantendremos para evitar tener que volver a establecerla cuando toque la renovaci\u00f3n de los certificados.</p> </li> <li> <p>Creamos la cuenta de correo que recibir\u00e1 las notificaciones:</p> <p></p> </li> <li> <p>Comprobaremos que desde el exterior podemos resolver los subdominios en cuesti\u00f3n:</p> <pre><code>dig arthas.icecrown.es @8.8.8.8\ndig mail.icecrown.es @8.8.8.8\ndig webmail.icecrown.es @8.8.8.8\n</code></pre> <p>El resultado que obtengo en mi caso es:</p> <pre><code>## Webadmin\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; arthas.icecrown.es @8.8.8.8\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 25953\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;arthas.icecrown.es.        IN  A\n\n;; ANSWER SECTION:\narthas.icecrown.es. 120 IN  A   15.237.168.75\n\n;; Query time: 20 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Sat Feb 18 22:20:39 CET 2023\n;; MSG SIZE  rcvd: 63\n\n## Mail\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; mail.icecrown.es @8.8.8.8\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 37980\n;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;mail.icecrown.es.      IN  A\n\n;; ANSWER SECTION:\nmail.icecrown.es.   300 IN  CNAME   arthas.icecrown.es.\narthas.icecrown.es. 120 IN  A   15.237.168.75\n\n;; Query time: 16 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Sat Feb 18 22:20:39 CET 2023\n;; MSG SIZE  rcvd: 82\n\n## Webmail\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; webmail.icecrown.es @8.8.8.8\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 45405\n;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;webmail.icecrown.es.       IN  A\n\n;; ANSWER SECTION:\nwebmail.icecrown.es.    300 IN  CNAME   arthas.icecrown.es.\narthas.icecrown.es. 120 IN  A   15.237.168.75\n\n;; Query time: 28 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Sat Feb 18 22:20:40 CET 2023\n;; MSG SIZE  rcvd: 85\n</code></pre> </li> </ol>","tags":["Zentyal"]},{"location":"zentyal-certificates/#webadmin","title":"Webadmin","text":"<p>Para generar el certificado para el Webadmin (panel de administraci\u00f3n) usaremos el paquete <code>python3-certbot-apache</code> en lugar de <code>python3-certbot-nginx</code> debido a que Zentyal ejecuta Nginx de forma personalizada, lo que provoca errores a la hora de generar certificados.</p> <ol> <li> <p>Generaremos el certificado:</p> <pre><code>sudo certbot certonly \\\n--apache \\\n--preferred-challenges http \\\n-m it.infra@icecrown.es \\\n--agree-tos \\\n-d arthas.icecrown.es\n</code></pre> <p>Un ejemplo del resultado:</p> <pre><code>Saving debug log to /var/log/letsencrypt/letsencrypt.log\nPlugins selected: Authenticator apache, Installer apache\nObtaining a new certificate\nPerforming the following challenges:\nhttp-01 challenge for arthas.icecrown.es\nEnabled Apache rewrite module\nWaiting for verification...\nCleaning up challenges\n\nIMPORTANT NOTES:\n- Congratulations! Your certificate and chain have been saved at:\n/etc/letsencrypt/live/arthas.icecrown.es/fullchain.pem\nYour key file has been saved at:\n/etc/letsencrypt/live/arthas.icecrown.es/privkey.pem\nYour cert will expire on 2023-05-19. To obtain a new or tweaked\nversion of this certificate in the future, simply run certbot\nagain. To non-interactively renew *all* of your certificates, run\n\"certbot renew\"\n- If you like Certbot, please consider supporting our work by:\n\nDonating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate\nDonating to EFF:                    https://eff.org/donate-le\n</code></pre> </li> <li> <p>Con el certificado generado, tendremos que modificar la plantilla de configuraci\u00f3n (stub) del m\u00f3dulo, para que dicho cambio sea persistente ante futuras actualizaciones del m\u00f3dulo por parte de Zentyal. Para ello, crearemos los directorios necesarios:</p> <pre><code>sudo mkdir -vp /etc/zentyal/stubs/core\n</code></pre> </li> <li> <p>Copiamos la plantilla a modificar:</p> <pre><code>sudo cp -v /usr/share/zentyal/stubs/core/nginx.conf.mas /etc/zentyal/stubs/core/\n</code></pre> </li> <li> <p>Modificamos en la plantilla reci\u00e9n copiada los siguientes par\u00e1metros de configuraci\u00f3n:</p> <pre><code>## Custom certificates issued on 18-02-2023 by Daniel\n# ssl_certificate &lt;% $zentyalconfdir %&gt;ssl/ssl.pem;\n# ssl_certificate_key &lt;% $zentyalconfdir %&gt;ssl/ssl.pem;\nssl_certificate  /etc/letsencrypt/live/arthas.icecrown.es/fullchain.pem;\nssl_certificate_key /etc/letsencrypt/live/arthas.icecrown.es/privkey.pem;\n</code></pre> </li> <li> <p>Opcionalmente, tambi\u00e9n modificar\u00e9 los siguientes par\u00e1metros de configuraci\u00f3n, cuyo valores ha han sido generados desde esta p\u00e1gina web.</p> <pre><code>## Custom configuration applied on 18-02-2023 by Daniel\n## https://ssl-config.mozilla.org/#server=nginx&amp;version=1.17.7&amp;config=intermediate&amp;openssl=1.1.1k&amp;hsts=false&amp;ocsp=false&amp;guideline=5.6\n# ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n# ssl_ciphers \"ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK\";\n# ssl_prefer_server_ciphers on;\nssl_protocols TLSv1.2 TLSv1.3;\nssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;\nssl_prefer_server_ciphers off;\n</code></pre> </li> <li> <p>Paramos el m\u00f3dulo del Webadmin, recargaremos Systemd y volvemos a iniciarlo para aplicar estos cambios:</p> <pre><code>sudo zs webadmin stop\nsudo systemctl daemon-reload\nsudo zs webadmin restart\n</code></pre> </li> <li> <p>Finalmente, accedemos al webadmin para confirmar que el certificado es correcto:</p> <p></p> </li> </ol>","tags":["Zentyal"]},{"location":"zentyal-certificates/#mail-y-webmail","title":"Mail y Webmail","text":"<p>Para los m\u00f3dulos Mail y Webmail usar\u00e9 el mismo certificado, es decir, el certificado ser\u00e1 emitido con 2 subdominios en lugar de 1.</p> <p>Generaremos el certificado:</p> <pre><code>sudo certbot certonly \\\n--apache \\\n--preferred-challenges http \\\n-m it.infra@icecrown.es \\\n--agree-tos \\\n-d mail.icecrown.es \\\n-d webmail.icecrown.es\n</code></pre> <p>Un ejemplo del resultado:</p> <pre><code>Saving debug log to /var/log/letsencrypt/letsencrypt.log\nPlugins selected: Authenticator apache, Installer apache\nObtaining a new certificate\nPerforming the following challenges:\nhttp-01 challenge for mail.icecrown.es\nhttp-01 challenge for webmail.icecrown.es\nEnabled Apache rewrite module\nWaiting for verification...\nCleaning up challenges\n\nIMPORTANT NOTES:\n- Congratulations! Your certificate and chain have been saved at:\n/etc/letsencrypt/live/mail.icecrown.es/fullchain.pem\nYour key file has been saved at:\n/etc/letsencrypt/live/mail.icecrown.es/privkey.pem\nYour cert will expire on 2023-05-19. To obtain a new or tweaked\nversion of this certificate in the future, simply run certbot\nagain. To non-interactively renew *all* of your certificates, run\n\"certbot renew\"\n- If you like Certbot, please consider supporting our work by:\n\nDonating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate\nDonating to EFF:                    https://eff.org/donate-le\n</code></pre> <p>Con el certificado correctamente generado, proceder\u00e9 a configurar los ambos m\u00f3dulos para que hagan uso de el.</p>","tags":["Zentyal"]},{"location":"zentyal-certificates/#webmail","title":"Webmail","text":"<p>Para este m\u00f3dulo, no ser\u00e1 necesario editar un stub, sino que simplemente habr\u00e1 que modificar el archivo de configuraci\u00f3n de Apache.</p> <ol> <li> <p>Modificamos el archivo de configuraci\u00f3n <code>/etc/apache2/sites-available/default-ssl.conf</code>:</p> <pre><code>## Custom certificates issued on 18-02-2023 by Daniel\n# SSLCertificateFile    /etc/ssl/certs/ssl-cert-snakeoil.pem\n# SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key\nSSLCertificateFile  /etc/letsencrypt/live/mail.icecrown.es/fullchain.pem\nSSLCertificateKeyFile /etc/letsencrypt/live/mail.icecrown.es/privkey.pem\n</code></pre> </li> <li> <p>Opcionalmente, tambi\u00e9n a\u00f1adir\u00e9 los siguientes par\u00e1metros de configuraci\u00f3n al final del archivo de configuraci\u00f3n. Los valores de los par\u00e1metros han sido generados desde esta p\u00e1gina web.</p> <pre><code>## Custom configuration applied on 18-02-2023 by Daniel\n## https://ssl-config.mozilla.org/#server=apache&amp;version=2.4.41&amp;config=intermediate&amp;openssl=1.1.1k&amp;hsts=false&amp;ocsp=false&amp;guideline=5.6\nSSLProtocol             all -SSLv3 -TLSv1 -TLSv1.1\nSSLCipherSuite          ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384\nSSLHonorCipherOrder     off\nSSLSessionTickets       off\n</code></pre> </li> <li> <p>Reiniciamos el servicio de Apache:</p> <pre><code>sudo systemctl restart apache2\n</code></pre> </li> <li> <p>Finalmente, accedemos al webadmin para confirmar que el certificado es correcto:</p> <p></p> </li> </ol>","tags":["Zentyal"]},{"location":"zentyal-certificates/#mail","title":"Mail","text":"<p>Para este m\u00f3dulo habr\u00e1 que modificar dos plantillas (stubs), una para el servicio SMTP (Postfix) y otra para IMAP/POP3 (Dovecot):</p> <ul> <li>main.cf.mas</li> <li>dovecot.conf.mas</li> </ul> <p>Las acciones a realizar son:</p> <ol> <li> <p>Creamos el directorio donde ubicaremos las plantillas:</p> <pre><code>sudo mkdir -vp /etc/zentyal/stubs/mail\n</code></pre> </li> <li> <p>Copiaremos las plantillas a modificar:</p> <pre><code>sudo sudo cp -v /usr/share/zentyal/stubs/mail/{main.cf,dovecot.conf}.mas /etc/zentyal/stubs/mail/\n</code></pre> </li> <li> <p>Modificamos la plantilla <code>main.cf.mas</code> para el servicio Postfix (SMTP):</p> <pre><code>## Custom certificates issued on 18-02-2023 by Daniel\n# smtpd_tls_key_file  = &lt;% $keyFile  %&gt;\n# smtpd_tls_cert_file = &lt;% $certFile %&gt;\nsmtpd_tls_key_file  = /etc/letsencrypt/live/mail.icecrown.es/privkey.pem\nsmtpd_tls_cert_file = /etc/letsencrypt/live/mail.icecrown.es/fullchain.pem\n</code></pre> </li> <li> <p>Modificamos la otra plantilla <code>dovecot.conf.mas</code> para el servicio Dovecot (IMAP/POP3):</p> <pre><code>## Custom certificates issued on 18-02-2023 by Daniel\n# ssl_cert =&lt;/etc/dovecot/private/dovecot.pem\n# ssl_key =&lt;/etc/dovecot/private/dovecot.pem\nssl_key  =&lt;/etc/letsencrypt/live/mail.icecrown.es/privkey.pem\nssl_cert =&lt;/etc/letsencrypt/live/mail.icecrown.es/fullchain.pem\n</code></pre> </li> <li> <p>Reiniciamos el m\u00f3dulo de correo para que se apliquen los cambios:</p> <pre><code>sudo zs mail restart\n</code></pre> </li> <li> <p>Finalmente, confirmamos que ambos servicios est\u00e1n usando correctamente el nuevo certificado. Para realizar dicha acci\u00f3n, podremos usar cliente de correo como Thunderbird o el comando <code>openssl</code> como ser\u00e1 mi caso:</p> <pre><code>openssl s_client -starttls smtp -showcerts -connect mail.icecrown.es:465 -servername mail.icecrown.es\nopenssl s_client -showcerts -connect mail.icecrown.es:993 -servername mail.icecrown.es\n</code></pre> <p>El resultado obtenido en mi caso ha sido:</p> <pre><code>## Para SMTP\nCONNECTED(00000003)\ndepth=2 C = US, O = Internet Security Research Group, CN = ISRG Root X1\nverify return:1\ndepth=1 C = US, O = Let's Encrypt, CN = R3\nverify return:1\ndepth=0 CN = mail.icecrown.es\nverify return:1\n---\nCertificate chain\n0 s:CN = mail.icecrown.es\ni:C = US, O = Let's Encrypt, CN = R3\n\n## Para IMAP\nCONNECTED(00000003)\ndepth=2 C = US, O = Internet Security Research Group, CN = ISRG Root X1\nverify return:1\ndepth=1 C = US, O = Let's Encrypt, CN = R3\nverify return:1\ndepth=0 CN = mail.icecrown.es\nverify return:1\n---\nCertificate chain\n0 s:CN = mail.icecrown.es\ni:C = US, O = Let's Encrypt, CN = R3\n</code></pre> </li> </ol>","tags":["Zentyal"]},{"location":"zentyal-configuration/","title":"Configuraci\u00f3n de Zentyal","text":"<p>En esta p\u00e1gina se abordar\u00e1 la configuraci\u00f3n del servidor Zentyal para que act\u00fae como servidor de correo y compartici\u00f3n de ficheros.</p>","tags":["Zentyal"]},{"location":"zentyal-configuration/#objetivos","title":"Objetivos","text":"<p>Las objetivos que se realizar\u00e1n ser\u00e1n:</p> <ol> <li>(Opcional) Desinstalaci\u00f3n de Snap.</li> <li>(Opcional) Configuraci\u00f3n adicional de los usuarios locales del sistema:<ul> <li>Modificaci\u00f3n del Prompt.</li> <li>Modificaciones sobre el historial.</li> <li>Configuraci\u00f3n para el editor <code>vim</code>.</li> </ul> </li> <li>Creaci\u00f3n de una partici\u00f3n SWAP.</li> <li>Configuraci\u00f3n de los vol\u00famenes EBS adicionales.</li> <li>Implementaci\u00f3n de quotas en el sistema de archivo.</li> <li>Configuraci\u00f3n de los siguientes m\u00f3dulos de Zentyal:<ul> <li>Logs</li> <li>Firewall</li> <li>Software</li> <li>NTP</li> <li>DNS</li> <li>Controlador de dominio</li> <li>Correo</li> <li>Webmail</li> <li>Antivirus</li> <li>Mailfilter</li> <li>CA</li> <li>OpenVPN</li> </ul> </li> </ol> <p>Al t\u00e9rmino de este documento, el servidor Zentyal quedar\u00e1 listo para usarse, aunque en siguientes documentos seguiremos estableciendo configuraciones adicionales como la configuraci\u00f3n de certificados emitidos por Let's Encrypt o configuraciones opciones pero altamente recomendables como por ejemplo, hardening del servicio de correo.</p>","tags":["Zentyal"]},{"location":"zentyal-configuration/#configuracion-opcional","title":"Configuraci\u00f3n opcional","text":"<p>En esta secci\u00f3n se realizar\u00e1n diversas configuraciones opcionales sobre el servidor Zentyal, por lo que se puede omitir e ir a la secci\u00f3n 'Configuraci\u00f3n previa'.</p>","tags":["Zentyal"]},{"location":"zentyal-configuration/#snap","title":"Snap","text":"<p>Como Zentyal no usa Snap, procederemos a su desinstalaci\u00f3n.</p> <ol> <li> <p>Paramos el servicio:</p> <pre><code>sudo systemctl stop snapd snapd.socket\n</code></pre> </li> <li> <p>Eliminamos el paquete:</p> <pre><code>sudo apt remove --purge -y snapd\n</code></pre> </li> <li> <p>Eliminamos los directorios que quedan en el sistema de archivos:</p> <pre><code>sudo rm -rf /root/snap/\n</code></pre> </li> </ol>","tags":["Zentyal"]},{"location":"zentyal-configuration/#prompt","title":"Prompt","text":"<p>Para mejorar la experiencia de usuario cuando realizamos tareas desde la CLI, procederemos a habilitar el color del prompt para los usuarios locales existentes y futuros.</p> <pre><code>for user in /root /home/ubuntu /home/djoven /etc/skel/; do\nsudo sed -i 's/#force_color_prompt/force_color_prompt/' $user/.bashrc\ndone\n</code></pre>","tags":["Zentyal"]},{"location":"zentyal-configuration/#historial","title":"Historial","text":"<p>Con la finalidad de almacenar m\u00e1s informaci\u00f3n en el historial personal de los usuarios y que adem\u00e1s, haya un timestamp que indique la fecha y hora en la que fue ejecutado determinado comando, a\u00f1adiremos una serie de opciones adicionales a los usuarios locales tanto existentes como futuros.</p> <pre><code>for user in /root /home/ubuntu /home/djoven /etc/skel/; do\nsudo tee -a $user/.bashrc &amp;&gt;/dev/null &lt;&lt;EOF\n## Custom options\nHISTTIMEFORMAT=\"%F %T  \"\nPROMPT_COMMAND='history -a'\nHISTIGNORE='clear:history'\nEOF\nsudo sed -i -e 's/HISTCONTROL=.*/HISTCONTROL=ignoreboth/' \\\n-e 's/HISTSIZE=.*/HISTSIZE=1000/' \\\n-e 's/HISTFILESIZE=.*/HISTFILESIZE=2000/' \\\n$user/.bashrc\ndone\n</code></pre>","tags":["Zentyal"]},{"location":"zentyal-configuration/#vim","title":"Vim","text":"<p>A\u00f1adiremos una configuraci\u00f3n personalizada sencilla para el editor de textos <code>vim</code> tanto para los usuarios existentes como futuros. Esta configuraci\u00f3n establecer\u00e1 lo siguiente:</p> <ul> <li>Tabulaci\u00f3n de 2 espacios.</li> <li>Habilita el resaltado de sintaxis.</li> <li>Muestra el n\u00famero de la l\u00edneas.</li> <li>Usa el esquema de color 'desert'</li> <li>Configura el editor para usar archivos Yaml.</li> </ul> <p>Para establecer la configuraci\u00f3n, simplemente habr\u00e1 que crear un archivo llamado <code>.vimrc</code> en el directorio personal de los usuarios.</p> <pre><code>for user in /root /home/ubuntu /home/djoven /etc/skel; do\nsudo tee -a $user/.vimrc &amp;&gt;/dev/null &lt;&lt;EOF\nset tabstop=2\nsyntax on\nset number\ncolor desert\nset shiftwidth=2\nauto FileType yaml,yml setlocal ai ts=2 sw=2 et\nEOF\ndone\n</code></pre>","tags":["Zentyal"]},{"location":"zentyal-configuration/#configuracion-previa","title":"Configuraci\u00f3n previa","text":"<p>A continuaci\u00f3n se realizan las configuraciones previas a la configuraci\u00f3n de los m\u00f3dulos de Zentyal. Salvo el apartado de <code>Vol\u00famenes EBS adicionales</code>, que ser\u00eda opcional, el resto deber\u00edan de implementarse.</p>","tags":["Zentyal"]},{"location":"zentyal-configuration/#particion-swap","title":"Partici\u00f3n SWAP","text":"<p>Es altamente recomendable configurar una partici\u00f3n SWAP en el servidor para incrementar la disponibilidad del servidor en caso de picos relacionados con la memoria RAM. Las acciones que realizaremos est\u00e1n documentadas aqu\u00ed.</p> <ol> <li> <p>Creamos un archivo vac\u00edo de 4GB, que ser\u00e1 el tama\u00f1o de nuestra partici\u00f3n SWAP:</p> <pre><code>sudo dd if=/dev/zero of=/swapfile1 bs=128M count=32\n</code></pre> </li> <li> <p>Establecemos los permisos para el archivo:</p> <pre><code>sudo chmod 0600 /swapfile1\n</code></pre> </li> <li> <p>Establecemos el archivo como una \u00e1rea de SWAP:</p> <pre><code>sudo mkswap /swapfile1\n</code></pre> </li> <li> <p>Habilitamos la partici\u00f3n SWAP de forma temporal:</p> <pre><code>sudo swapon /swapfile1\n</code></pre> </li> <li> <p>Verificamos que el sistema reconoce la nueva partici\u00f3n SWAP ejecutando los siguientes comandos:</p> <pre><code>sudo swapon -s\nsudo free -m\n</code></pre> <p>El resultado que deber\u00edamos obtener es:</p> <pre><code>## Comando 'swapon'\nFilename                Type        Size      Used    Priority\n/swapfile1              file        4194300      0          -2\n\n## comando 'free'\n                total        used        free      shared  buff/cache   available\nMem:           3875        1218         209           2        2447        2396\nSwap:          4095           0        4095\n</code></pre> </li> <li> <p>Establecemos la partici\u00f3n en el archivo de configuraci\u00f3n <code>/etc/fstab</code> para que persista ante el reinicio del servidor:</p> <pre><code>echo -e '\\n## SWAP partition 4GB\\n/swapfile1 swap swap defaults 0 0' | sudo tee -a /etc/fstab\n</code></pre> </li> <li> <p>Finalmente, comprobamos que la nueva entrada en el archivo no contenga errores de sintaxis:</p> <pre><code>sudo mount -a\n</code></pre> </li> </ol>","tags":["Zentyal"]},{"location":"zentyal-configuration/#volumenes-ebs-adicionales","title":"Vol\u00famenes EBS adicionales","text":"<p>En caso de que hayamos a\u00f1adido vol\u00famenes EBS adicionales - como ha sido mi caso para los buzones de correo y recursos compartidos -, procederemos a configurarlos y montarlos en el servidor.</p> <p>Nota</p> <p>Para el punto de montaje de los recursos compartidos, se podr\u00eda usar <code>/home/samba/</code> en lugar de <code>/home/</code>. No obstante, usando <code>/home/samba/</code> los directorios personales de los usuarios del dominio (compartidos en letra 'H' por defecto) no quedar\u00edan almacenados en el volumen EBS.</p> <ol> <li> <p>Listamos los vol\u00famenes con el comando:</p> <pre><code>lsblk\n</code></pre> <p>En mi caso concreto, me muestra el siguiente resultado:</p> <pre><code>NAME         MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nnvme1n1      259:0    0   10G  0 disk\nnvme0n1      259:1    0   30G  0 disk\n\u251c\u2500nvme0n1p1  259:2    0 29.9G  0 part /\n\u251c\u2500nvme0n1p14 259:3    0    4M  0 part\n\u2514\u2500nvme0n1p15 259:4    0  106M  0 part /boot/efi\nnvme2n1      259:5    0   10G  0 disk\n</code></pre> </li> <li> <p>En los vol\u00famenes <code>nvme1n1</code> y <code>nvme2n1</code> creamos una \u00fanica partici\u00f3n que ocupe todo el disco:</p> <pre><code>for disk in nvme1n1 nvme2n1; do\necho -e 'n\\np\\n\\n\\n\\nt\\n8e\\nw' | sudo fdisk /dev/$disk\ndone\n</code></pre> <p>Info</p> <p>'8e' estable como etiqueta 'Linux' a la partici\u00f3n.</p> </li> <li> <p>Revisamos que se hayan creado las particiones correctamente:</p> <pre><code>lsblk\n</code></pre> <p>En mi caso concreto, me muestra el siguiente resultado:</p> <pre><code>NAME         MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nnvme1n1      259:0    0   10G  0 disk\n\u2514\u2500nvme1n1p1  259:7    0   10G  0 part\nnvme0n1      259:1    0   30G  0 disk\n\u251c\u2500nvme0n1p1  259:2    0 29.9G  0 part /\n\u251c\u2500nvme0n1p14 259:3    0    4M  0 part\n\u2514\u2500nvme0n1p15 259:4    0  106M  0 part /boot/efi\nnvme2n1      259:5    0   10G  0 disk\n\u2514\u2500nvme2n1p1  259:8    0   10G  0 part\n</code></pre> </li> <li> <p>Establecemos como sistema de archivos <code>ext4</code> a las nuevas particiones:</p> <pre><code>for disk in nvme1n1p1 nvme2n1p1; do\nsudo mkfs -t ext4 /dev/$disk\ndone\n</code></pre> </li> <li> <p>Volvemos a revisar que todo haya ido bien con el comando:</p> <pre><code>lsblk -f\n</code></pre> <p>En mi caso concreto, me muestra el siguiente resultado:</p> <pre><code>NAME         FSTYPE LABEL           UUID                                 FSAVAIL FSUSE% MOUNTPOINT\nnvme1n1\n\u2514\u2500nvme1n1p1  ext4                   28e5471e-8fc1-48b5-8729-778c56a19b90\nnvme0n1\n\u251c\u2500nvme0n1p1  ext4   cloudimg-rootfs 418a4763-c829-4fb6-b538-9a38158da803   26.8G     7% /\n\u251c\u2500nvme0n1p14\n\u2514\u2500nvme0n1p15 vfat   UEFI            CBF7-D252                              99.2M     5% /boot/efi\nnvme2n1\n\u2514\u2500nvme2n1p1  ext4                   e903ff6f-c431-4e3a-92a1-9f476c66b3be\n</code></pre> </li> <li> <p>Creamos el directorio donde se montar\u00e1 el volumen EBS para los buzones de correo:</p> <pre><code>sudo mkdir -v -m0775 /var/vmail\n</code></pre> </li> <li> <p>Montamos temporalmente el volumen EBS que contendr\u00e1 los recursos compartidos:</p> <pre><code>sudo mount /dev/nvme2n1p1 /mnt\n</code></pre> </li> <li> <p>Copiamos el contenido del directorio <code>/home/</code> al directorio temporal donde hemos montado el volumen EBS:</p> <pre><code>sudo cp -aR /home/* /mnt/\n</code></pre> </li> <li> <p>Desmontamos el volumen EBS:</p> <pre><code>sudo umount /mnt\n</code></pre> </li> <li> <p>Obtenemos el identificador (UUID) de los vol\u00famenes:</p> <pre><code>sudo sudo blkid | egrep \"nvme[12]n1p1\"\n</code></pre> <p>En mi caso concreto, me muestra el siguiente resultado:</p> <pre><code>/dev/nvme2n1p1: UUID=\"28e5471e-8fc1-48b5-8729-778c56a19b90\" TYPE=\"ext4\" PARTUUID=\"558dd3b7-01\"\n/dev/nvme1n1p1: UUID=\"e903ff6f-c431-4e3a-92a1-9f476c66b3be\" TYPE=\"ext4\" PARTUUID=\"446d2929-01\"\n</code></pre> <p>Warning</p> <p>Recordad que el volumen para los mailboxes fue montado primero, por lo que su punto de montaje es <code>/dev/nvme1n1p1</code>.</p> </li> <li> <p>Establecemos en el archivo <code>/etc/fstab</code> el montaje de los vol\u00famenes EBS:</p> <pre><code>## AWS EBS - Mailboxes\nUUID=e903ff6f-c431-4e3a-92a1-9f476c66b3be /var/vmail ext4 defaults,noexec,nodev,nosuid 0 2\n## AWS EBS - Shares\nUUID=28e5471e-8fc1-48b5-8729-778c56a19b90 /home ext4 defaults,noexec,nodev,nosuid 0 2\n</code></pre> <p>Warning</p> <p>Tendr\u00e9is que cambiar el valor del par\u00e1metro <code>UUID</code> por vuestro valor obtenido en el paso 7.</p> </li> <li> <p>Montamos los vol\u00famenes para verificar que no hay errores de sintaxis en el archivo del paso anterior:</p> <pre><code>sudo mount -a\n</code></pre> </li> <li> <p>Finalmente, confirmamos que se hayan montado bien ejecutando los siguientes comandos:</p> <pre><code>mount | egrep 'nvme[12]n1p1'\ndf -h\n</code></pre> <p>En mi caso concreto, me muestra el siguiente resultado:</p> <pre><code>## Comando 'mount'\n/dev/nvme2n1p1 on /var/vmail type ext4 (rw,nosuid,nodev,noexec,relatime)\n/dev/nvme1n1p1 on /home type ext4 (rw,nosuid,nodev,noexec,relatime)\n\n## Comando 'df'\nFilesystem       Size  Used Avail Use% Mounted on\n/dev/root         29G  7.9G   21G  28% /\ndevtmpfs         1.9G     0  1.9G   0% /dev\ntmpfs            1.9G  4.0K  1.9G   1% /dev/shm\ntmpfs            388M  2.6M  386M   1% /run\ntmpfs            5.0M     0  5.0M   0% /run/lock\ntmpfs            1.9G     0  1.9G   0% /sys/fs/cgroup\n/dev/nvme2n1p1   9.8G   17M  9.3G   1% /var/vmail\n/dev/nvme1n1p1   9.8G  228K  9.3G   1% /home\n/dev/nvme0n1p15  105M  5.2M  100M   5% /boot/efi\n</code></pre> </li> </ol>","tags":["Zentyal"]},{"location":"zentyal-configuration/#quota","title":"Quota","text":"<p>Para poder hacer uso de las quotas que Zentyal permite establecer para limitar el uso de informaci\u00f3n que un usuario del dominio puede almacenar en el servidor, as\u00ed como para el tama\u00f1o m\u00e1ximo del buz\u00f3n de correo, es necesario instalar una serie de paquetes y habilitar su uso en el disco.</p> <p>Nota</p> <p>No es necesario habilitar la quota en el disco que contiene los buzones de correo, ya que Zentyal las gestiona de otra forma.</p> <ol> <li> <p>Instalamos los siguientes paquetes requeridos para instancias de AWS:</p> <pre><code>sudo apt update\nsudo apt install -y quota quotatool linux-modules-extra-aws\n</code></pre> </li> <li> <p>Establecemos las opciones de montaje adicionales en el volumen EBS de los recursos compartidos, para ello, editamos el archivo de configuraci\u00f3n <code>/etc/fstab</code>:</p> <pre><code>## AWS EBS - Shares\nUUID=28e5471e-8fc1-48b5-8729-778c56a19b90   /home   ext4    defaults,noexec,nodev,nosuid,usrjquota=quota.user,grpjquota=quota.group,jqfmt=vfsv0 0 2\n</code></pre> <p>Info</p> <p>Las opciones a\u00f1adidas han sido: <code>usrjquota</code>, <code>grpjquota</code> y <code>jqfmt</code>.</p> </li> <li> <p>Reiniciamos el servidor para que nos cargue el \u00faltimo kernel y podamos habilitar de forma seguridad las quotas:</p> <pre><code>sudo reboot\n</code></pre> </li> <li> <p>A\u00f1adimos el m\u00f3dulo de Quota al kernel:</p> <pre><code>sudo modprobe quota_v2\n</code></pre> </li> <li> <p>Persistimos el cambio anterior:</p> <pre><code>echo 'quota_v2' | sudo tee -a /etc/modules\n</code></pre> </li> <li> <p>Dejamos que el sistema compruebe las quotas y cree los archivos pertinentes:</p> <pre><code>sudo quotacheck -vugmf /home\n</code></pre> <p>El resultado que he obtenido en mi caso ha sido:</p> <pre><code>quotacheck: Scanning /dev/nvme1n1p1 [/home] done\nquotacheck: Checked 8 directories and 18 files\n</code></pre> </li> </ol>","tags":["Zentyal"]},{"location":"zentyal-configuration/#configuracion-de-los-modulos","title":"Configuraci\u00f3n de los m\u00f3dulos","text":"<p>A partir de este momento, ya podremos instalar, configurar y comprobar los m\u00f3dulos de Zentyal.</p>","tags":["Zentyal"]},{"location":"zentyal-configuration/#general","title":"General","text":"<p>Lo primero de todo que debemos hacer es configurar la base de Zentyal desde el men\u00fa <code>System -&gt; General</code>.</p> <ol> <li> <p>Estableceremos el idioma del panel de administraci\u00f3n as\u00ed como el puerto por el cual escuchar\u00e1 el m\u00f3dulo webadmin:</p> <p></p> </li> <li> <p>Despu\u00e9s, desde el mismo panel, establecemos el nombre del servidor y el dominio:</p> <p></p> <p>Warning</p> <p>En el momento en que habilitemos el m\u00f3dulo de controlador de dominio, estos 2 valores no podr\u00e1n cambiar.</p> </li> </ol>","tags":["Zentyal"]},{"location":"zentyal-configuration/#modulo-de-logs","title":"M\u00f3dulo de Logs","text":"<p>Inicialmente, habilitaremos los 'dominios' que hay disponibles, cambiaremos el tiempo de retenci\u00f3n a 30 d\u00edas para el firewall y 90 para los cambios del panel de administraci\u00f3n as\u00ed como login de los administradores:</p> <p></p>","tags":["Zentyal"]},{"location":"zentyal-configuration/#modulo-de-cortafuegos","title":"M\u00f3dulo de Cortafuegos","text":"<p>Para la configuraci\u00f3n de red que tenemos (interna) y los m\u00f3dulos que usaremos, las secciones del firewall que usaremos son:</p> <ul> <li>Filtering rules from internal networks to Zentyal</li> <li>Filtering rules from traffic coming out from Zentyal</li> </ul> <p>Las pol\u00edticas definidas por defecto en ambas secciones del firewall son seguras, no obstante, procederemos a a\u00f1adir una regla de tipo <code>LOG</code> para las conexiones por SSH, ya que siempre es buena idea tener la mayor informaci\u00f3n posible sobre este servicio tan cr\u00edtico. Para ello, iremos a <code>Firewall -&gt; Packet Filter -&gt; Filtering rules from internal networks to Zentyal</code> y a\u00f1adiremos la siguiente regla:</p> <p></p> <p>Quedando como resultado las siguientes reglas:</p> <p></p> <p>Consideraciones:</p> <ol> <li>Es importante que la nueva regla vaya por encima de la regla que acepta la conexi\u00f3n SSH, de lo contrario nunca se ejecutar\u00e1, ya que cuando una regla se cumple, no se siguen analizando el resto.</li> <li>Recordad que a parte de este firewall, tambi\u00e9n tenemos el de AWS (Security Group asociado a la instancia), por lo que tendremos que asegurarnos que ambos firewall tienen las mismas reglas.</li> <li>Se podr\u00eda configurar en el firewall de Zentyal que permita todo el tr\u00e1fico y despu\u00e9s, desde el security group ser m\u00e1s restrictivo, o viceversa, no obstante, es recomendable configurar ambos por igual.</li> </ol>","tags":["Zentyal"]},{"location":"zentyal-configuration/#modulo-de-software","title":"M\u00f3dulo de Software","text":"<p>Con la finalidad de tener nuestro servidor actualizado, habilitaremos y estableceremos la hora en la que se instalar\u00e1n las actualizaciones autom\u00e1ticamente. Adem\u00e1s, procederemos a instalar los m\u00f3dulos que vamos a usar.</p> <ol> <li> <p>Desde el men\u00fa <code>Software Management -&gt; Settings</code>, establecemos las configuraciones de las actualizaciones autom\u00e1ticas:</p> <p></p> <p>Nota</p> <p>Es altamente recomendable establecer una hora que sea posterior a las copias de seguridad del servidor como snapshots, as\u00ed tenemos un punto de restauraci\u00f3n estable en caso de que una actualizaci\u00f3n cause una incidencia cr\u00edtica.</p> </li> <li> <p>Despu\u00e9s, desde el men\u00fa <code>Software Management -&gt; Zentyal Components</code> procederemos a instalar \u00fanicamente los m\u00f3dulos que vamos a usar:</p> <p></p> <p>Info</p> <p>Tras instalarse los m\u00f3dulos, se crear\u00e1n autom\u00e1ticamente m\u00faltiples reglas en la secci\u00f3n <code>Filtering rules from internal networks to Zentyal</code> del firewall para permitir el accesos a estos m\u00f3dulos.</p> </li> </ol>","tags":["Zentyal"]},{"location":"zentyal-configuration/#modulo-de-ntp","title":"M\u00f3dulo de NTP","text":"<p>El primero de los m\u00f3dulos reci\u00e9n instalado que vamos a configurar es NTP, en \u00e9l estableceremos la zona horaria y los servidores NTP oficiales m\u00e1s pr\u00f3ximos geogr\u00e1ficamente donde est\u00e1 ubicado el servidor.</p> <ol> <li> <p>Vamos a <code>System -&gt; Date/Time</code> y establecemos la zona horaria:</p> <p></p> </li> <li> <p>Habilitamos la opci\u00f3n que permite sincronizar la hora con servidores externos:</p> <p></p> </li> <li> <p>Modificamos los servidores NTP establecidos por defecto, por los oficiales que tenemos disponibles en esta web:</p> <p></p> </li> <li> <p>Finalmente, habilitamos el m\u00f3dulo de NTP desde <code>Modules Status</code>:</p> <p></p> </li> </ol>","tags":["Zentyal"]},{"location":"zentyal-configuration/#modulo-de-dns","title":"M\u00f3dulo de DNS","text":"<p>El siguiente m\u00f3dulo que procederemos a configurar ser\u00e1 el DNS, el cual es cr\u00edtico para el funcionamiento del m\u00f3dulo de controlador de dominio y por dependencia, tambi\u00e9n el de correo.</p> <p>La configuraci\u00f3n que estableceremos ser\u00e1 m\u00ednima, ya que la gesti\u00f3n de los registros DNS la gestionaremos desde el panel de administraci\u00f3n donde tenemos contratado el dominio - Route 53 en mi caso -.</p> <ol> <li> <p>Creamos el dominio, el cual debe coincidir con el creado en <code>System -&gt; General</code>. Para ello, desde el men\u00fa lateral seleccionamos <code>DNS</code>:</p> <p></p> </li> <li> <p>Despu\u00e9s, comprobamos que la IP del servidor se haya registrado con \u00e9xito al dominio, para ello vamos al campo <code>Domain IP Addresses</code> del dominio reci\u00e9n creado:</p> <p></p> </li> <li> <p>Tambi\u00e9n revisamos que la IP se haya registrado para el nombre del servidor. En este caso, el campo es <code>Hostnames -&gt; IP Address</code>:</p> <p></p> </li> <li> <p>A continuaci\u00f3n, creamos los registros adicionales de tipo alias desde <code>Hostnames -&gt; Alias</code>. En mi caso, crear\u00e9 dos registros relativos al correo: <code>mail</code> y <code>webmail</code>.</p> <p></p> </li> <li> <p>Establecemos los servidores DNS forwarders, que en caso ser\u00e1n los de Cloudflare y Quad9:</p> <p></p> </li> <li> <p>Una ves establecida la configuraci\u00f3n del m\u00f3dulo, procederemos a habilitarlo desde <code>Modules Status</code>:</p> <p></p> </li> <li> <p>Finalmente, comprobamos que podemos resolver los registros DNS configurados desde el propio servidor. Para ello, ejecutaremos los siguientes comandos:</p> <pre><code>## Para el dominio\ndig icecrown.es\n\n## Para el nombre del servidor\ndig arthas.icecrown.es\n\n## Para los alias\ndig mail.icecrown.es\ndig webmail.icecrown.es\n</code></pre> <p>A continuaci\u00f3n, los resultados que he obtenido:</p> <pre><code>## Para el dominio\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; icecrown.es\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 11829\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: 517f093b1a488a630100000063ef1e5f33c655878c47e480 (good)\n;; QUESTION SECTION:\n;icecrown.es.           IN  A\n\n;; ANSWER SECTION:\nicecrown.es.        259200  IN  A   10.0.1.200\n\n;; Query time: 0 msec\n;; SERVER: 127.0.0.1#53(127.0.0.1)\n;; WHEN: Fri Feb 17 07:27:43 CET 2023\n;; MSG SIZE  rcvd: 84\n\n## Para el nombre del servidor\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; arthas.icecrown.es\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 53740\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: 0a10fe5bc110fbe20100000063ef1e79cd9a2652e62e1cba (good)\n;; QUESTION SECTION:\n;arthas.icecrown.es.        IN  A\n\n;; ANSWER SECTION:\narthas.icecrown.es. 259200  IN  A   10.0.1.200\n\n;; Query time: 0 msec\n;; SERVER: 127.0.0.1#53(127.0.0.1)\n;; WHEN: Fri Feb 17 07:28:09 CET 2023\n;; MSG SIZE  rcvd: 91\n\n## Para el alias 'mail'\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; mail.icecrown.es\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 62966\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: c5ac7f415fe066aa0100000063ef1e9c7e18da9abf7650f1 (good)\n;; QUESTION SECTION:\n;mail.icecrown.es.      IN  A\n\n;; ANSWER SECTION:\nmail.icecrown.es.   259200  IN  CNAME   arthas.icecrown.es.\narthas.icecrown.es. 259200  IN  A   10.0.1.200\n\n;; Query time: 0 msec\n;; SERVER: 127.0.0.1#53(127.0.0.1)\n;; WHEN: Fri Feb 17 07:28:44 CET 2023\n;; MSG SIZE  rcvd: 110\n\n## Para el alias 'webmail'\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; webmail.icecrown.es\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 40072\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: a1ff85fe806432700100000063ef1eb9ff2777f239f7c9a3 (good)\n;; QUESTION SECTION:\n;webmail.icecrown.es.       IN  A\n\n;; ANSWER SECTION:\nwebmail.icecrown.es.    259200  IN  CNAME   arthas.icecrown.es.\narthas.icecrown.es. 259200  IN  A   10.0.1.200\n\n;; Query time: 0 msec\n;; SERVER: 127.0.0.1#53(127.0.0.1)\n;; WHEN: Fri Feb 17 07:29:13 CET 2023\n;; MSG SIZE  rcvd: 113\n</code></pre> <p>Como se puede apreciar, el <code>status</code> de todos es 'NOERROR' y en 'ANSWER SECTION' muestra los registros DNS en cuesti\u00f3n.</p> </li> </ol> <p>Llegados a este punto, el m\u00f3dulo estar\u00eda configurado en Zentyal, no obstante, todav\u00eda queda crear los registros con la IP p\u00fablica del servidor en el proveedor DNS para que estos sean visibles externamente. A continuaci\u00f3n los pasos a realizar para AWS Route53:</p> <ol> <li> <p>Vamos a <code>Route 53 -&gt; Hosted zones -&gt; dominio</code> y creamos los mismos registros que en Zentyal pero con la IP p\u00fablica:</p> <p></p> </li> <li> <p>Esperamos unos minutos para que puedan replicarse globalmente.</p> </li> <li> <p>Finalmente, comprobamos la resoluci\u00f3n de los registros:</p> <pre><code>## Para el dominio\ndig @8.8.8.8 icecrown.es\n\n## Para el nombre del servidor\ndig @8.8.8.8 arthas.icecrown.es\n\n## Para los alias\ndig @8.8.8.8 mail.icecrown.es\ndig @8.8.8.8 webmail.icecrown.es\n</code></pre> <p>A continuaci\u00f3n, los resultados que he obtenido:</p> <pre><code>## Para el dominio\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; @8.8.8.8 icecrown.es\n; (1 server found)\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 7888\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;icecrown.es.           IN  A\n\n;; ANSWER SECTION:\nicecrown.es.        60  IN  A   15.237.168.75\n\n;; Query time: 16 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Fri Feb 17 07:30:36 CET 2023\n;; MSG SIZE  rcvd: 56\n\n## Para el nombre del servidor\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; @8.8.8.8 arthas.icecrown.es\n; (1 server found)\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 33376\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;arthas.icecrown.es.        IN  A\n\n;; ANSWER SECTION:\narthas.icecrown.es. 120 IN  A   15.237.168.75\n\n;; Query time: 36 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Fri Feb 17 07:30:56 CET 2023\n;; MSG SIZE  rcvd: 63\n\n## Para el alias 'mail'\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; @8.8.8.8 mail.icecrown.es\n; (1 server found)\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 46107\n;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;mail.icecrown.es.      IN  A\n\n;; ANSWER SECTION:\nmail.icecrown.es.   300 IN  CNAME   arthas.icecrown.es.\narthas.icecrown.es. 120 IN  A   15.237.168.75\n\n;; Query time: 16 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Fri Feb 17 07:31:29 CET 2023\n;; MSG SIZE  rcvd: 82\n\n## Para el alias 'webmail'\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; @8.8.8.8 webmail.icecrown.es\n; (1 server found)\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 9490\n;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;webmail.icecrown.es.       IN  A\n\n;; ANSWER SECTION:\nwebmail.icecrown.es.    300 IN  CNAME   arthas.icecrown.es.\narthas.icecrown.es. 120 IN  A   15.237.168.75\n\n;; Query time: 36 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Fri Feb 17 07:31:59 CET 2023\n;; MSG SIZE  rcvd: 85\n</code></pre> </li> </ol> <p>Tras confirmar el funcionamiento del dominio tanto internamente (desde Zentyal) como externamente, el m\u00f3dulo de DNS estar\u00e1 correctamente configurado y podremos proseguir con el siguiente m\u00f3dulo.</p>","tags":["Zentyal"]},{"location":"zentyal-configuration/#modulo-de-controlador-de-dominio","title":"M\u00f3dulo de Controlador de dominio","text":"<p>Una vez tenemos el m\u00f3dulo de DNS configurado, es el turno de configurar el controlador de dominio. En mi caso concreto, establecer\u00e9 las configuraciones opcionales:</p> <ul> <li>A\u00f1adir\u00e9 una descripci\u00f3n a la configuraci\u00f3n y confirmar\u00e9 que los perfiles m\u00f3viles est\u00e1n deshabilitados.</li> <li>Establecer\u00e9 una quota por defecto de 1GB para los usuarios del dominio (\u00fanicamente afectar\u00e1 a sus directorios personales).</li> <li>Confirmar\u00e9 que el PAM est\u00e1 deshabilitado, ya que no quiero que ning\u00fan usuario del dominio pueda hacer login mediante SSH o FTP.</li> </ul> <p>A continuaci\u00f3n las acciones a realizar para configurar el m\u00f3dulo:</p> <ol> <li> <p>Modificamos la descripci\u00f3n del servidor desde <code>Domain -&gt; Server description</code>.</p> <p></p> </li> <li> <p>Establecemos el valor que tendr\u00e1 la quota por defecto para los nuevos usuarios del dominio desde <code>Users and Computers -&gt; User Template</code>:</p> <p></p> </li> <li> <p>Revisamos que el PAM est\u00e1 deshabilitado desde <code>Users and Computers -&gt; LDAP Settings</code>:</p> <p></p> </li> <li> <p>Habilitamos el m\u00f3dulo:</p> <p></p> </li> <li> <p>Una vez que el m\u00f3dulo haya sido guardado y por ende, el controlador de dominio aprovisionado, comprobamos que la estructura de objetos por defecto se cre\u00f3 con \u00e9xito. Para ello, vamos a <code>Users and Computers -&gt; Manage</code>:</p> <p></p> </li> <li> <p>Finalmente, creamos un nuevo usuario administrador del dominio, en mi caso se llamar\u00e1 <code>zenadmin</code> y deber\u00e1 ser miembro del grupo de administradores <code>Domain Admins</code>:</p> <p></p> </li> </ol>","tags":["Zentyal"]},{"location":"zentyal-configuration/#modulo-de-correo","title":"M\u00f3dulo de Correo","text":"<p>Teniendo configurado el m\u00f3dulo de controlador de dominio, ya podremos configurar el m\u00f3dulo de correo, ya que por dependencia requiere que el anterior est\u00e9 habilitado previamente. En mi caso concreto, establecer\u00e9 las siguientes configuraciones opcionales:</p> <ul> <li>El usuario postmaster ser\u00e1 <code>postmaster@icecrown.es</code>.</li> <li>Establecer\u00e9 1GB como quota por defecto para los buzones de correo.</li> <li>El tama\u00f1o m\u00e1ximo de un mensaje aceptado ser\u00e1 de 25MB.</li> <li>Los emails eliminados en los buzones ser\u00e1 purgados autom\u00e1ticamente pasados 90 d\u00edas.</li> <li>Los correos en la carpeta de spam ser\u00e1 borrados autom\u00e1ticamente pasados 90 d\u00edas.</li> <li>La sincronizaci\u00f3n de cuentas de correo external mediante Fetchmail se har\u00e1n cada 5 minutos.</li> <li>\u00danicamente se permitir\u00e1 los protocolos IMAPS y POP3S.</li> <li>Fetchmail y Sieve estar\u00e1n deshabilitados, ya que inicialmente no los usar\u00e9.</li> <li>Se habilitar\u00e1 la lista gris, adem\u00e1s, se reducir\u00e1n a 24 horas para el reenv\u00edo de los emails y 30 d\u00edas como periodo de borrado.</li> </ul> <p>A continuaci\u00f3n las acciones a realizar para configurar el m\u00f3dulo:</p> <ol> <li> <p>Creamos el dominio virtual de correo, que ser\u00e1 el mismo que el dominio configurado en el m\u00f3dulo de DNS. Desde el men\u00fa lateral izquierdo iremos a <code>Mail -&gt; Virtual Mail Domains</code>:</p> <p></p> </li> <li> <p>Establecemos las configuraciones restrictivas opcionales mencionadas desde <code>Mail -&gt; General</code>:</p> <p></p> </li> <li> <p>Deshabilitamos Fetchmail y Sieve:</p> <p></p> </li> <li> <p>Tambi\u00e9n habilitamos la lista gris desde <code>Mail -&gt; Greylist</code>:</p> <p></p> </li> <li> <p>Habilitamos el m\u00f3dulo:</p> <p></p> </li> <li> <p>Creamos el registro de tipo <code>MX</code> en el dominio, que en mi caso, lo har\u00e9 desde Route53:</p> <p></p> <p>Adicionalmente, tambi\u00e9n lo crear\u00e9 en Zentyal, no obstante, al ser un alias habr\u00e1 que hacerlo usando la CLI:</p> <pre><code>sudo samba-tool dns add 127.0.0.1 icecrown.es icecrown.es MX \"mail.icecrown.es 10\" -U zenadmin\n</code></pre> </li> <li> <p>Comprobamos el nuevo registro DNS tanto interna como externamente:</p> <pre><code>dig MX icecrown.es\ndig @8.8.8.8 MX icecrown.es\n</code></pre> <p>En resultado que obtengo:</p> <pre><code>## Consulta interna\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; MX icecrown.es\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 432\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: 7d99083c5d639dad0100000063ef22121ec656087bc76972 (good)\n;; QUESTION SECTION:\n;icecrown.es.           IN  MX\n\n;; ANSWER SECTION:\nicecrown.es.        900 IN  MX  10 mail.icecrown.es.\n\n;; Query time: 8 msec\n;; SERVER: 127.0.0.1#53(127.0.0.1)\n;; WHEN: Fri Feb 17 07:43:30 CET 2023\n;; MSG SIZE  rcvd: 89\n\n## Consulta externa\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; @8.8.8.8 MX icecrown.es\n; (1 server found)\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 28263\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;icecrown.es.           IN  MX\n\n;; ANSWER SECTION:\nicecrown.es.        300 IN  MX  10 mail.icecrown.es.\n\n;; Query time: 36 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Fri Feb 17 07:44:00 CET 2023\n;; MSG SIZE  rcvd: 61\n</code></pre> </li> <li> <p>Creamos el usuario <code>postmaster@icecrown.es</code> especificado en el paso 2 y tambi\u00e9n un usuario de pruebas, que en mi caso se llamar\u00e1 <code>test.djoven</code> . Para ello, iremos a <code>Users and Computers -&gt; Manage</code>:</p> <p> </p> </li> </ol> <p>Finalmente, probaremos con un cliente de correo (Thunderbird en mi caso) a que podemos configurar la cuenta del usuario de pruebas creado:</p> <ol> <li> <p>Configuramos una nueva cuenta en Thunderbird:</p> <p></p> </li> <li> <p>Establecemos los datos de conexi\u00f3n con el servicio SMTPS e IMAPS:</p> <p></p> <p>Warning</p> <p>Hay que cambiar el tipo de autenticaci\u00f3n a 'Normal password', de lo contrario fallar\u00e1 la autenticaci\u00f3n.</p> </li> <li> <p>Tras confirmar la configuraci\u00f3n, nos saldr\u00e1 el siguiente mensaje de advertencia por el certificado, el cual es normal, ya que es un certificado auto-firmado por Zentyal:</p> <p></p> </li> <li> <p>Una vez confirmada la excepci\u00f3n de seguridad, deber\u00edamos de poder ver la cuenta de correo:</p> <p></p> </li> <li> <p>Enviamos un email de prueba a nosotros mismos y otro a una cuenta externa para confirmar el funcionamiento del m\u00f3dulo.</p> <p>Nota</p> <p>Cuando tratemos de enviar el mensaje, volveremos a recibir un error debido a que el certificado es auto-firmado, por lo que tendremos que hacerlo tambi\u00e9n.</p> <p></p> <p></p> </li> <li> <p>Si todo fue bien, deber\u00edamos de haber recibido el email tanto en la cuenta interna como externa y adem\u00e1s, en el log <code>/var/log/mail.log</code> deber\u00edamos de ver registros similares a:</p> <pre><code>Feb 17 07:02:41 ip-10-0-1-200 postfix/smtpd[27139]: connect from 36.red-45-4-127.staticip.rima-tde.net[88.6.127.36]\nFeb 17 07:02:41 ip-10-0-1-200 postfix/smtpd[27139]: 958BDFEEFC: client=36.red-45-4-127.staticip.rima-tde.net[88.6.127.36], sasl_method=PLAIN, sasl_username=test.\ndjoven@icecrown.es\nFeb 17 07:02:41 ip-10-0-1-200 postfix/cleanup[27145]: 958BDFEEFC: message-id=&lt;17715909-c13a-eed6-7f23-18f697740075@icecrown.es&gt;\nFeb 17 07:02:41 ip-10-0-1-200 postfix/qmgr[24894]: 958BDFEEFC: from=&lt;test.djoven@icecrown.es&gt;, size=681, nrcpt=2 (queue active)\nFeb 17 07:02:41 ip-10-0-1-200 dovecot: lda(test.djoven@icecrown.es)&lt;27148&gt;&lt;b1LEMJEm72MMagAAcf9/Kw&gt;: msgid=&lt;17715909-c13a-eed6-7f23-18f697740075@icecrown.es&gt;: sav\ned mail to INBOX\n\nFeb 17 07:02:41 ip-10-0-1-200 postfix/pipe[27146]: 958BDFEEFC: to=&lt;test.djoven@icecrown.es&gt;, relay=dovecot, delay=0.29, delays=0.24/0.01/0/0.03, dsn=2.0.0, status=sent (delivered via dovecot service)\n\nFeb 17 07:02:41 ip-10-0-1-200 postfix/smtpd[27139]: disconnect from 36.red-45-4-127.staticip.rima-tde.net[88.6.127.36] ehlo=2 starttls=1 auth=1 mail=1 rcpt=2 data=1 quit=1 commands=9\nFeb 17 07:02:42 ip-10-0-1-200 dovecot: imap-login: Disconnected (no auth attempts in 1 secs): user=&lt;&gt;, rip=88.6.127.36, lip=10.0.1.200, TLS handshaking: SSL_accept() failed: error:14094412:SSL routines:ssl3_read_bytes:sslv3 alert bad certificate: SSL alert number 42, session=&lt;mXZJ5t/0eLxYBn8k&gt;\n\nFeb 17 07:02:42 ip-10-0-1-200 postfix/smtp[27147]: 958BDFEEFC: to=&lt;external-account&gt;, relay=gmail-smtp-in.l.google.com[74.125.133.27]:25, delay=1, delays=0.24/0.01/0.08/0.67, dsn=2.0.0, status=sent (250 2.0.0 OK  1676617362 n13-20020adfe34d000000b002c56af91a8esi3912146wrj.115 - gsmtp)\n\nFeb 17 07:02:42 ip-10-0-1-200 postfix/qmgr[24894]: 958BDFEEFC: removed\n</code></pre> <p>Success</p> <p>Como se puede ver, el status de ambos emails es <code>sent</code>.</p> </li> </ol> <p>Llegados a este punto, el m\u00f3dulo de correo deber\u00eda ser totalmente funcional, no obstante, todav\u00eda est\u00e1 sin securizar, por lo que es conveniente no usarlo todav\u00eda hasta al menos, haber configurado y habilitado el m\u00f3dulo de Mailfilter. Adicionalmente, hay otro apartado en este proyecto llamado Hardening donde se incrementar\u00e1 todav\u00eda m\u00e1s la seguridad del m\u00f3dulo.</p> <p>Mencionar tambi\u00e9n que si el servidor est\u00e1 instalado en el proveedor cloud AWS, por defecto no se permite enviar emails (revisar la pen\u00faltima secci\u00f3n de la p\u00e1gina AWS).</p>","tags":["Zentyal"]},{"location":"zentyal-configuration/#modulo-de-webmail","title":"M\u00f3dulo de Webmail","text":"<p>El siguiente m\u00f3dulo a configurar ser\u00e1 el Webmail (Sogo), el cual nos permitir\u00e1 gestionar nuestra cuenta de correo desde un navegador web . Adem\u00e1s, desde el webmail un usuario podr\u00e1 cambiar su contrase\u00f1a.</p> <ol> <li> <p>Habilitamos el protocolo ActiveSync desde <code>Mail -&gt; ActiveSync</code> por si los usuarios quieren sincronizar sus dispositivos m\u00f3viles:</p> <p></p> </li> <li> <p>Habilitamos el m\u00f3dulo:</p> <p></p> </li> <li> <p>Comprobamos que podemos acceder a la p\u00e1gina de login desde un navegador web con la URL: https://arthas.icecrown.es/SOGo:</p> <p>Warning</p> <p>Nos mostrar\u00e1 un mensaje de advertencia por el certificado que usa el servicio, lo cual es normal ya que es auto-firmado.</p> <p></p> </li> <li> <p>Una vez aceptada la excepci\u00f3n, deberemos poder visualizar la p\u00e1gina de login:</p> <p></p> </li> <li> <p>Nos logeamos con el usuario de prueba para confirmar que la autenticaci\u00f3n funciona correctamente y que podemos ver nuestro buz\u00f3n:</p> <p></p> <p>Warning</p> <p>Si no vemos el buz\u00f3n de correo, es posible que estemos experimentando un bug existente, el cual se produce cuando no se tiene configurado los protocolos no seguros de correo y el certificado usado es auto-firmado. Para solucionarlo, ver la p\u00e1gina bug fixing.</p> </li> <li> <p>Finalmente, tratamos de enviar otro email a nosotros mismos para verificar la integraci\u00f3n con el m\u00f3dulo de correo:</p> <p></p> </li> </ol> <p>Llegados a este punto, el m\u00f3dulo es totalmente funcional, no obstante, establecer\u00e9 las siguientes configuraciones opcionales:</p> <ul> <li>Habilitar\u00e9 la opci\u00f3n de mensajes autom\u00e1ticos para las vacaciones, ya que por defecto est\u00e1 deshabilitada.</li> <li>Establecer\u00e9 inicialmente a 8 el n\u00famero de workers (procesos) que usar\u00e1 el m\u00f3dulo.</li> </ul> <p>A continuaci\u00f3n las acciones a realizar para aplicar las configuraciones opcionales:</p> <ol> <li> <p>Creamos el directorio que har\u00e1 de los cambios sobre las plantillas de configuraci\u00f3n (stubs) sean persistentes ante actualizaciones del m\u00f3dulo:</p> <pre><code>sudo mkdir -vp /etc/zentyal/stubs/sogo\n</code></pre> </li> <li> <p>Copiamos la plantilla de configuraci\u00f3n de Sogo <code>sogo.conf.mas</code>:</p> <pre><code>sudo cp -v /usr/share/zentyal/stubs/sogo/sogo.conf.mas /etc/zentyal/stubs/sogo/\n</code></pre> </li> <li> <p>Establecemos el par\u00e1metro <code>SOGoVacationEnabled</code> a <code>YES</code> en la plantilla reci\u00e9n copiada:</p> <pre><code>sudo sed -i 's/SOGoVacationEnabled.*/SOGoVacationEnabled = YES;/' /etc/zentyal/stubs/sogo/sogo.conf.mas\n</code></pre> </li> <li> <p>Reiniciamos el m\u00f3dulo de Webmail para aplicar el cambio:</p> <pre><code>sudo zs sogo restart\n</code></pre> </li> <li> <p>Nos logeamos en el Webadmin nuevamente y verificamos que desde <code>Preferences -&gt; Mail</code> ya tenemos la opci\u00f3n disponible:</p> <p></p> </li> <li> <p>Establecemos el valor del prefork en el archivo de configuraci\u00f3n <code>/etc/zentyal/sogo.conf</code>:</p> <pre><code>sed -i 's/#sogod_prefork.*/sogod_prefork=8/' /etc/zentyal/sogo.conf\n</code></pre> <p>Si tenemos muchos usuarios concurrentes usando el m\u00f3dulo, es posible que Sogo no pueda gestionar bien todas las peticiones, por lo que ser\u00e1 necesario incrementar este valor. Para detectar esta casu\u00edstica, simplemente habr\u00e1 que buscar registros en el log de Sogo ubicado en <code>/var/log/sogo/sogo.log</code> similares a la siguiente:</p> <pre><code>sogod [3252]: [ERROR] &lt;0x0x55c9db827250[WOWatchDog]&gt; No child available to handle incoming request!\n</code></pre> </li> <li> <p>Reiniciamos el m\u00f3dulo de Webmail para aplicar el cambio:</p> <pre><code>sudo zs sogo restart\n</code></pre> </li> <li> <p>Finalmente, comprobamos que el servicio se levanto con el nuevo valor aplicado:</p> <pre><code>ps -ef | grep sogod | head -1\n</code></pre> <p>En mi caso, el resultado obtenido del comando ha sido:</p> <pre><code>sogo 24430 1 0 00:40 ? 00:00:00 /usr/sbin/sogod -WOWorkersCount 8 -WOPidFile /var/run/sogo/sogo.pid -WOLogFile /var/log/sogo/sogo.log\n</code></pre> </li> </ol>","tags":["Zentyal"]},{"location":"zentyal-configuration/#modulo-de-antivirus","title":"M\u00f3dulo de Antivirus","text":"<p>El siguiente m\u00f3dulo que configuraremos ser\u00e1 el Antivirus. Si bien es cierto que este m\u00f3dulo consume mucha RAM, es necesario para el an\u00e1lisis de los emails que gestiona el m\u00f3dulo de mailfilter.</p> <p>La configuraci\u00f3n que podemos definir a este m\u00f3dulo desde el panel de administraci\u00f3n de Zentyal en la versi\u00f3n Development es inexistente, por lo que s\u00f3lo podremos habilitar el m\u00f3dulo y comprobar que la base de datos de firma est\u00e1 actualizada.</p> <ol> <li> <p>Habilitamos el m\u00f3dulo:</p> <p></p> </li> <li> <p>Actualizamos la base de datos de firmas:</p> <pre><code>sudo freshclam -v\n</code></pre> </li> <li> <p>Confirmamos que el m\u00f3dulo est\u00e9 activo:</p> <pre><code>sudo zs antivirus status\n</code></pre> </li> </ol> <p>En caso de usar una versi\u00f3n comercial, tendremos las siguientes funcionalidades adicionales descritas aqu\u00ed:</p> <ul> <li>An\u00e1lisis del sistema.</li> <li>Monitorizaci\u00f3n en directo de directorios.</li> </ul>","tags":["Zentyal"]},{"location":"zentyal-configuration/#modulo-de-mailfilter","title":"M\u00f3dulo de Mailfilter","text":"<p>Tras habilitar el Antivirus, procederemos a configurar el m\u00f3dulo de Mailfilter, el cual nos va a permitir incrementar considerablemente la seguridad sobre el servicio de correo de la organizaci\u00f3n.</p> <p>La configuraci\u00f3n que aplicar\u00e9 ser\u00e1:</p> <ul> <li>Usar\u00e9 la cuenta de correo <code>issues@icecrown.es</code> para las notificaciones de correos problem\u00e1ticos.</li> <li>Establecer\u00e9 en 5 el umbral de emails considerados SPAM.</li> <li>Tambi\u00e9n establecer\u00e9 a 5 el umbral de auto-learn.</li> <li>El dominio lo a\u00f1adir\u00e9 a la lista gris.</li> <li>Salvo la pol\u00edtica de cabeceras incorrectas, el resto ser\u00e1n denegadas.</li> <li>Deshabilitar\u00e9 ciertas extensiones que pueden suponer un riesgo de seguridad.</li> </ul> <p>A continuaci\u00f3n las acciones a realizar para configurar el m\u00f3dulo:</p> <ol> <li> <p>Habilitamos los servicios de este m\u00f3dulo y estableceremos un correo electr\u00f3nico para emails problem\u00e1ticos que no sean spam desde <code>Mail filter -&gt; SMTP Mail Filter</code>:</p> <p></p> </li> <li> <p>Establecemos las pol\u00edticas por defecto relativas al comportamiento del m\u00f3dulo ante ciertos eventos:</p> <p></p> </li> <li> <p>Establecemos las pol\u00edticas antispam desde <code>Mail Filter -&gt; Antispam</code>:</p> <p></p> </li> <li> <p>Opcionalmente, podemos a\u00f1adir nuestro dominio a la lista blanca para que no sea procesado por el m\u00f3dulo de Mailfilter:</p> <p></p> </li> <li> <p>Deshabilitamos las siguientes extensiones desde <code>Mail Filter -&gt; Files ACL -&gt; File extensions</code>:</p> <ul> <li>bas</li> <li>bat</li> <li>cmd</li> <li>dll</li> <li>exe</li> <li>ini</li> <li>msi</li> <li>reg</li> <li>sh</li> </ul> <p></p> </li> <li> <p>Habilitamos el m\u00f3dulo:</p> <p></p> </li> <li> <p>Creamos la cuenta de correo que hemos establecido en el paso 1 desde <code>Users and Computers -&gt; Manage</code>:</p> <p></p> </li> <li> <p>Nos enviamos un email sencillo desde un dominio externo y revisamos en el archivo de log <code>/var/log/mail.log</code> que el m\u00f3dulo lo haya analizado a trav\u00e9s del servicio Amavis:</p> <pre><code>Feb 18 11:18:57 arthas postfix/smtpd[18582]: connect from mail-lj1-f176.google.com[209.85.208.176]\nFeb 18 11:18:57 arthas postgrey[16618]: action=pass, reason=client whitelist, client_name=mail-lj1-f176.google.com, client_address=209.85.208.176/32, sender=some-account@gmail.com, recipient=test.djoven@icecrown.es\nFeb 18 11:18:57 arthas postfix/smtpd[18582]: A69DDFEF59: client=mail-lj1-f176.google.com[209.85.208.176]\nFeb 18 11:18:57 arthas postfix/cleanup[18587]: A69DDFEF59: message-id=&lt;CAHOKk5tCux0aM8WgNr_RQJ7YXBr1H6Er37AT5j9vvyJ1ZORSKw@mail.gmail.com&gt;\nFeb 18 11:18:57 arthas postfix/qmgr[18435]: A69DDFEF59: from=&lt;some-account@gmail.com&gt;, size=2749, nrcpt=1 (queue active)\nFeb 18 11:18:57 arthas amavis[18438]: (18438-01) ESMTP :10024 /var/lib/amavis/amavis-20230218T111857-18438-QzIlgFHk: &lt;some-account@gmail.com&gt; -&gt; &lt;test.djoven@icecrown.es&gt; SIZE=2749 Received: from mail.icecrown.es ([127.0.0.1]) by localhost (arthas.icecrown.es [127.0.0.1]) (amavisd-new, port 10024) with ESMTP for &lt;test.djoven@icecrown.es&gt;; Sat, 18 Feb 2023 11:18:57 +0100 (CET)\nFeb 18 11:18:57 arthas amavis[18438]: (18438-01) Checking: O_3VfGJTdv4Z [127.0.0.1] &lt;some-account@gmail.com&gt; -&gt; &lt;test.djoven@icecrown.es&gt;\nFeb 18 11:18:59 arthas amavis[18591]: (18438-01) SA info: util: setuid: ruid=128 euid=128 rgid=136 136 egid=136 136\nFeb 18 11:19:02 arthas postfix/smtpd[18592]: connect from localhost.localdomain[127.0.0.1]\nFeb 18 11:19:02 arthas postfix/smtpd[18592]: 8975FFEF70: client=localhost.localdomain[127.0.0.1]\nFeb 18 11:19:02 arthas postfix/cleanup[18587]: 8975FFEF70: message-id=&lt;CAHOKk5tCux0aM8WgNr_RQJ7YXBr1H6Er37AT5j9vvyJ1ZORSKw@mail.gmail.com&gt;\nFeb 18 11:19:02 arthas postfix/qmgr[18435]: 8975FFEF70: from=&lt;some-account@gmail.com&gt;, size=3762, nrcpt=1 (queue active)\n\nFeb 18 11:19:02 arthas amavis[18438]: (18438-01) O_3VfGJTdv4Z FWD from &lt;some-account@gmail.com&gt; -&gt; &lt;test.djoven@icecrown.es&gt;, BODY=7BIT 250 2.0.0 from MTA(smtp:[127.0.0.1]:10025): 250 2.0.0 Ok: queued as 8975FFEF70\nFeb 18 11:19:02 arthas amavis[18438]: (18438-01) Passed CLEAN, [127.0.0.1] &lt;some-account@gmail.com&gt; -&gt; &lt;test.djoven@icecrown.es&gt;, Message-ID: &lt;CAHOKk5tCux0aM8WgNr_RQJ7YXBr1H6Er37AT5j9vvyJ1ZORSKw@mail.gmail.com&gt;, Hits: -5.947\nFeb 18 11:19:02 arthas postfix/smtp[18588]: A69DDFEF59: to=&lt;test.djoven@icecrown.es&gt;, relay=127.0.0.1[127.0.0.1]:10024, delay=4.9, delays=0.07/0.01/0.01/4.9, dsn=2.0.0, status=sent (250 2.0.0 from MTA(smtp:[127.0.0.1]:10025): 250 2.0.0 Ok: queued as 8975FFEF70)\n\nFeb 18 11:19:02 arthas postfix/qmgr[18435]: A69DDFEF59: removed\n\nFeb 18 11:19:02 arthas dovecot: lda(test.djoven@icecrown.es)&lt;18594&gt;&lt;u/B4JBam8GOiSAAAcf9/Kw&gt;: msgid=&lt;CAHOKk5tCux0aM8WgNr_RQJ7YXBr1H6Er37AT5j9vvyJ1ZORSKw@mail.gmail.com&gt;: saved mail to INBOX\nFeb 18 11:19:02 arthas postfix/pipe[18593]: 8975FFEF70: to=&lt;test.djoven@icecrown.es&gt;, relay=dovecot, delay=0.09, delays=0.03/0.01/0/0.05, dsn=2.0.0, status=sent (delivered via dovecot service)\n\nFeb 18 11:19:02 arthas postfix/qmgr[18435]: 8975FFEF70: removed\n</code></pre> <p>Como se puede ver, el mensaje lleg\u00f3 desde una cuenta de GMail, fue analizado por el servicio 'Amavis', el cual lo puntu\u00f3 con '-5.947' por lo que lo d\u00edo por bueno y el mensaje lleg\u00f3 al buz\u00f3n de correo del usuario interno.</p> </li> <li> <p>Confirmado que los emails son correctamente recibidos, procederemos a comprobar mediante el env\u00edo de otro email con un archivo adjunto cuya extensi\u00f3n sea <code>.sh</code> - denegada en el paso 5 - desde una cuenta externa para confirmar el funcionamiento del m\u00f3dulo. A continuaci\u00f3n los registros registrados en el log  <code>/var/log/mail.log</code> relativos al \u00e9xito del bloqueo:</p> <pre><code>Feb 18 11:31:30 arthas postfix/smtpd[18720]: connect from mail-lj1-f171.google.com[209.85.208.171]\nFeb 18 11:31:30 arthas postgrey[16618]: action=pass, reason=client whitelist, client_name=mail-lj1-f171.google.com, client_address=209.85.208.171/32, sender=some-account@gmail.com, recipient=test.djoven@icecrown.es\nFeb 18 11:31:30 arthas postfix/smtpd[18720]: 79C12FEF59: client=mail-lj1-f171.google.com[209.85.208.171]\nFeb 18 11:31:30 arthas postfix/cleanup[18722]: 79C12FEF59: message-id=&lt;CAHOKk5uyuTatJ4c7_qp9oZsovphBziK_YDbUfHtO7Jkg89P5yQ@mail.gmail.com&gt;\nFeb 18 11:31:30 arthas postfix/qmgr[18435]: 79C12FEF59: from=&lt;some-account@gmail.com&gt;, size=3158, nrcpt=1 (queue active)\n\nFeb 18 11:31:30 arthas amavis[18438]: (18438-02) ESMTP :10024 /var/lib/amavis/amavis-20230218T111857-18438-QzIlgFHk: &lt;some-account@gmail.com&gt; -&gt; &lt;test.djoven@icecrown.es&gt; SIZE=3158 Received: from mail.icecrown.es ([127.0.0.1]) by localhost (arthas.icecrown.es [127.0.0.1]) (amavisd-new, port 10024) with ESMTP for &lt;test.djoven@icecrown.es&gt;; Sat, 18 Feb 2023 11:31:30 +0100 (CET)\nFeb 18 11:31:30 arthas amavis[18438]: (18438-02) Checking: BVbKQQ9S3o7N [127.0.0.1] &lt;some-account@gmail.com&gt; -&gt; &lt;test.djoven@icecrown.es&gt;\nFeb 18 11:31:30 arthas amavis[18438]: (18438-02) p.path BANNED:1 test.djoven@icecrown.es: \"P=p004,L=1,M=multipart/mixed | P=p003,L=1/2,M=application/x-shellscript,T=asc,N=sample-script.sh\", matching_key=\"(?^i:\\\\.sh$)\"\n\nFeb 18 11:31:30 arthas postfix/smtpd[18725]: connect from localhost.localdomain[127.0.0.1]\nFeb 18 11:31:30 arthas postfix/smtpd[18725]: AA4D5FEF71: client=localhost.localdomain[127.0.0.1]\nFeb 18 11:31:30 arthas postfix/cleanup[18722]: AA4D5FEF71: message-id=&lt;VABVbKQQ9S3o7N@arthas.icecrown.es&gt;\nFeb 18 11:31:30 arthas postfix/smtpd[18725]: disconnect from localhost.localdomain[127.0.0.1] ehlo=1 mail=1 rcpt=1 data=1 quit=1 commands=5\nFeb 18 11:31:30 arthas postfix/qmgr[18435]: AA4D5FEF71: from=&lt;postmaster@arthas.icecrown.es&gt;, size=4373, nrcpt=1 (queue active)\n\nFeb 18 11:31:30 arthas amavis[18438]: (18438-02) yMQxchA40B3f(BVbKQQ9S3o7N) SEND from &lt;postmaster@arthas.icecrown.es&gt; -&gt; &lt;issues@icecrown.es&gt;, ENVID=AM.yMQxchA40B3f.20230218T103130Z@arthas.icecrown.es 250 2.0.0 from MTA(smtp:[127.0.0.1]:10025): 250 2.0.0 Ok: queued as AA4D5FEF71\nFeb 18 11:31:30 arthas postfix/smtpd[18725]: connect from localhost.localdomain[127.0.0.1]\nFeb 18 11:31:30 arthas postfix/smtpd[18725]: B0E32FEF75: client=localhost.localdomain[127.0.0.1]\nFeb 18 11:31:30 arthas postfix/cleanup[18722]: B0E32FEF75: message-id=&lt;VSBVbKQQ9S3o7N@arthas.icecrown.es&gt;\nFeb 18 11:31:30 arthas postfix/smtpd[18725]: disconnect from localhost.localdomain[127.0.0.1] ehlo=1 mail=1 rcpt=1 data=1 quit=1 commands=5\nFeb 18 11:31:30 arthas postfix/qmgr[18435]: B0E32FEF75: from=&lt;&gt;, size=6606, nrcpt=1 (queue active)\n\nFeb 18 11:31:30 arthas amavis[18438]: (18438-02) jkDgUKQwzSN1(BVbKQQ9S3o7N) SEND from &lt;&gt; -&gt; &lt;some-account@gmail.com&gt;, BODY=7BIT ENVID=AM.jkDgUKQwzSN1.20230218T103130Z@arthas.icecrown.es 250 2.0.0 from MTA(smtp:[127.0.0.1]:10025): 250 2.0.0 Ok: queued as B0E32FEF75\nFeb 18 11:31:30 arthas amavis[18438]: (18438-02) Blocked BANNED (application/x-shellscript,.asc,sample-script.sh), [127.0.0.1] &lt;some-account@gmail.com&gt; -&gt; &lt;test.djoven@icecrown.es&gt;, Message-ID: &lt;CAHOKk5uyuTatJ4c7_qp9oZsovphBziK_YDbUfHtO7Jkg89P5yQ@mail.gmail.com&gt;, Hits: -\nFeb 18 11:31:30 arthas postfix/smtp[18723]: 79C12FEF59: to=&lt;test.djoven@icecrown.es&gt;, relay=127.0.0.1[127.0.0.1]:10024, delay=0.29, delays=0.08/0.01/0/0.2, dsn=2.5.0, status=sent (250 2.5.0 Ok, id=18438-02, BOUNCE)\nFeb 18 11:31:30 arthas postfix/qmgr[18435]: 79C12FEF59: removed\n\nFeb 18 11:31:30 arthas dovecot: lda(issues@icecrown.es)&lt;18727&gt;&lt;zrubKwKp8GMnSQAAcf9/Kw&gt;: msgid=&lt;VABVbKQQ9S3o7N@arthas.icecrown.es&gt;: saved mail to INBOX\nFeb 18 11:31:30 arthas postfix/pipe[18726]: AA4D5FEF71: to=&lt;issues@icecrown.es&gt;, relay=dovecot, delay=0.07, delays=0.02/0.01/0/0.04, dsn=2.0.0, status=sent (delivered via dovecot service)\nFeb 18 11:31:30 arthas postfix/qmgr[18435]: AA4D5FEF71: removed\n\nFeb 18 11:31:31 arthas postfix/smtp[18728]: B0E32FEF75: to=&lt;some-account@gmail.com&gt;, relay=gmail-smtp-in.l.google.com[173.194.76.27]:25, delay=0.47, delays=0.02/0.01/0.08/0.36, dsn=2.0.0, status=sent (250 2.0.0 OK  1676716291 o14-20020a5d62ce000000b002c58cc4a950si7000660wrv.22 - gsmtp)\nFeb 18 11:31:31 arthas postfix/qmgr[18435]: B0E32FEF75: removed\n</code></pre> <p>Como se puede apreciar, el email procedente de una cuenta de GMail lleg\u00f3 al servidor, el servicio de Amavis lo analiz\u00f3 y deneg\u00f3 debido a la extensi\u00f3n del archivo adjunto. A continuaci\u00f3n se lo notific\u00f3 a la cuenta <code>issues@icecrown.es</code> y finalmente, devolvi\u00f3 el correo a la cuenta externa.</p> </li> <li> <p>Finalmente, confirmamos que la cuenta <code>issues@icecrown.es</code> tiene un email con nuestra \u00faltima prueba.</p> <p></p> </li> </ol> <p>Llegados a este punto, nuestro servicio de correo es lo suficientemente seguro para ser utilizado en producci\u00f3n. No obstante, es altamente recomendable configurar como m\u00ednimo SPF y DKIM e idealmente, DMARC. Estas configuraciones relativas a la seguridad se tratan en la p\u00e1gina Hardening. Adicionalmente, tambi\u00e9n es recomendable establecer certificados emitidos por entidades certificadoras reconocidas como Let's Encrypt. Nuevamente, esto ser\u00e1 tratado en otra p\u00e1gina del proyecto, concretamente en Certificates.</p>","tags":["Zentyal"]},{"location":"zentyal-configuration/#modulo-de-ca","title":"M\u00f3dulo de CA","text":"<p>Para poder hacer uso del m\u00f3dulo de OpenVPN, necesitaremos configurar previamente el m\u00f3dulo de CA, el cual es extremadamente sencillo de configurar.</p> <ol> <li> <p>Creamos nuestra entidad de certificaci\u00f3n desde <code>Certificate Authority -&gt; General</code>:</p> <p></p> </li> <li> <p>Finalmente, guardamos cambios para que se cree nuestra CA.</p> <p>Info</p> <p>Este m\u00f3dulo no tiene posibilidad de 'habilitarse' como el resto.</p> </li> </ol> <p>Adicionalmente, es posible emitir certificados para los m\u00f3dulos que estamos usando con el CommonName correctos, no obstante, como vamos a emitir certificados reconocidos a trav\u00e9s de Let's Encrypt, no haremos uso de tal funcionalidad. De querer usarse, habr\u00eda que ir a <code>Certificate Authority -&gt; Services</code> como se indica a continuaci\u00f3n:</p> <p></p>","tags":["Zentyal"]},{"location":"zentyal-configuration/#modulo-de-openvpn","title":"M\u00f3dulo de OpenVPN","text":"<p>El \u00faltimo m\u00f3dulo que configuraremos ser\u00e1 el de OpenVPN. La finalidad de usar este m\u00f3dulo es permitir que los usuarios del dominio puedan hacer uso de los recursos compartidos configurados en el m\u00f3dulo de controlador de dominio de forma segura estando en cualquier ubicaci\u00f3n.</p> <p>Las configuraciones que establecer\u00e9 ser\u00e1n:</p> <ul> <li>Como medida de seguridad adicional, \u00fanicamente se permitir\u00e1 el acceso usando certificados cuyo CommonName tengan el prefijo: <code>Icecrown-RC-</code>.</li> <li>El certificado usado como prefijo para la conexi\u00f3n VPN, tendr\u00e1 una validez de 120 d\u00edas. No obstante, hay que tener en cuenta que definiendo ese valor nos forzar\u00e1 a tener que realizar tareas de mantenimiento cada 4 meses.</li> <li>Se usar\u00e1 un puerto y direcci\u00f3n VPN distintas al por defecto.</li> </ul> <p>A continuaci\u00f3n las acciones a realizar para configurar el m\u00f3dulo:</p> <ol> <li> <p>Creamos el certificado cuyo nombre usaremos como. Para ello, vamos a <code>Certificate Authority -&gt; General</code>:</p> <p></p> </li> <li> <p>Creamos la conexi\u00f3n VPN desde <code>VPN -&gt; Servers</code>:</p> <p></p> </li> <li> <p>Configuramos la conexi\u00f3n desde <code>VPN -&gt; Servers -&gt; Configuration</code>:</p> <p> </p> </li> <li> <p>Confirmamos que la red internal de servidor est\u00e1 configurada en la conexi\u00f3n VPN, para ello vamos a <code>VPN -&gt; Servers -&gt; Advertised networks</code>:</p> <p></p> </li> <li> <p>Habilitamos el m\u00f3dulo:</p> <p></p> </li> <li> <p>Creamos un servicio de red con el puerto de la conexi\u00f3n VPN definida:</p> <p> </p> <p>Warning</p> <p>Recordad que el protocolo es UDP.</p> </li> <li> <p>Finalmente, creamos una regla en el firewall de Zentyal que permita la conexi\u00f3n y guardamos cambios:</p> <p></p> </li> </ol> <p>Con el m\u00f3dulo ya configurado, creamos un certificado, usuario y recurso compartido para confirmar el funcionamiento de este m\u00f3dulo por completo. Para ello, realizamos las siguientes acciones:</p> <ol> <li> <p>Creamos un certificado:</p> <p></p> </li> <li> <p>Creamos un usuario del dominio:</p> <p></p> </li> <li> <p>Creamos una carpeta compartida con permisos de lectura y escritura para el usuario de pruebas creado:</p> <p> </p> </li> <li> <p>Guardamos los cambios.</p> </li> <li> <p>Descargamos un bundle con la configuraci\u00f3n de la conexi\u00f3n VPN para el cliente, para ello vamos a <code>VPN -&gt; Servers -&gt; Download client bundle</code>:</p> <p>Nota</p> <p>Para este ejemplo concreto, para la m\u00e1quina del cliente usar\u00e9 un Windows 10 con OpenVPN ya instalado.</p> <p></p> </li> <li> <p>Copiamos el bundle al cliente desde donde queramos establecer la conexi\u00f3n VPN y configuramos el cliente de OpenVPN:</p> <p></p> </li> <li> <p>Establecemos la conexi\u00f3n desde el cliente de OpenVPN. Si todo fue bien, podremos ver en el archivo de log de la conexi\u00f3n VPN de Zentyal llamado <code>/var/log/openvpn/Icecrown-RecursosCompartidos.log</code> unos registros similares a:</p> <pre><code>Sat Feb  4 20:51:33 2023 88.6.127.36:35754 TLS: Initial packet from [AF_INET]88.6.127.36:35754 (via [AF_INET]10.0.1.200%ens5), sid=7c56b72b 70d7b663\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 VERIFY OK: depth=1, C=ES, ST=Spain, L=Zaragoza, O=Icecrown CA, CN=Icecrown CA Authority Certificate\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 VERIFY X509NAME OK: C=ES, ST=Spain, L=Zaragoza, O=Icecrown CA, CN=Icecrown-RC-Maria\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 VERIFY OK: depth=0, C=ES, ST=Spain, L=Zaragoza, O=Icecrown CA, CN=Icecrown-RC-Maria\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_VER=2.6.0\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_PLAT=win\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_TCPNL=1\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_MTU=1600\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_NCP=2\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_CIPHERS=AES-256-GCM:AES-128-GCM\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_PROTO=478\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_LZ4=1\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_LZ4v2=1\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_LZO=1\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_COMP_STUB=1\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_COMP_STUBv2=1\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_GUI_VER=OpenVPN_GUI_11\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_SSO=openurl,webauth,crtext\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 WARNING: 'tun-mtu' is used inconsistently, local='tun-mtu 1532', remote='tun-mtu 1500'\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 WARNING: 'cipher' is present in local config but missing in remote config, local='cipher AES-256-CBC'\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 Control Channel: TLSv1.3, cipher TLSv1.3 TLS_AES_256_GCM_SHA384, 4096 bit RSA\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 [Icecrown-RC-Maria] Peer Connection Initiated with [AF_INET]88.6.127.36:35754 (via [AF_INET]10.0.1.200%ens5)\nSat Feb  4 20:51:33 2023 Icecrown-RC-Maria/88.6.127.36:35754 MULTI_sva: pool returned IPv4=192.168.210.2, IPv6=(Not enabled)\nSat Feb  4 20:51:34 2023 Icecrown-RC-Maria/88.6.127.36:35754 PUSH: Received control message: 'PUSH_REQUEST'\nSat Feb  4 20:51:34 2023 Icecrown-RC-Maria/88.6.127.36:35754 SENT CONTROL [Icecrown-RC-Maria]: 'PUSH_REPLY,route 10.0.1.0 255.255.255.0,route-gateway 192.168.210.1,ping 10,ping-restart 120,ifconfig 192.168.210.2 255.255.255.0,peer-id 0,cipher AES-256-GCM' (status=1)\nSat Feb  4 20:51:34 2023 Icecrown-RC-Maria/88.6.127.36:35754 Data Channel: using negotiated cipher 'AES-256-GCM'\nSat Feb  4 20:51:34 2023 Icecrown-RC-Maria/88.6.127.36:35754 Outgoing Data Channel: Cipher 'AES-256-GCM' initialized with 256 bit key\nSat Feb  4 20:51:34 2023 Icecrown-RC-Maria/88.6.127.36:35754 Incoming Data Channel: Cipher 'AES-256-GCM' initialized with 256 bit key\nSat Feb  4 20:51:34 2023 Icecrown-RC-Maria/88.6.127.36:35754 MULTI: Learn: 00:ff:83:a2:23:96 -&gt; Icecrown-RC-Maria/88.6.127.36:35754\n</code></pre> </li> <li> <p>Una vez la conexi\u00f3n ha sido establecida, desde el navegador de archivos, estableceremos la URL del servidor, que en mi caso es: <code>\\\\arthas.icecrown.es</code>. Tras lo cual, nos pedir\u00e1 las credenciales del usuario.</p> <p></p> </li> <li> <p>Tras logearnos, deber\u00edamos de ver el directorio personal del usuario y los recursos compartidos.</p> <p></p> </li> <li> <p>A\u00f1adimos un archivo a los recursos <code>Maria</code> y <code>rrhh</code> y verificamos su creaci\u00f3n desde la CLI del servidor Zentyal:</p> <pre><code>ls -l /home/maria/test-file-1.txt\n    -rwxrwx--x+ 1 ICECROWN\\maria ICECROWN\\domain users 0 Feb  4 20:56 /home/maria/test-file-1.txt\n\nls -l /home/samba/shares/rrhh/test-file-2.txt\n    -rwxrwx---+ 1 ICECROWN\\maria ICECROWN\\domain users 0 Feb  4 20:56 /home/samba/shares/rrhh/test-file-2.txt\n</code></pre> </li> </ol> <p>Llegados a este punto, el servidor estar\u00eda listo para usarse en producci\u00f3n, no obstante, tal y como se ha mencionado en varias ocasiones, es altamente recomendable realizar ciertas tareas adicionales como:</p> <ul> <li>Usar certificados expedidos por entidades de certificaci\u00f3n reconocidas.</li> <li>Securizar el servicio de correo con SPF, DKIM y DMARC.</li> <li>Establecer restricciones relativas a las contrase\u00f1as de los usuarios de dominio.</li> <li>Crear una pol\u00edtica de copias de seguridad.</li> <li>Monitorizar el servidor.</li> <li>Conocer y programar tareas de mantenimiento.</li> </ul> <p>Todos estas configuraciones ser\u00e1n explicadas en otras p\u00e1ginas del proyecto (ver men\u00fa superior).</p>","tags":["Zentyal"]},{"location":"zentyal-hardening/","title":"Hardening","text":"<p>En esta p\u00e1gina se realizar\u00e1n una serie de implementaciones en varios m\u00f3dulos cuya finalidad es incrementar su seguridad.</p> <p>Los m\u00f3dulos sobre los que aplicar\u00e1n estas mejoras son:</p> <ul> <li>Domain controller</li> <li>Mail</li> <li>Webmail</li> </ul>","tags":["Zentyal"]},{"location":"zentyal-hardening/#modulo-de-controlador-de-dominio","title":"M\u00f3dulo de controlador de dominio","text":"<p>Las configuraciones adicionales de seguridad que se implementar\u00e1n en el m\u00f3dulo de controlador de dominio ser\u00e1n:</p> <ul> <li>Pol\u00edticas de contrase\u00f1a.</li> </ul>","tags":["Zentyal"]},{"location":"zentyal-hardening/#politica-de-contrasenas","title":"Pol\u00edtica de contrase\u00f1as","text":"<p>Vamos a establecer unas pol\u00edticas de contrase\u00f1as mediante el comando <code>samba-tool domain passwordsettings</code> para los usuarios del dominio, de esta forma, reduciremos la posibilidad de que se usen contrase\u00f1as d\u00e9biles.</p> <p>Mencionar adicionalmente que a partir de Samba 4.9 es posible definir pol\u00edticas de contrase\u00f1a m\u00e1s particulares como se explican en este enlace, no obstante, usar esta funcionalidad tiene un aumento de recursos tal y como se menciona en el enlace, por lo que en mi caso concreto no har\u00e9 uso de eas funcionalidad concreta.</p> <p>Las pol\u00edticas que definir\u00e9 ser\u00e1n:</p> <ul> <li>Habilitar\u00e9 la complejidad de las contrase\u00f1as.</li> <li>Establecer\u00e9 un m\u00ednimo de 8 los caracteres que deber\u00e1n tener las contrase\u00f1as.</li> <li>Una contrase\u00f1a tendr\u00e1 una vigencia m\u00e1xima de 6 meses.</li> </ul> <p>A continuaci\u00f3n las acciones a realizar para aplicar dichas pol\u00edticas:</p> <ol> <li> <p>Verificamos las pol\u00edticas en uso configuradas por defecto:</p> <pre><code>sudo samba-tool domain passwordsettings show\n</code></pre> <p>El resultado obtenido en mi caso es:</p> <pre><code>Password information for domain 'DC=icecrown,DC=es'\n\nPassword complexity: off\nStore plaintext passwords: off\nPassword history length: 24\nMinimum password length: 0\nMinimum password age (days): 0\nMaximum password age (days): 365\nAccount lockout duration (mins): 30\nAccount lockout threshold (attempts): 0\nReset account lockout after (mins): 30\n</code></pre> </li> <li> <p>Establecemos las nuevas pol\u00edticas:</p> <pre><code>sudo samba-tool domain passwordsettings \\\nset \\\n--complexity=on \\\n--min-pwd-length=8 \\\n--max-pwd-age=180\n</code></pre> </li> <li> <p>Volvemos a mostrar la configuraci\u00f3n para cerciorarnos que se aplicaron las pol\u00edticas:</p> <pre><code>sudo samba-tool domain passwordsettings show\n</code></pre> <p>El resultado obtenido en mi caso es:</p> <pre><code>Password information for domain 'DC=icecrown,DC=es'\n\nPassword complexity: on\nStore plaintext passwords: off\nPassword history length: 24\nMinimum password length: 8\nMinimum password age (days): 0\nMaximum password age (days): 180\nAccount lockout duration (mins): 30\nAccount lockout threshold (attempts): 0\nReset account lockout after (mins): 30\n</code></pre> </li> <li> <p>Finalmente, tratamos de crear un usuario con una contrase\u00f1a d\u00e9bil para confirmar que las pol\u00edticas est\u00e1n en funcionamiento:</p> <p></p> </li> </ol>","tags":["Zentyal"]},{"location":"zentyal-hardening/#modulo-de-correo","title":"M\u00f3dulo de correo","text":"<p>Para este m\u00f3dulo vamos a implementar las siguientes funcionalidades para incrementar considerablemente la seguridad de nuestro servicio de correo:</p> <ul> <li>SPF</li> <li>DKIM</li> <li>DMARC</li> </ul>","tags":["Zentyal"]},{"location":"zentyal-hardening/#spf","title":"SPF","text":"<p>SPF ser\u00e1 el primero que implementaremos. El objetivo que trata de cubrir SPF es proteger nuestro dominio contra ataques de tipo spoofing y phishing. B\u00e1sicamente crearemos un registro en nuestro DNS el cual indicar\u00e1 qu\u00e9 servidores pueden enviar correos desde nuestro dominio. Para m\u00e1s informaci\u00f3n, ver este otro enlace.</p> <ol> <li> <p>A trav\u00e9s de esta web generaremos el registro DNS necesario para implementar este m\u00e9todo de autenticaci\u00f3n:</p> <p></p> </li> <li> <p>Creamos el registro de tipo <code>TXT</code> tanto en el m\u00f3dulo DNS como en el proveedor DNS - en mi caso, Route53 -:</p> <p>Para Zentyal, vamos a <code>DNS -&gt; Domains -&gt; TXT records</code>:</p> <p></p> <p>Para Route 53:</p> <p></p> </li> <li> <p>Comprobamos la resoluci\u00f3n del nuevo registro tanto interna como externamente:</p> <pre><code>dig TXT icecrown.es\ndig @8.8.8.8 icecrown.es\n</code></pre> <p>El resultado obtenido en mi caso:</p> <pre><code>## Consulta interna (desde Zentyal)\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; TXT icecrown.es\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 8888\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: f1292e180a5d3b430100000063f25f4ddf828c60e1a71af2 (good)\n;; QUESTION SECTION:\n;icecrown.es.           IN  TXT\n\n;; ANSWER SECTION:\nicecrown.es.        259200  IN  TXT \"v=spf1 mx ip4:15.237.168.75 ~all\"\n\n;; Query time: 204 msec\n;; SERVER: 127.0.0.1#53(127.0.0.1)\n;; WHEN: Sun Feb 19 18:41:33 CET 2023\n;; MSG SIZE  rcvd: 113\n\n## Consulta externa\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; @8.8.8.8 TXT icecrown.es\n; (1 server found)\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 5656\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;icecrown.es.           IN  TXT\n\n;; ANSWER SECTION:\nicecrown.es.        300 IN  TXT \"v=spf1 mx ip4:15.237.168.75 ~all\"\n\n;; Query time: 16 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Sun Feb 19 18:42:07 CET 2023\n;; MSG SIZE  rcvd: 85\n</code></pre> </li> <li> <p>Usaremos tambi\u00e9n MXtoolbox para comprobar el registro:</p> <p></p> </li> <li> <p>Finalmente, enviaremos un correo a una cuenta externa - GMail en mi caso - y verificaremos las cabeceras:</p> <p></p> </li> </ol>","tags":["Zentyal"]},{"location":"zentyal-hardening/#dkim","title":"DKIM","text":"<p>DKIM ser\u00e1 la siguiente implementaci\u00f3n de seguridad que realizaremos. El objetivo de DKIM es que el receptor pueda verificar que el email recibido es leg\u00edtimo. Los pasos de configuraci\u00f3n necesarias las he sacado de aqu\u00ed.</p> <ol> <li> <p>Instalamos los paquetes necesarios para la implementaci\u00f3n de DKIM:</p> <pre><code>sudo apt update\nsudo apt install -y opendkim opendkim-tools\n</code></pre> </li> <li> <p>Creamos el directorio donde se almacenar\u00e1n las claves de OpenDKIM:</p> <pre><code>sudo mkdir -vp /etc/opendkim/keys\n</code></pre> </li> <li> <p>Generamos la clave privada que ser\u00e1 usada para firmar los correos electr\u00f3nicos y establecemos como <code>mail</code>:</p> <pre><code>sudo opendkim-genkey -s mail -d icecrown.es -D /etc/opendkim/keys\n</code></pre> </li> <li> <p>Establecemos los permisos correctos a los archivos generados por el anterior comando:</p> <pre><code>sudo chown -R opendkim:opendkim /etc/opendkim/\nsudo chmod 0640 /etc/opendkim/keys/*.private\n</code></pre> </li> <li> <p>Creamos el archivo de configuraci\u00f3n <code>/etc/opendkim/TrustedHosts</code> y establecemos en \u00e9l el dominio y direcciones IP confiables:</p> <pre><code>127.0.0.1\nlocalhost\n15.237.168.75/32\nmail.icecrown.es\n</code></pre> </li> <li> <p>Creamos el archivo de configuraci\u00f3n <code>/etc/opendkim/SigningTable</code> que contendr\u00e1 el dominio a firmar por OpenDKIM:</p> <pre><code>*@icecrown.es mail._domainkey.icecrown.es\n</code></pre> </li> <li> <p>Creamos el archivo de configuraci\u00f3n <code>/etc/opendkim/KeyTable</code> que tendr\u00e1 el nombre del selector y la ruta a la clave privada encargada de firmar los correos electr\u00f3nicos:</p> <pre><code>mail._domainkey.icecrown.es icecrown.es:mail:/etc/opendkim/keys/mail.private\n</code></pre> </li> <li> <p>Creamos el archivo de configuraci\u00f3n principal llamado <code>/etc/opendkim.conf</code> y establecemos la configuraci\u00f3n del servicio OpenDKIM:</p> <pre><code>Syslog                  yes\nLogWhy                  yes\nUMask                   007\nMode                    sv\nSubDomains              no\nCanonicalization        relaxed/simple\nSocket                  inet:8891@127.0.0.1\nPidFile                 /run/opendkim/opendkim.pid\nOversignHeaders         From\nTrustAnchorFile         /usr/share/dns/root.key\nUserID                  opendkim\nAutoRestart             yes\nAutoRestartRate         10/1M\nBackground              yes\nDNSTimeout              5\nSignatureAlgorithm      rsa-sha256\nExternalIgnoreList      refile:/etc/opendkim/TrustedHosts\nInternalHosts           refile:/etc/opendkim/TrustedHosts\nKeyTable                refile:/etc/opendkim/KeyTable\nSigningtable            refile:/etc/opendkim/SigningTable\n</code></pre> </li> <li> <p>Establecemos la configuraci\u00f3n del socket en el archivo de configuraci\u00f3n <code>/etc/default/opendkim</code>:</p> <pre><code>## Custom configuration created on 19-02-2023 by Daniel\n# SOCKET=local:$RUNDIR/opendkim.sock\nSOCKET=inet:8891@127.0.0.1\n</code></pre> </li> <li> <p>Habilitamos, reiniciamos y comprobamos el servicio de OpenDKIM:</p> <pre><code>sudo systemctl enable opendkim\nsudo systemctl restart opendkim\nsudo systemctl status opendkim\n</code></pre> </li> <li> <p>El contenido del registro <code>TXT</code> que deberemos que crear en el dominio se encuentra en el archivo de configuraci\u00f3n <code>/etc/opendkim/keys/mail.txt</code>:</p> <p>En mi caso, el contenido es:</p> <pre><code>mail._domainkey IN  TXT ( \"v=DKIM1; h=sha256; k=rsa; \"\n  \"p=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu2kM2TmbrV6DNQR37F3EZ4YSgfRWV+XLI7Fi02pSqNuPeIwKIRBpoHRj7FU2ff4fHN8fg7iO3qkGbH5vwY8RgLM46pYE4pth0Zl7prFy3YJU6Kz4kzA9JKKAypU7+Z5ji+t+5zKGIJ49CQzIm8czRjnCYdI8ZjTBvUOo36lkVEO2qn43vAoL1a4gFJh3ZdSAqBdGMqVqcgINyn\"\n  \"9ss6+JNE3kbdsbztcR+IeU+6PJZDGTr7VLJ1dXi3NM8HH+R1phgWXKjIScEX4sM3okzPnXZoKSFpNORLVfHf/LwwWF3VLNEpI2zjGYVjc7/jEqZCqZmk/8VNYkUA7vcMyColzJAwIDAQAB\" )  ; ----- DKIM key mail for icecrown.es\n</code></pre> </li> <li> <p>Creamos el registro DNS de tipo <code>TXT</code> tanto en el servidor Zentyal como en el proveedor DNS:</p> <p>Para el servidor Zentyal tendremos que hacer uso de la CLI debido a la limitaci\u00f3n de caracteres de Zentyal en el entorno gr\u00e1fico:</p> <pre><code>sudo samba-tool dns add \\\n127.0.0.1 \\\nicecrown.es \\\nmail._domainkey.icecrown.es \\\nTXT \\\n'v=DKIM1; h=sha256; k=rsa;\n    \"p=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu2kM2TmbrV6DNQR37F3EZ4YSgfRWV+XLI7Fi02pSqNuPeIwKIRBpoHRj7FU2ff4fHN8fg7iO3qkGbH5vwY8RgLM46pYE4pth0Zl7prFy3YJU6Kz4kzA9JKKAypU7+Z5ji+t+5zKGIJ49CQzIm8czRjnCYdI8ZjTBvUOo36lkVEO2qn43vAoL1a4gFJh3ZdSAqBdGMqVqcgINyn\"\n    \"9ss6+JNE3kbdsbztcR+IeU+6PJZDGTr7VLJ1dXi3NM8HH+R1phgWXKjIScEX4sM3okzPnXZoKSFpNORLVfHf/LwwWF3VLNEpI2zjGYVjc7/jEqZCqZmk/8VNYkUA7vcMyColzJAwIDAQAB\"' \\\n-U zenadmin\n</code></pre> <p>Para Route53:</p> <p></p> <p>Warning</p> <p>Deberemos de prestar atenci\u00f3n a las comillas a la hora de crear el registro TXT.</p> </li> <li> <p>Comprobamos la resoluci\u00f3n del nuevo registro tanto interna como externamente:</p> <pre><code>dig TXT mail._domainkey.icecrown.es\ndig @8.8.8.8 TXT mail._domainkey.icecrown.es\n</code></pre> <p>El resultado obtenido en mi caso:</p> <pre><code>## Consulta interna (desde Zentyal)\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; TXT mail._domainkey.icecrown.es\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 47343\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: e524c5bb228993ae0100000063f26951777512932a30cbc1 (good)\n;; QUESTION SECTION:\n;mail._domainkey.icecrown.es.   IN  TXT\n\n;; ANSWER SECTION:\nmail._domainkey.icecrown.es. 900 IN TXT \"v=DKIM1;\" \"h=sha256;\" \"k=rsa;\" \"p=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu2kM2TmbrV6DNQR37F3EZ4YSgfRWV+XLI7Fi02pSqNuPeIwKIRBpoHRj7FU2ff4fHN8fg7iO3qkGbH5vwY8RgLM46pYE4pth0Zl7prFy3YJU6Kz4kzA9JKKAypU7+Z5ji+t+5zKGIJ49CQzIm8czRjnCYdI8ZjTBvUOo36lkVEO2qn43vAoL1a4gFJh3ZdSAqBdGMqVqcgINyn\" \"9ss6+JNE3kbdsbztcR+IeU+6PJZDGTr7VLJ1dXi3NM8HH+R1phgWXKjIScEX4sM3okzPnXZoKSFpNORLVfHf/LwwWF3VLNEpI2zjGYVjc7/jEqZCqZmk/8VNYkUA7vcMyColzJAwIDAQAB\"\n\n;; Query time: 4 msec\n;; SERVER: 127.0.0.1#53(127.0.0.1)\n;; WHEN: Sun Feb 19 19:24:17 CET 2023\n;; MSG SIZE  rcvd: 518\n\n## Consulta externa\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; @8.8.8.8 TXT mail._domainkey.icecrown.es\n; (1 server found)\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 58941\n;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;mail._domainkey.icecrown.es.   IN  TXT\n\n;; ANSWER SECTION:\nmail._domainkey.icecrown.es. 300 IN TXT \"9ss6+JNE3kbdsbztcR+IeU+6PJZDGTr7VLJ1dXi3NM8HH+R1phgWXKjIScEX4sM3okzPnXZoKSFpNORLVfHf/LwwWF3VLNEpI2zjGYVjc7/jEqZCqZmk/8VNYkUA7vcMyColzJAwIDAQAB\"\nmail._domainkey.icecrown.es. 300 IN TXT \"v=DKIM1; h=sha256; k=rsa;\" \"p=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu2kM2TmbrV6DNQR37F3EZ4YSgfRWV+XLI7Fi02pSqNuPeIwKIRBpoHRj7FU2ff4fHN8fg7iO3qkGbH5vwY8RgLM46pYE4pth0Zl7prFy3YJU6Kz4kzA9JKKAypU7+Z5ji+t+5zKGIJ49CQzIm8czRjnCYdI8ZjTBvUOo36lkVEO2qn43vAoL1a4gFJh3ZdSAqBdGMqVqcgINyn\"\n\n;; Query time: 16 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Sun Feb 19 19:25:24 CET 2023\n;; MSG SIZE  rcvd: 502\n</code></pre> </li> <li> <p>Usaremos tambi\u00e9n MXtoolbox para comprobar el registro:</p> <p></p> </li> <li> <p>Una vez confirmado el registro DNS, procederemos a configurar el servicio Postfix (SMTP) para que haga uso de este servicio. Para ello, a\u00f1adimos las siguientes l\u00edneas al final del stub <code>/etc/zentyal/stubs/mail/main.cf.mas</code>:</p> <pre><code>## DKIM Configuration created on 19-02-2023 by Daniel\nmilter_protocol = 6\nmilter_default_action = accept\nsmtpd_milters = inet:127.0.0.1:8891\nnon_smtpd_milters = inet:127.0.0.1:8891\n</code></pre> <p>En caso de no tener dicho archivo, tendremos que ejecutar los siguientes comandos:</p> <pre><code>sudo mkdir -v /etc/zentyal/stubs/mail/\nsudo cp -v /usr/share/zentyal/stubs/mail/main.cf.mas /etc/zentyal/stubs/mail/main.cf.mas\n</code></pre> </li> <li> <p>Reiniciamos el m\u00f3dulo de correo para que se apliquen los cambios:</p> <pre><code>sudo zs mail restart\n</code></pre> </li> <li> <p>Finalmente, enviaremos un correo a una cuenta externa - GMail en mi caso - y verificaremos las cabeceras:</p> <p></p> </li> </ol>","tags":["Zentyal"]},{"location":"zentyal-hardening/#dmarc","title":"DMARC","text":"<p>La \u00faltima implementaci\u00f3n que realizaremos ser\u00e1 DMARC. Este mecanismo de autenticaci\u00f3n se integrar\u00e1 con SPF y DKIM, por lo que ser\u00e1 necesario haberlos implementarlo previamente.</p> <ol> <li> <p>A trav\u00e9s de esta web generaremos el registro DNS necesario para implementar este m\u00e9todo de autenticaci\u00f3n:</p> <p> </p> </li> <li> <p>Creamos el registro DNS de tipo <code>TXT</code> tanto en el servidor Zentyal como en el proveedor DNS:</p> <p>Para el servidor Zentyal vamos a <code>DNS -&gt; Domains -&gt; TXT records</code>:</p> <p></p> <p>Para Route53:</p> <p></p> </li> <li> <p>Comprobamos la resoluci\u00f3n del nuevo registro tanto interna como externamente:</p> <pre><code>dig TXT _DMARC.icecrown.es\ndig @8.8.8.8 TXT _DMARC.icecrown.es\n</code></pre> <p>El resultado obtenido en mi caso:</p> <pre><code>## Consulta interna (desde Zentyal)\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; TXT _DMARC.novadevs.com\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 37988\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: 035a971807e4de9f0100000063f27c0e87c3ffcc2d62887c (good)\n;; QUESTION SECTION:\n;_DMARC.novadevs.com.       IN  TXT\n\n;; ANSWER SECTION:\n_DMARC.novadevs.com.    14400   IN  TXT \"v=DMARC1; p=quarantine; sp=quarantine; adkim=s; aspf=s; rua=mailto:webmaster@novadevs.com; ruf=mailto:webmaster@novadevs.com; rf=afrf; pct=100; ri=86400\"\n\n;; Query time: 40 msec\n;; SERVER: 127.0.0.1#53(127.0.0.1)\n;; WHEN: Sun Feb 19 20:44:14 CET 2023\n;; MSG SIZE  rcvd: 241\n\n## Consulta externa\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; @8.8.8.8 TXT _DMARC.icecrown.es\n; (1 server found)\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 42645\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;_DMARC.icecrown.es.        IN  TXT\n\n;; ANSWER SECTION:\n_DMARC.icecrown.es. 300 IN  TXT \"v=DMARC1; p=quarantine; rua=mailto:issues@icecrown.es; ruf=mailto:issues@icecrown.es; rf=afrf; sp=quarantine; fo=1; pct=100; ri=86400; adkim=s; aspf=s\"\n\n;; Query time: 16 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Sun Feb 19 20:44:48 CET 2023\n;; MSG SIZE  rcvd: 210\n</code></pre> </li> <li> <p>Usaremos tambi\u00e9n MXtoolbox para comprobar el registro:</p> <p></p> </li> <li> <p>Finalmente, enviaremos un correo a una cuenta externa - GMail en mi caso - y verificaremos las cabeceras:</p> <p></p> </li> </ol>","tags":["Zentyal"]},{"location":"zentyal-hardening/#modulo-de-webmail","title":"M\u00f3dulo de Webmail","text":"<p>El m\u00f3dulo de Webmail sirve su contenido a trav\u00e9s del servicio Apache, el cual por defecto, muestra demasiada informaci\u00f3n, la cual puede ser usada para un posible ataque.</p>","tags":["Zentyal"]},{"location":"zentyal-hardening/#apache","title":"Apache","text":"<p>Por defecto, es posible obtener la versi\u00f3n de Ubuntu y Apache que usa el servicio web. Adem\u00e1s, que la p\u00e1gina por defecto de Apache es muy caracter\u00edstica. Por lo tanto, procederemos a reducir la informaci\u00f3n que es posible obtener consultando al servicio y tambi\u00e9n, crearemos una p\u00e1gina muy sencilla.</p> <ol> <li> <p>Modificamos los siguientes par\u00e1metros de configuraci\u00f3n del archivo <code>/etc/apache2/conf-enabled/security.conf</code> para reducir la informaci\u00f3n del servicio:</p> <pre><code>sed -i \\\n-e 's/^ServerSignature.*/ServerSignature Off/' \\\n-e 's/^ServerTokens.*/ServerTokens Prod/' \\\n/etc/apache2/conf-enabled/security.conf\n</code></pre> </li> <li> <p>Reiniciamos el servicio para que se apliquen los cambios:</p> <pre><code>sudo systemctl restart apache2\n</code></pre> </li> <li> <p>Finalmente, modificamos el index por defecto:</p> <pre><code>echo '&lt;h1&gt;Website not found&lt;/h1&gt;' | sudo tee /var/www/html/index.html\n</code></pre> </li> </ol>","tags":["Zentyal"]},{"location":"zentyal-installation/","title":"Instalaci\u00f3n de Zentyal","text":"<p>En esta p\u00e1gina se explicar\u00e1 como instalar Zentyal 7.0 sobre un Ubuntu Server 20.04 en una instancia EC2 del proveedor cloud AWS. El objetivo es simplemente instalar Zentyal 7.0 con s\u00f3lo los m\u00f3dulos esenciales y confirmar que no hay incidencias a nivel de red ante un reinicio.</p> <p>Para la instalaci\u00f3n, usaremos este script disponible por parte de Zentyal. Mencionar que instalaremos Zentyal sin entorno gr\u00e1fico, ya que queremos reducir el uso de recursos que necesita el servidor.</p> <p>Los datos del entorno que crear\u00e9 para el proyecto son:</p> <ul> <li>Nombre del servidor: arthas</li> <li>Dominio: icecrown.es</li> <li>IP: 10.0.1.200/24</li> <li>Tipo de red: Interna</li> <li>Nombre de un usuario administrador adicional: djoven</li> </ul>","tags":["Zentyal"]},{"location":"zentyal-installation/#requisitos","title":"Requisitos","text":"<ul> <li>El sistema operativo debe ser Ubuntu 20.04 LTS.</li> <li>El servidor tiene que tener un m\u00ednimo de 4GB de RAM.</li> <li>Se necesita un usuario con permisos de administrador (grupo <code>sudo</code>).</li> </ul>","tags":["Zentyal"]},{"location":"zentyal-installation/#consideraciones","title":"Consideraciones","text":"<ul> <li>Los pasos descritos a continuaci\u00f3n son id\u00e9nticos tantos en entornos cloud como en entornos on-premise.</li> <li>En caso de no tener conocimientos robustos sobre Linux, es recomendable usar la versi\u00f3n comercial, ya que se puede contratar acceso a soporte, lo cual puede ser muy \u00fatil ante incidencias o actualizaciones de versiones.</li> <li>En caso de instalar el servidor en un proveedor cloud o en una ubicaci\u00f3n sin acceso f\u00edsico al servidor, la estabilidad del m\u00f3dulo de red ser\u00e1 cr\u00edtica. A continuaci\u00f3n se indican algunas recomendaciones al respecto:<ul> <li>Definir previamente la configuraci\u00f3n que se establecer\u00e1.</li> <li>Asignar una IP concreta a la interfaz de red de la instancia (en caso de usarse un proveedor cloud).</li> <li>Establecer la IP de la instancia como est\u00e1tica en Zentyal.</li> <li>Se recomienda configurar la tarjeta de red en Zentyal como interna, as\u00ed se evita bloquearse a uno mismo durante la configuraci\u00f3n inicial.</li> </ul> </li> </ul>","tags":["Zentyal"]},{"location":"zentyal-installation/#configuracion-previa","title":"Configuraci\u00f3n previa","text":"<p>Antes de proceder a instalar Zentyal, realizaremos las siguientes acciones:</p> <ol> <li> <p>Nos conectamos a la instancia a trav\u00e9s de SSH usando la clave privada que nos hemos descargado cuando creamos el Key pair:</p> <pre><code>ssh -i KP-Prod-Zentyal.pem ubuntu@arthas.icecrown.es\n</code></pre> </li> <li> <p>Establecemos una contrase\u00f1a para los usuarios: <code>root</code> y <code>ubuntu</code>:</p> <pre><code>sudo passwd root\nsudo passwd ubuntu\n</code></pre> </li> <li> <p>Actualizamos los paquetes del servidor:</p> <pre><code>sudo apt update\nsudo apt dist-upgrade -y\n</code></pre> </li> <li> <p>Nos creamos un usuario administrador adicional, el cual usaremos para administrar Zentyal desde la interfaz de administraci\u00f3n:</p> <pre><code>sudo useradd -m -d /home/djoven -G sudo -s /bin/bash -c 'Sysadmin' djoven\nsudo passwd djoven\n</code></pre> <p>Warning</p> <p>Es importante que el usuario pertenezca al grupo <code>sudo</code>, de lo contrario no podremos usarlo para acceder a la interfaz de administraci\u00f3n.</p> </li> <li> <p>Nos logeamos con el usuario reci\u00e9n creado:</p> <pre><code>su - djoven\n</code></pre> </li> <li> <p>Creamos el directorio y el archivo necesarios para alojar nuestra clave p\u00fablica para poder conectarnos v\u00eda SSH:</p> <pre><code>mkdir -v .ssh\ntouch .ssh/authorized_keys\n</code></pre> </li> <li> <p>Finalmente, a\u00f1adimos el contenido de nuestra clave p\u00fablica al archivo reci\u00e9n creado <code>.ssh/authorized_keys</code>.</p> </li> </ol>","tags":["Zentyal"]},{"location":"zentyal-installation/#instalacion","title":"Instalaci\u00f3n","text":"<p>A partir de este momento, el servidor estar\u00e1 listo para instalar Zentyal 7.0. A continuaci\u00f3n las acciones a realizar para su instalaci\u00f3n:</p> <ol> <li> <p>Creamos un directorio donde almacenaremos el script de instalaci\u00f3n de Zentyal:</p> <pre><code>sudo mkdir /opt/zentyal-install\n</code></pre> </li> <li> <p>Nos descargamos el script y le damos los permisos adecuados:</p> <pre><code>sudo wget -O /opt/zentyal-install/zentyal_installer.sh https://zentyal.com/zentyal_installer.sh\nsudo chmod 0750 /opt/zentyal-install/zentyal_installer.sh\n</code></pre> </li> <li> <p>Instalamos Zentyal a trav\u00e9s del script:</p> <pre><code>sudo bash /opt/zentyal-install/zentyal_installer.sh\n</code></pre> <p>Nota</p> <p>Contestaremos <code>n</code> a la pregunta: 'Do you want to install the Zentyal Graphical environment?', ya que no queremos instalar el entorno gr\u00e1fico.</p> <p>Los paquetes de Zentyal que nos instalar\u00e1 el script ser\u00e1n:</p> <ul> <li>zentyal (meta-paquete)</li> <li>zentyal-core</li> <li>zentyal-software</li> </ul> <p>Warning</p> <p>Llegados a este punto, no podemos reiniciar el servidor hasta haber instalado y configurado el m\u00f3dulo de red, de lo contrario, el servidor se iniciar\u00e1 sin una direcci\u00f3n IP y por lo tanto, perderemos el acceso a trav\u00e9s de SSH.</p> </li> <li> <p>Una vez que el script haya terminado, nos logeamos al panel de administraci\u00f3n de Zentyal: https://arthas.icecrown.es:8443</p> <p>Info</p> <p>En caso de que no hayamos creado el registro <code>A</code> en el DNS, usaremos la direcci\u00f3n IP p\u00fablica de la instancia.</p> </li> <li> <p>Nos logeamos con el usuario administrador que hemos creado previamente, en mi caso es <code>djoven</code>.</p> </li> <li> <p>En el wizard de configuraci\u00f3n inicial, \u00fanicamente instalaremos el m\u00f3dulo de firewall, de esta forma se nos instalar\u00e1 como dependencia el m\u00f3dulo de network a su vez.</p> <p></p> </li> <li> <p>Configuramos la tarjeta de red como <code>internal</code> y <code>est\u00e1tica</code>:</p> <p> </p> <p>Warning</p> <p>Es posible que al terminar de configurarse la red, se nos reproduzca el bug reportado aqu\u00ed. Si es el caso, seguir los pasos descritos en la p\u00e1gina Bug fixing (ver men\u00fa superior de navegaci\u00f3n) o simplemente modificamos la URL por: https://arthas.icecrown.es:8443</p> </li> <li> <p>Una vez que se haya terminado de guardar cambios, podremos empezar a gestionar Zentyal a trav\u00e9s del dashboard.</p> <p></p> </li> <li> <p>Finalmente, antes de procedes a configurar el servidor, realizaremos las siguientes comprobaciones para confirmar la estabilidad del servidor:</p> <ol> <li>Nos aseguramos que todos los m\u00f3dulos est\u00e9n habilitados (<code>Modules Status</code>).</li> <li> <p>Que la m\u00e1quina tenga acceso a Internet.</p> <pre><code>ping -c4 8.8.8.8\nping -c4 google.es\n</code></pre> </li> <li> <p>Que no haya habido ning\u00fan error en el log <code>/var/log/zentyal/zentyal.log</code>. A continuaci\u00f3n un ejemplo del logs sin ning\u00fan error:</p> <pre><code>2022/10/23 08:17:51 DEBUG&gt; PAM.pm:83 Authen::Simple::PAM::check - Successfully authenticated user 'djoven' using service 'zentyal'.\n2022/10/23 08:20:29 INFO&gt; install-packages:61 main:: - Starting package installation process\n2022/10/23 08:20:39 INFO&gt; Base.pm:256 EBox::Module::Base::saveConfig - Saving config for module: network\n2022/10/23 08:20:39 INFO&gt; Base.pm:256 EBox::Module::Base::saveConfig - Saving config for module: network\n2022/10/23 08:20:40 INFO&gt; Service.pm:965 EBox::Module::Service::restartService - Restarting service for module: network\n2022/10/23 08:20:43 INFO&gt; Base.pm:256 EBox::Module::Base::saveConfig - Saving config for module: network\n2022/10/23 08:20:43 INFO&gt; Base.pm:256 EBox::Module::Base::saveConfig - Saving config for module: firewall\n2022/10/23 08:20:43 INFO&gt; Base.pm:231 EBox::Module::Base::save - Restarting service for module: firewall\n2022/10/23 08:20:44 INFO&gt; Service.pm:965 EBox::Module::Service::restartService - Restarting service for module: firewall\n2022/10/23 08:20:49 INFO&gt; install-packages:121 main:: - Package installation process finished\n2022/10/23 08:23:15 INFO&gt; Network.pm:89 EBox::Network::CGI::Wizard::Network::_processWizard - Configuring ens5 as 10.0.1.200/255.255.255.0\n2022/10/23 08:23:15 INFO&gt; Network.pm:93 EBox::Network::CGI::Wizard::Network::_processWizard - Adding gateway 10.0.1.1 for iface ens5\n2022/10/23 08:23:15 INFO&gt; Network.pm:108 EBox::Network::CGI::Wizard::Network::_processWizard - Adding nameserver 1.1.1.1\n2022/10/23 08:23:15 INFO&gt; Network.pm:114 EBox::Network::CGI::Wizard::Network::_processWizard - Adding nameserver 9.9.9.9\n2022/10/23 08:23:17 INFO&gt; GlobalImpl.pm:571 EBox::GlobalImpl::saveAllModules - First installation, enabling modules: network firewall webadmin logs audit firewall\n2022/10/23 08:23:17 INFO&gt; GlobalImpl.pm:574 EBox::GlobalImpl::saveAllModules - Enabling module network\n2022/10/23 08:23:17 INFO&gt; GlobalImpl.pm:574 EBox::GlobalImpl::saveAllModules - Enabling module firewall\n2022/10/23 08:23:17 INFO&gt; GlobalImpl.pm:574 EBox::GlobalImpl::saveAllModules - Enabling module webadmin\n2022/10/23 08:23:18 INFO&gt; GlobalImpl.pm:574 EBox::GlobalImpl::saveAllModules - Enabling module logs\n2022/10/23 08:23:18 INFO&gt; GlobalImpl.pm:574 EBox::GlobalImpl::saveAllModules - Enabling module audit\n2022/10/23 08:23:19 INFO&gt; GlobalImpl.pm:574 EBox::GlobalImpl::saveAllModules - Enabling module firewall\n2022/10/23 08:23:19 INFO&gt; Base.pm:231 EBox::Module::Base::save - Restarting service for module: network\n2022/10/23 08:23:23 INFO&gt; Base.pm:231 EBox::Module::Base::save - Restarting service for module: firewall\n2022/10/23 08:23:23 INFO&gt; Base.pm:231 EBox::Module::Base::save - Restarting service for module: logs\n2022/10/23 08:23:23 INFO&gt; Base.pm:231 EBox::Module::Base::save - Restarting service for module: audit\n2022/10/23 08:23:23 INFO&gt; Base.pm:231 EBox::Module::Base::save - Restarting service for module: firewall\n2022/10/23 08:23:24 INFO&gt; Base.pm:231 EBox::Module::Base::save - Restarting service for module: sysinfo\n2022/10/23 08:23:25 INFO&gt; GlobalImpl.pm:660 EBox::GlobalImpl::saveAllModules - Saving configuration: webadmin\n2022/10/23 08:23:25 INFO&gt; Base.pm:231 EBox::Module::Base::save - Restarting service for module: webadmin\n2022/10/23 08:24:51 INFO&gt; Index.pm:187 EBox::Dashboard::CGI::Index::masonParameters - dashboard1\n</code></pre> </li> <li> <p>Reiniciamos el servidor para asegurarnos de que es capaz de iniciar sin ning\u00fan tipo de problema de red.</p> <pre><code>sudo reboot\n</code></pre> </li> <li> <p>Verificamos que podemos conectarnos a trav\u00e9s de SSH y a la interfaz de administraci\u00f3n de Zentyal.</p> </li> </ol> </li> </ol>","tags":["Zentyal"]},{"location":"en/","title":"Project Information","text":"<p>The main objective of this project is to show and explain a detailed, robust, secure and monitored configuration of the deployment of a Zentyal 7.0 server on the Amazon AWS cloud provider for a production environment.</p> <p>Note</p> <p>It is important to note that everything explained in the project is a real example of implementation, which can be used as a basis or guide for the design of your environment.</p> <p>The functions that this server will have will be to act as a mail server for the organization and additionally, as a shared resource server for the different departments.</p> <p>Finally, it should be mentioned that multiple additional configurations will also be made, such as securing through SPF, DKIM, and DMARC for the mail service, password policies for the domain controller, or even improvements at the CLI level.</p> <p>Note</p> <p>The translation of the whole documentation was automatically generated by ChatGPT.</p>"},{"location":"en/#aws","title":"AWS","text":"<p>As explained, AWS will be used to host the Zentyal server. This server will have a monthly cost, which will depend on various factors such as:</p> <ul> <li>Type of server.</li> <li>Type and number of EBS volumes.</li> <li>Traffic received by the server.</li> <li>Backup policies.</li> <li>Monitoring system.</li> </ul> <p>For this particular project, the following available AWS services will be used:</p> <ul> <li>Route53</li> <li>VPC</li> <li>KMS</li> <li>EC2</li> <li>CloudWatch</li> <li>SNS</li> </ul>"},{"location":"en/#zentyal","title":"Zentyal","text":"<p>The Zentyal server will use the latest stable version available, which as of today is 7.0. In addition, a commercial license will not be used, although it is recommended due to the additional features it offers as well as the possibility of contacting support in case of an incident or doubt.</p> <p>The modules that will be installed and configured are:</p> <ul> <li>Network</li> <li>Logs</li> <li>Firewall</li> <li>Software</li> <li>NTP</li> <li>DNS</li> <li>Controlador de dominio</li> <li>Correo</li> <li>Webmail</li> <li>Antivirus</li> <li>Mailfilter</li> <li>CA</li> <li>OpenVPN</li> </ul> <p>Additionally, the following additional configurations will be made:</p> <ul> <li>Creation of a partition for the SWAP.</li> <li>Use of several EBS volumes to store different types of information there.</li> <li>Generation of certificates with Let's Encrypt.</li> <li>Implementation of: SPF, DKIM and DMARC to increase the security of the mail service.</li> <li>Security policies and password rotation for the domain.</li> </ul>"},{"location":"en/#requirements","title":"Requirements","text":"<p>To be able to implement or test the steps described in this project, the following will be required:</p> <ol> <li>Knowledge of the administration of Linux operating systems, specifically in Ubuntu operating systems.</li> <li>Knowledge in handling the CLI (command-line interface).</li> <li>Administrator privileges over the server.</li> <li>In case of wanting to use AWS, an account with sufficient permissions for the services mentioned in the 'AWS' section will be required.</li> <li>anting to use AWS, an account with sufficient permissions for the services mentioned in the 'AWS' section will be required.</li> </ol>"},{"location":"en/#considerations","title":"Considerations","text":"<p>The following are some considerations to keep in mind if you want to implement or test the project:</p> <ol> <li>Although the steps are explained, it is highly recommended to have some minimum knowledge of Linux, as the terminal is used extensively.</li> <li>If you want to implement it in production, it is highly recommended to use the commercial version, as it usually comes with access to support, which can be very useful in case of 3. incidents or version updates to higher versions of Zentyal.</li> <li>The project has been tested on the AWS cloud provider; however, it should be able to work on other cloud providers.</li> <li>In case a cloud provider is used, it is very likely that the deployment will have a monthly economic cost.</li> <li>The network module is the most critical module in case you want to implement this project on a cloud provider, so you must have the configuration well analyzed and defined before proceeding with its configuration.</li> <li>Due to the modules installed in Zentyal, the server will require a minimum of 4GB of RAM for testing purposes. However, if you want to use it in production, more RAM will need to be added.</li> </ol>"},{"location":"en/#index","title":"Index","text":"<p>The index of the project for implementation would be:</p> <ol> <li>AWS</li> <li>Installation</li> <li>Configuration</li> <li>Certificates</li> <li>Hardening</li> <li>Backup</li> <li>Monitoring</li> </ol> <p>In case you want to implement or test the project on an on-premise server or another cloud provider, steps 1, part of 6 and 7 would not be applicable.</p>"},{"location":"en/about/","title":"About me","text":"<p>My name is Daniel Joven and I have been a Linux system administrator for 6 years. During these years, I have mainly worked on Zentyal, providing official support for clients and collaborating in the management of their IT infrastructure. In addition to this client, I have also worked on other projects performing tasks such as:</p> <ul> <li>Creation and management of web hosting with cPanel, Plesk, and ISPconfig.</li> <li>Automation of tasks with Ansible and bash scripting.</li> <li>Design, creation, and maintenance of a cloud environment in AWS.</li> <li>Design, creation, and maintenance of CI/CD for development, staging, and production environments.</li> </ul> <p>Furthermore, since I started my training in IT, I have been able to obtain the following certifications:</p> <ul> <li>(2015) Zentyal Certified Associate 3.2.</li> <li>(2015) Red Hat Certified System Administrator (RHCSA).</li> <li>(2016) Linux Professional Institute Certification 201.</li> <li>(2017) Mysql database Administrator 5.6.</li> <li>(2018) Red Hat Certified Engineer (RHCE).</li> <li>(2019) Red Hat Certified Specialist in Ansible Automation.</li> <li>(2022) Certified Kubernetes Administrator (CKA).</li> </ul> <p>With the experience gained during these years, I have decided to create a complete project with Zentyal and AWS and share it to help - hopefully - other IT members who are considering or have problems in implementing a production environment with Zentyal.</p>"},{"location":"en/aws-configuration/","title":"AWS","text":"<p>On this page, we will explain how to configure the AWS cloud provider environment to deploy the Zentyal server. Requirements</p>","tags":["AWS"]},{"location":"en/aws-configuration/#requirements","title":"Requirements","text":"<p>To follow this document, you will need the following:</p> <ol> <li>An AWS account.</li> <li>A user with permissions for the following services:<ul> <li>Route53 (if the domain is hosted in this service)</li> <li>VPC</li> <li>KMS</li> <li>EC2</li> </ul> </li> </ol>","tags":["AWS"]},{"location":"en/aws-configuration/#region","title":"Region","text":"<p>Before starting to create resources, we need to know which is the best region to use. To do this, we will use this website, where we can see which region has better latency from our location.</p> <p></p> <p>As seen in the image, in my specific case, I have selected all the European regions since I am in Spain. The displayed result indicates that Paris is the region with the best latency, therefore, this will be the region where I will deploy the environment.</p>","tags":["AWS"]},{"location":"en/aws-configuration/#vpc","title":"VPC","text":"<p>The first service we will configure is VPC, which is basically a virtual network where we will place our Zentyal server.</p> <p>We will create a VPC with the following configuration:</p> <ul> <li>Name: VPC-Prod-Zentyal</li> <li>IPv4 CIDR: 10.0.0.0/16</li> <li>IPv6: Disabled</li> <li>Tenancy: Default</li> <li>Tags:<ul> <li>Name: VPC-Prod-Zentyal</li> <li>Env: Production</li> </ul> </li> </ul> <p>Note</p> <p>Since Zentyal does not allow IPv6, we disable it to avoid possible security breaches.</p> <p>Below is an image with the configuration.</p> <p></p> <p>Once it has been created, we can optionally enable the following options:</p> <ul> <li>DNS hostname</li> <li>DNS resolution</li> </ul>","tags":["AWS"]},{"location":"en/aws-configuration/#subnet","title":"Subnet","text":"<p>Once we have our VPC created, we will proceed to create a public subnet, which will be where we will locate our Zentyal server.</p> <p>The subnet configuration will be:</p> <ul> <li>Name: SUB-Prod-Public-1</li> <li>Availability zone: eu-west-3a</li> <li>IPv4 CIDR: 10.0.1.0/24</li> <li>Tags:<ul> <li>Name: SUB-Prod-Public-1</li> <li>Env: Production</li> </ul> </li> </ul> <p>Below is an image with the configuration.</p> <p></p>","tags":["AWS"]},{"location":"en/aws-configuration/#gateway","title":"Gateway","text":"<p>The next thing we'll do is configure an Internet gateway for our VPC, so that instances using this subnet can access the internet.</p> <p>The Internet gateway will be configured as follows:</p> <ul> <li>Name: GW-Prod-1</li> <li>Tags:<ul> <li>Env: Production</li> <li>Name: GW-Prod-1</li> </ul> </li> </ul> <p>Here is an image of the configuration:</p> <p></p> <p>Finally, we will associate the newly created resource with our VPC.</p> <p></p>","tags":["AWS"]},{"location":"en/aws-configuration/#routes","title":"Routes","text":"<p>Once we have created both the subnet and the gateway, we will need to create or modify the route table that AWS creates by default when we create a VPC.</p> <p>For this case, we will have to edit the existing resource and perform the following actions:</p> <ol> <li> <p>Create the tags as shown in the image:</p> <p></p> </li> <li> <p>Ensure that the subnet is associated:</p> <p></p> </li> <li> <p>Set the gateway to resolve the rest of the network ranges.</p> <p></p> </li> </ol>","tags":["AWS"]},{"location":"en/aws-configuration/#network-acl","title":"Network ACL","text":"<p>The next resource we will modify is the default network ACL that AWS creates for us. The rules defined there allow us to deny or allow incoming and outgoing traffic from our subnets.</p> <p>Once again, AWS creates a default network ACL for us, which we will modify as follows:</p> <ol> <li> <p>Create the tags as shown in the image:</p> <p></p> </li> <li> <p>Ensure that the subnet is associated:</p> <p></p> </li> <li> <p>Verify that all inbound traffic is allowed:</p> <p></p> </li> <li> <p>Verify that all outbound traffic is allowed:</p> <p></p> </li> </ol>","tags":["AWS"]},{"location":"en/aws-configuration/#security-group","title":"Security Group","text":"<p>The last resource we will modify in the VPC service is the security group that we will associate with the Zentyal server, which is basically a virtual firewall that allows us to establish the allowed ports and IPs.</p> <p>For this specific resource, we will do 2 things:</p> <ol> <li> <p>We will modify the tags of the resource that AWS created by default when we created the VPC.</p> <p></p> </li> <li> <p>We will create a new resource, which will contain the ports that we will allow public access to, which are:</p> <ul> <li>ICMP-IPv4 echo request -&gt; <code>ping</code></li> <li>22/TCP -&gt; SSH.</li> <li>25/TCP -&gt; SMTP.</li> <li>53/UDP -&gt; DNS.</li> <li>53/TCP -&gt; DNS.</li> <li>143/TCP -&gt; IMAP.</li> <li>443/TCP -&gt; HTTPS.</li> <li>465/TCP -&gt; SMTPS.</li> <li>587/TCP -&gt; SMTPS con StartTLS.</li> <li>993/TCP -&gt; IMAPS.</li> <li>8443/TCP -&gt; Zentyal GUI.</li> <li>11994/UDP -&gt; OpenVPN.</li> </ul> <p>The result should be as follows:</p> <p></p> <p>In addition, we will also set the following tags:</p> <ul> <li>Name: SG-Prod-Zentyal</li> <li>Tags:<ul> <li>Name: SG-Prod-Zentyal</li> <li>Env: Production</li> <li>Host: arthas.icecrown.es</li> </ul> </li> </ul> <p>Note</p> <p>The host 'arthas.icecrown.es' will be the name we give to the Zentyal server.</p> </li> </ol>","tags":["AWS"]},{"location":"en/aws-configuration/#ec2","title":"EC2","text":"<p>Once we have the network (VPC) set up, we will proceed to create the necessary resources in the EC2 service.</p>","tags":["AWS"]},{"location":"en/aws-configuration/#group-placement","title":"Group Placement","text":"<p>The first resource we will create is a placement group, which will allow us to distribute instances (servers) across different hardware, minimizing potential errors that may arise from AWS.</p> <p>The configuration we will set up is:</p> <ul> <li>Name: GP-Prod-1</li> <li>Placement strategy: Spread</li> <li>Spread level: Rack</li> <li>Tags:<ul> <li>Name: GP-Prod-1</li> <li>Env: Production</li> </ul> </li> </ul> <p></p>","tags":["AWS"]},{"location":"en/aws-configuration/#key-pair","title":"Key Pair","text":"<p>Next, we will create a key pair, which will allow us to connect to the instance via SSH.</p> <p>Considerations:</p> <ul> <li>Only during key pair generation will it be possible to download the private key.</li> <li>Access to the downloaded private key should be restricted, as this key provides full administrator access to the instance without the need to establish a password (default behavior on AWS Linux instances).</li> <li>The permissions the key should have are read-only for the user, in octal notation it is: 0400.</li> </ul> <p>The configuration we will set up is:</p> <ul> <li>Name: KP-Prod-Zentyal</li> <li>Key pair type: RSA</li> <li>Private ket file format: .pem</li> <li>Tags:<ul> <li>Name: KP-Prod-Zentyal</li> <li>Env: Production</li> <li>Host: arthas.icecrown.es</li> </ul> </li> </ul> <p></p>","tags":["AWS"]},{"location":"en/aws-configuration/#network-interface","title":"Network interface","text":"<p>The next resource we will use is to create a network interface, which will allow us to establish a static IP and associate it with the Zentyal instance, avoiding possible incidents in the most critical module, the network.</p> <p>The configuration we will set up is:</p> <ul> <li>Name: NI-Prod-Zentyal</li> <li>Subnet: SUB-Prod-Public-1</li> <li>Private IPv4 address: 10.0.1.200</li> <li>Security Group: SG-Prod-Zentyal</li> <li>Tags:<ul> <li>Name: NI-Prod-Zentyal</li> <li>Env: Production</li> <li>Host: arthas.icecrown.es</li> </ul> </li> </ul> <p> </p>","tags":["AWS"]},{"location":"en/aws-configuration/#instance","title":"Instance","text":"<p>Once we have created all the above resources in the EC2 service, we will proceed to create the compute instance (server) on which we will install Zentyal.</p> <p>Considerations:</p> <ul> <li>Due to the Zentyal modules we will be using, the instance must have a minimum of 4GB of RAM.</li> <li>For the project's testing purposes, I have opted for the most economical instance possible, which is of the general type and is called t3a.medium.</li> <li>The instance price can be obtained from here.<ul> <li>In my specific case, the cost per hour (if running) will be '$0.04'.     </li> <li>Instance price</li> </ul> </li> <li>I will use 3 EBS (hard disks) volumes to establish the following partitioning:<ul> <li>System EBS of 30GB.</li> <li>Email EBS of 10GB.</li> <li>Personal directories and shared resources EBS of 10GB.</li> </ul> </li> <li> <p>I will enable advanced monitoring since I will use AWS CloudWatch as the monitoring system.</p> <p>Warning</p> <p>This option has an additional cost, which can be checked here.</p> </li> <li> <p>The options I will configure and that represent a monthly cost are:</p> <ul> <li>Instance type.</li> <li>Root volume.</li> <li>Detailed CloudWatch monitoring.</li> </ul> </li> </ul> <p>Therefore, the configuration we will define in the service will be:</p> <ul> <li>Name: arthas.icecrown.es</li> <li>AMI: Ubuntu Server 20.04 LTS (HVM), SSD Volume Type</li> <li>Architecture: 64-bit (x86)</li> <li>Instance type: t3a.medium</li> <li>Key pair: KP-Prod-Zentyal</li> <li>Network settings:<ul> <li>VPC: VPC-Prod-Zentyal</li> <li>Subnet: SUB-Prod-Public-1</li> <li>Auto-assign public IP: Disable</li> <li>Firewall: Select existint security group</li> <li>Network interface: NI-Prod-Zentyal</li> </ul> </li> <li>Configure storage:<ul> <li>Root volume: 30 GB, GP3</li> </ul> </li> <li>Advanced details:<ul> <li>Shutdown behavior: Stop</li> <li>Termination protection: Enable</li> <li>Detailed CloudWatch monitoring: Enable</li> <li>Placement group: GP-Prod-1</li> </ul> </li> <li>Tags:<ul> <li>Name: arthas.icecrown.es</li> <li>Env: Production</li> <li>Host: arthas.icecrown.es</li> </ul> </li> </ul> <p> </p>","tags":["AWS"]},{"location":"en/aws-configuration/#volumes","title":"Volumes","text":"<p>Once we have created the instance, we will proceed to configure the volumes (hard drive) of our Zentyal server. In my specific case, I will create two additional volumes, one to host emails and another for personal directories and shared resources. The reason is that it will allow me to define different backup policies at the AWS level, and the data is on separate disks, with the advantages that this entails, such as recovering information in case of human error.</p> <p>Before proceeding to create the additional volumes, we will set the tags for the system volume associated with the running instance:</p> <ul> <li>Name: EBS-Prod-System-Zentyal</li> <li>Env: Production</li> <li>Host: arthas.icecrown.es</li> <li>Type: System</li> </ul> <p></p> <p>Next, we create the additional volumes:</p> <p>Warning</p> <p>The volumes must be in the same availability zone as the instance, eu-west-3a in my case.</p> <p>For mailboxes:</p> <ul> <li>Volume Type: General Purpose SSD (gp3)</li> <li>Size: 10GiB</li> <li>IOPS: 3000</li> <li>Throughput: 125</li> <li>Availability zone: eu-west-3a</li> <li>Snapshot ID: Don't create volume from a snapshot</li> <li>Encryption: Enabled<ul> <li>KMS key: (default) aws/ebs</li> </ul> </li> <li>Tags:<ul> <li>Name: EBS-Prod-Mail-Zentyal</li> <li>Env: Production</li> <li>Host: arthas.icecrown.es</li> <li>Type: Mail</li> </ul> </li> </ul> <p> </p> <p>For personal directories and shared resources:</p> <ul> <li>Volume Type: General Purpose SSD (gp3)</li> <li>Size: 10GiB</li> <li>IOPS: 3000</li> <li>Throughput: 125</li> <li>Availability zone: eu-west-3a</li> <li>Snapshot ID: Don't create volume from a snapshot</li> <li>Encryption: Enabled<ul> <li>KMS key: (default) aws/ebs</li> </ul> </li> <li>Tags:<ul> <li>Name: EBS-Prod-Shares-Zentyal</li> <li>Env: Production</li> <li>Host: arthas.icecrown.es</li> <li>Type: Shares</li> </ul> </li> </ul> <p> </p> <p>Finally, we will associate both volumes with the EC2 instance.</p> <p> </p>","tags":["AWS"]},{"location":"en/aws-configuration/#elastic-ip","title":"Elastic IP","text":"<p>The next resource we will create is an Elastic IP, which is simply a public IPv4 address that we will associate with our instance.</p> <p>The tags we will define for the resource are:</p> <ul> <li>Name: EIP-Prod-Zentyal</li> <li>Env: Production</li> <li>Host: arthas.icecrown.es</li> </ul> <p></p> <p>Finally, we associate the newly created resource with the instance.</p> <p></p>","tags":["AWS"]},{"location":"en/aws-configuration/#route-53","title":"Route 53","text":"<p>The next necessary action is to create the DNS record in the domain to point to the public IP associated with the instance. In my specific case, I will use the Route 53 service to create the <code>A</code> type DNS record, as this is where I have registered the domain.</p> <p></p>","tags":["AWS"]},{"location":"en/aws-configuration/#request-email-sending","title":"Request email sending","text":"<p>To be able to send emails from the Zentyal server through the associated static IP, it is necessary to request AWS to remove the restriction they have by default through a form. To do this, simply follow this link where the steps are explained.</p> <p>Considerations about the message:</p> <ul> <li>It must be written in English.</li> <li>It must be detailed; otherwise, they will request more information or even deny the request.</li> <li>Some recommended details are:<ul> <li>Usage of the server.</li> <li>Number of users that will use email.</li> <li>Approximate number of emails that will be sent per hour.</li> </ul> </li> </ul> <p>An example of the message:</p> <pre><code>Hi Support team,\n\nWe have deployed a new EC2 instance that acts as a Mail server using Zentyal operating system.\nWould you mind removing the default restriction so my users can send emails outside, please?\n\nBelow you have more information:\n\n* We are a small IT business focused on web development.\n* Around 20 users will send and receive emails every day.\n* We think we might send around 50 emails per hour.\n\nKind regards, Daniel.\n</code></pre>","tags":["AWS"]},{"location":"en/aws-configuration/#saving-plans","title":"Saving Plans","text":"<p>Once the server has been created, configured, and thoroughly tested, it is highly recommended to purchase the instance using Saving Plans, as it will allow us to significantly reduce the cost of using the deployed EC2 instance.</p>","tags":["AWS"]},{"location":"en/backup/","title":"Backup","text":"<p>Several options for backing up this project will be explained on this page.</p> <p>Note</p> <p>They should also be valid for deployments on other infrastructures.</p> <p>As logic dictates, every production server should have a backup system that guarantees the recovery of the system and its data in the face of catastrophic events or human errors.</p> <p>There are several possibilities for implementing backups for this project:</p> <ol> <li>AWS DLM (EBS volume snapshots).</li> <li>Backup de configuraci\u00f3n functionality.</li> <li>Backup module.</li> <li>Scripting.</li> </ol> <p>In my case, I will use the following options:</p> <ul> <li>AWS DLM for the 3 EBS volumes, as it will allow us to restore our Zentyal server or data quickly and easily. Additionally, it would also allow us to set up other environments such as staging or testing using an identical configuration.</li> <li>Backup de configuraci\u00f3n functionality, we will automate the use of this functionality to always have a version with the module configurations available.</li> </ul>","tags":["AWS"]},{"location":"en/backup/#aws-dlm","title":"AWS DLM","text":"<p>Through the DLM functionality of the EC2 service, we will take a daily snapshot of the 3 volumes, which will ensure that the information is safeguarded in AWS. This functionality takes a snapshot of the volume, which are incremental snapshots.</p> <p>Warning</p> <p>Its use will involve an additional monthly cost, which we can see here.</p> <p>The hours at which I will set up the snapshots are:</p> <ul> <li>02:00 AM for the email volume.</li> <li>03:00 AM for the shared resource volume.</li> <li>04:00 AM for the system volume.</li> </ul> <p>Note</p> <p>It is important that the system snapshot is taken before the Zentyal automatic updates (05:30 AM in my case).</p>","tags":["AWS"]},{"location":"en/backup/#dlm-on-the-system-volume","title":"DLM on the system volume","text":"<p>The first rule we will create will be for the system volume. This rule will consist of the following:</p> <ul> <li>The tag used to identify the EBS disk will be: <code>Type = System</code>.</li> <li>The set time will be 05:00 UTC.</li> </ul> <p>Below are the actions to implement the DLM rule:</p> <ol> <li>From the EC2 service, we go to <code>Elastic Block Store -&gt; Lifecycle Manager</code>.</li> <li> <p>We create a policy of type <code>EBS snapshot policy</code>:</p> <p> </p> <p>Summary of the configuration:</p> <p></p> </li> <li> <p>Finally, we confirm its operation. To do this, from the EC2 service, we go to <code>Elastic Block Store -&gt; Snapshots</code>:</p> <p></p> </li> </ol>","tags":["AWS"]},{"location":"en/backup/#dlm-on-the-email-volume","title":"DLM on the email volume","text":"<p>The second rule we will create will be for the email volume. This rule will consist of the following:</p> <ul> <li>The tag used to identify the EBS disk will be: <code>Type = Mail</code>.</li> <li>The set time will be 03:00 UTC.</li> </ul> <p>Below are the actions to implement the DLM rule:</p> <ol> <li>From the EC2 service, we go to <code>Elastic Block Store -&gt; Lifecycle Manager</code>.</li> <li> <p>We create a policy of type <code>EBS snapshot policy</code>:</p> <p> </p> <p>Summary of the configuration:</p> <p></p> </li> <li> <p>Finally, we confirm its operation. To do this, from the EC2 service, we go to <code>Elastic Block Store -&gt; Snapshots</code>:</p> <p></p> </li> </ol>","tags":["AWS"]},{"location":"en/backup/#dlm-on-the-shared-resource-volume","title":"DLM on the shared resource volume","text":"<p>The last rule we will create will be for the shared resource volume. This rule will consist of the following:</p> <ul> <li>The tag used to identify the EBS disk will be: <code>Type = Shares</code>.</li> <li>The set time will be 04:00 UTC.</li> </ul> <p>Below are the steps to implement the DLM rule:</p> <ol> <li>From the EC2 service, go to <code>Elastic Block Store -&gt; Lifecycle Manager</code>.</li> <li> <p>Create an <code>EBS snapshot policy</code>:</p> <p> </p> <p>Summary of the configuration:</p> <p></p> </li> <li> <p>Finally, confirm its operation by going to <code>Elastic Block Store -&gt; Snapshots</code> from the EC2 service:</p> <p></p> </li> </ol>","tags":["AWS"]},{"location":"en/backup/#configuration-backup-functionality","title":"Configuration backup functionality","text":"<p>This functionality allows us to have a backup of the Zentyal configuration, which offers multiple advantages such as:</p> <ol> <li>Rollback of the Zentyal module configuration.</li> <li>Possibility of creating identical servers for other environments such as staging or testing.</li> <li>A sort of versioning for the Zentyal configuration.</li> </ol> <p>Warning</p> <p>This functionality does not store user data such as personal directories, shared resources or emails, but only stores the configuration for each module - including domain controller objects such as users or groups -.</p> <p>To implement this functionality, we will define a scheduled task that will run daily at 02:30 AM.</p> <p>The steps to implement it are:</p> <ol> <li> <p>From the CLI, test the command that performs the backup and executes the scheduled task:</p> <pre><code>sudo /usr/share/zentyal/make-backup --description \"CLI backup on `date '+%d-%m-%Y'`\"\n</code></pre> </li> <li> <p>Once it has finished, log in to the Zentyal GUI and go to <code>System -&gt; Configuration Backup</code> to confirm that the backup is detected by Zentyal and can be downloaded.</p> <p></p> </li> <li> <p>Once its operation is confirmed, create the scheduled task to run daily at 02:30 AM. To do this, create the configuration file in <code>/etc/cron.d/custom-backup_conf</code> with the following content:</p> <pre><code>## Configuration backup created on 12-02-2023 by Daniel\n30 02 * * * root /usr/share/zentyal/make-backup --description \"Cronjob backup on `date '+\\%d-\\%m-\\%Y'`\" &gt;/dev/null 2&gt;&amp;1\n</code></pre> </li> <li> <p>Finally, check the scheduled task:</p> <p></p> <p>Note</p> <p>The time is different because I modified it to verify its operation without having to wait until 02:30 AM.</p> </li> </ol>","tags":["AWS"]},{"location":"en/maintenance/","title":"Maintenance","text":"<p>On this page, I will explain some actions to periodically review on the Zentyal server to confirm its stability.</p>","tags":["Zentyal"]},{"location":"en/maintenance/#log-files","title":"Log files","text":"<p>The first and most important thing is to know if the important log files of the system show any errors. For this project, the most important log files are:</p> <ul> <li>/var/log/zentyal/zentyal.log -&gt; Zentyal modules.</li> <li>/var/log/syslog -&gt; Status of the services and other generic system events.</li> <li>/var/log/samba/samba.log -&gt; Domain controller module.</li> <li>/var/log/mail.log -&gt; Mail module.</li> <li>/var/log/mail.err -&gt; Mail module.</li> <li>/var/log/sogo/sogo.log -&gt; Webmail module.</li> <li>/var/log/apache2/ -&gt; Webmail module.</li> <li>/var/log/clamav/ -&gt; Antivirus module.</li> <li>/var/log/letsencrypt/letsencrypt.log -&gt; Certificates issued by Let's Encrypt with Certbot.</li> <li>/var/log/openvpn/ -&gt; VPN module.</li> <li>/var/log/auth.log -&gt; Local system authentication.</li> </ul> <p>Below is an example of a search for warnings and errors in the Zentyal log:</p> <pre><code>egrep -i '(ERROR|WARN)&gt;' /var/log/zentyal/zentyal.log\n</code></pre> <p>Info</p> <p>Warnings are usually not relevant.</p> <p>The result of a harmless warning and an error:</p> <pre><code>2023/02/04 20:06:31 WARN&gt; zentyal.psgi:43 Plack::Sandbox::_2fusr_2fshare_2fzentyal_2fpsgi_2fzentyal_2epsgi::__ANON__ - Argument \"Icecrown-RC-\" isn't numeric in numeric eq (==) at /usr/share/perl5/EBox/OpenVPN/Model/ServerConfiguration.pm line 572.\n\n2023/02/04 20:06:53 ERROR&gt; MyDBEngine.pm:200 EBox::MyDBEngine::_connect - Connection DB Error: Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (13)\n</code></pre>","tags":["Zentyal"]},{"location":"en/maintenance/#state-of-the-system-package-system","title":"State of the system package system","text":"<p>Another critical task to check is whether the server has any broken packages. This can be seen with the following command:</p> <pre><code>dpkg -l | egrep -v '^(ii|rc)'\n</code></pre> <p>An example of a system with no broken packages:</p> <pre><code>Desired=Unknown/Install/Remove/Purge/Hold\n| Status=Not/Inst/Conf-files/Unpacked/halF-conf/Half-inst/trig-aWait/Trig-pend\n|/ Err?=(none)/Reinst-required (Status,Err: uppercase=bad)\n||/ Name                                  Version                           Architecture Description\n+++-=====================================-=================================-============-===============================================================================\n</code></pre>","tags":["Zentyal"]},{"location":"en/maintenance/#system-report","title":"System report","text":"<p>It is convenient to generate a system report once a week to see the general status of the server and detect possible incidents. The report can be generated using the CLI as shown below:</p> <pre><code>/usr/share/zentyal/smart-admin-report &gt; zentyal-report_12-02-2023\n</code></pre> <p>Below are some of the most important sections of the report that should be reviewed carefully (NOTE: The result shown below is from a system in good condition):</p> <ul> <li> <p>Disk usage -&gt; Available space on disks.</p> <pre><code>Filesystem      Type      Size  Used Avail Use% Mounted on\n/dev/root       ext4       29G  8.0G   21G  28% /\n/dev/nvme2n1p1  ext4      9.8G   17M  9.3G   1% /var/vmail\n/dev/nvme1n1p1  ext4      9.8G  228K  9.3G   1% /home\n/dev/nvme0n1p15 vfat      105M  5.2M  100M   5% /boot/efi\n</code></pre> </li> <li> <p>Network Interfaces where were -&gt; Network failures.</p> <pre><code>Network Interfaces where were 'Down': 0\n</code></pre> </li> <li> <p>Server packages -&gt; Broken packages or packages pending updates.</p> <pre><code>Broken packages: 0\nUpgradable packages:\n\nExpanded Security Maintenance for Applications is not enabled.\n\n0 updates can be applied immediately.\n\nEnable ESM Apps to receive additional future security updates.\nSee https://ubuntu.com/esm or run: sudo pro status\n\nLast update by Zentyal: 2023-02-122\n</code></pre> </li> <li> <p>DNS users on DnsAdmins -&gt; The special user of the DNS module must exist and belong to the special domain group called DnsAdmins.</p> <pre><code>dns-arthas\n</code></pre> </li> <li> <p>Daemons' information -&gt; Status of the old demons of the domain controller (they should be inactive).</p> <pre><code>Status of the daemon: 'smbd': inactive\nState of the daemon: 'smbd': masked\n\nStatus of the daemon: 'nmbd': inactive\nState of the daemon: 'nmbd': masked\n\nStatus of the daemon: 'winbind': inactive\nState of the daemon: 'winbind': masked\n\nStatus of the daemon: 'sssd': inactive\nState of the daemon: 'sssd':\n</code></pre> </li> <li> <p>Samba database check -&gt; Errors in the Samba database.</p> <pre><code>Checked 3763 objects (0 errors)\n</code></pre> </li> <li> <p>DNS alias -&gt; Special CNAME record in the domain for the domain controller.</p> <pre><code>cb8c94d6-fde3-4f61-9d61-8b7e6c1ce537._msdcs.icecrown.es is an alias for arthas.icecrown.es.\n</code></pre> </li> <li> <p>Mails status -&gt; The status of the emails managed by the email module.</p> <pre><code>Mail queue:\nMail queue is empty\nMails sent: 2\nMails rejected: 0\nMails bounced: 0\nMails analized by Mailfilter: 1\nMails with virus: 0\nMails block by SPAM: 0\nMails block by File Type: 0\n</code></pre> </li> </ul>","tags":["Zentyal"]},{"location":"en/monitoring/","title":"Monitoring","text":"<p>On this page, we will configure a monitoring system for our Zentyal server using AWS CloudWatch service. Additionally, we will also make use of the AWS SSM Parameter Store service to host the CloudWatch agent configuration on our server and finally, the AWS SNS service for alert notifications.</p> <p>Warning</p> <p>Implementing these services will have an additional monthly cost.</p>","tags":["AWS"]},{"location":"en/monitoring/#sns","title":"SNS","text":"<p>To notify any alerts triggered in CloudWatch, we will use the SNS service, which will send an email to a specified email account. In my case, I will use the created account of <code>it.infra@icecrown.es</code>.</p> <ol> <li> <p>Go to <code>SNS</code> and create a topic called <code>Prod-Zentyal-Email-Alerting</code>:</p> <p> </p> </li> <li> <p>Create a <code>subscription</code> for the email account that will receive the notifications:</p> <p></p> </li> <li> <p>Finally, wait for the email invitation to arrive and activate the subscription.</p> <p></p> <p>Note</p> <p>Since we have the graylist enabled, it may take a few minutes for the invitation to arrive.</p> </li> </ol>","tags":["AWS"]},{"location":"en/monitoring/#ssm-parameter-store","title":"SSM Parameter Store","text":"<p>To monitor the resources of the Zentyal server, we will use the AWS CloudWatch service, and we will store its configuration file in the SSM Parameter store.</p> <p>The configuration I will specify is:</p> <ul> <li>The complete path to the parameter will be called <code>/zentyal/prod/cloudwatch-config</code></li> <li>The CloudWatch namespace will be called <code>CWA-Prod-Zentyal</code>.</li> <li>The metrics interval will be <code>60</code> seconds.</li> <li>Additional metrics will be configured for:<ul> <li>RAM</li> <li>Swap</li> <li>Disk.</li> </ul> </li> <li>The 3 EBS volumes will be included in the disk metrics.</li> <li>The log <code>/var/log/zentyal/zentyal.log</code> will also be monitored, with a retention of 7 days.</li> <li>The log group in CloudWatch will be called <code>CWAL-Prod-Zentyal</code>.</li> </ul> <p>Info</p> <p>For additional configurations or questions, we have the configuration reference here.</p> <p>The following actions will be taken:</p> <ol> <li>Go to the region where we have the instance, which in my case is Paris.</li> <li>Go to <code>AWS Systems Manager -&gt; Parameter Store -&gt; Create parameter</code>.</li> <li> <p>Create the <code>parameter</code>:</p> <p></p> </li> <li> <p>Add the agent configuration to the <code>Value</code> section:</p> <pre><code>{\n\"agent\": {\n\"metrics_collection_interval\": 60,\n\"run_as_user\": \"root\"\n},\n\"metrics\": {\n\"namespace\": \"CWA-Prod-Zentyal\",\n\"aggregation_dimensions\": [\n[\n\"InstanceId\"\n]\n],\n\"append_dimensions\": {\n\"AutoScalingGroupName\": \"${aws:AutoScalingGroupName}\",\n\"ImageId\": \"${aws:ImageId}\",\n\"InstanceId\": \"${aws:InstanceId}\",\n\"InstanceType\": \"${aws:InstanceType}\"\n},\n\"metrics_collected\": {\n\"mem\": {\n\"measurement\": [\n\"used_percent\",\n\"used\",\n\"free\",\n\"total\",\n\"cached\",\n\"buffered\"\n],\n\"metrics_collection_interval\": 60\n},\n\"swap\": {\n\"measurement\": [\n\"used_percent\",\n\"used\",\n\"free\"\n],\n\"metrics_collection_interval\": 60\n},\n\"disk\": {\n\"measurement\": [\n\"used_percent\",\n\"used\",\n\"free\",\n\"total\",\n\"inodes_used\",\n\"inodes_free\",\n\"inodes_total\"\n],\n\"metrics_collection_interval\": 60,\n\"ignore_file_system_types\": [\n\"tmpfs\",\n\"vfat\",\n\"devtmps\"\n],\n\"resources\": [\n\"/\",\n\"/var/vmail\",\n\"/home\"\n]\n},\n\"statsd\": {\n\"metrics_aggregation_interval\": 60,\n\"metrics_collection_interval\": 60,\n\"service_address\": \":8125\"\n}\n}\n},\n\"logs\": {\n\"logs_collected\": {\n\"files\": {\n\"collect_list\": [\n{\n\"file_path\": \"/var/log/zentyal/zentyal.log\",\n\"log_group_name\": \"CWAL-Prod-Zentyal\",\n\"log_stream_name\": \"{instance_id}\",\n\"retention_in_days\": 7,\n\"timezone\": \"UTC\"\n}\n]\n}\n},\n\"log_stream_name\": \"Stream-Prod-Zentyal\",\n\"force_flush_interval\" : 15\n}\n}\n</code></pre> </li> <li> <p>With the parameter created, we will create an IAM policy that allows access from the EC2 instance to the newly created parameter. To do this, go to <code>IAM -&gt; Policies</code></p> </li> <li> <p>Create a policy that has the following content:</p> <pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"ParameterStoreZentyal1\",\n\"Effect\": \"Allow\",\n\"Action\": [\n\"ssm:GetParameterHistory\",\n\"ssm:GetParametersByPath\",\n\"ssm:GetParameters\",\n\"ssm:GetParameter\"\n],\n\"Resource\": [\n\"arn:aws:ssm:eu-west-3:*:parameter/zentyal/prod/cloudwatch-config\"\n]\n},\n{\n\"Sid\": \"ParameterStoreZentyal2\",\n\"Effect\": \"Allow\",\n\"Action\": \"ssm:DescribeParameters\",\n\"Resource\": \"*\"\n}\n]\n}\n</code></pre> <p></p> </li> <li> <p>Create another policy that allows uploading the log file to CloudWatch:</p> <pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"ZentyalCloudWatchLogs\",\n\"Effect\": \"Allow\",\n\"Action\": [\n\"logs:CreateLogGroup\",\n\"logs:CreateLogStream\",\n\"logs:PutLogEvents\",\n\"logs:DescribeLogStreams\"\n],\n\"Resource\": [\n\"arn:aws:logs:eu-west-3:*:*\"\n]\n}\n]\n}\n</code></pre> <p></p> </li> <li> <p>Create a role where we will associate the newly created policies and also the existing one called <code>CloudWatchAgentServerPolicy</code>. To do this, go to <code>IAM -&gt; Roles</code>:</p> <p> </p> </li> <li> <p>Finally, associate the newly created role with the Zentyal instance. To do this, go to <code>EC2 -&gt; Actions -&gt; Security -&gt; Modify IAM role</code>:</p> <p></p> </li> </ol>","tags":["AWS"]},{"location":"en/monitoring/#cloudwatch","title":"Cloudwatch","text":"<p>Once we have the AWS environment ready, we will proceed to install and configure the CloudWatch agent to monitor the server and Zentyal's main log file.</p> <ol> <li> <p>Download the CloudWatch agent <code>.deb</code> package to our Zentyal server:</p> <pre><code>sudo curl \"https://s3.amazonaws.com/amazoncloudwatch-agent/debian/amd64/latest/amazon-cloudwatch-agent.deb\" -o \"/opt/amazon-cloudwatch-agent.deb\"\n</code></pre> </li> <li> <p>Install the package:</p> <pre><code>sudo dpkg -i -E /opt/amazon-cloudwatch-agent.deb\n</code></pre> </li> <li> <p>Descargamos tambi\u00e9n el archivo comprimido que contiene el binario de AWS para la CLI:</p> <pre><code>sudo curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"/opt/awscliv2.zip\"\n</code></pre> </li> <li> <p>Install the unzip package to <code>unzip</code> the file:</p> <pre><code>sudo apt update\nsudo apt install -y unzip\n</code></pre> </li> <li> <p>Unzip the file and install it:</p> <pre><code>sudo unzip /opt/awscliv2.zip -d /opt/aws/\nsudo /opt/aws/aws/install\n</code></pre> </li> <li> <p>Configure the CloudWatch agent:</p> <pre><code>sudo amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c ssm:/zentyal/prod/cloudwatch-config\n</code></pre> </li> <li> <p>Confirm that the service is active:</p> <pre><code>sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a status\n</code></pre> <p>The result I have obtained:</p> <pre><code>{\n\"status\": \"running\",\n\"starttime\": \"2023-02-25T09:59:17+00:00\",\n\"configstatus\": \"configured\",\n\"version\": \"1.247357.0b252275\"\n}\n</code></pre> </li> <li> <p>After waiting a couple of minutes, go to <code>CloudWatch -&gt; All metrics</code> and check that the namespace with custom metrics has been created:</p> <p> </p> </li> <li> <p>Finally, we also check that the Zentyal log file is being monitored. To do this, we go to <code>CloudWatch -&gt; Log groups</code>:</p> <p> </p> </li> </ol>","tags":["AWS"]},{"location":"en/monitoring/#logs","title":"Logs","text":"<p>With the main Zentyal file monitored by CloudWatch, we create a metric filter that checks if the log file contains the event <code>ERROR&gt;</code>. The purpose is to create an alert that notifies via email through AWS SNS when this type of event occurs.</p> <ol> <li> <p>Go to <code>CloudWatch -&gt; Metric filters</code> and create the filter:</p> <p> </p> </li> <li> <p>Once the filter is created and a couple of minutes have passed for CloudWatch to collect information.</p> </li> <li> <p>Finally, verify that from <code>CloudWatch -&gt; All metrics</code> we have the metric available:</p> <p></p> <p>Note</p> <p>The type of metric shown in the image is of type <code>Number</code> as can be seen at the top.</p> </li> </ol>","tags":["AWS"]},{"location":"en/monitoring/#dashboard","title":"Dashboard","text":"<p>Once the monitoring system is confirmed to be working, we can create a dashboard that groups the most important metrics from <code>CloudWatch -&gt; Dashboard</code>. Here's a simple example:</p> <p></p>","tags":["AWS"]},{"location":"en/monitoring/#alerts","title":"Alerts","text":"<p>The last thing we will do on the monitoring system is to create alerts. All alerts we configure will be made from <code>CloudWatch -&gt; All alarm</code> and will be as follows:</p> <ul> <li>CPU:<ul> <li>Check will be done every minute.</li> <li>The alert value to trigger will be greater than 80%.</li> <li>For a notification to be sent, the alert must occur 3 times in a row.</li> </ul> </li> <li>RAM:<ul> <li>Check will be done every minute.</li> <li>The alert value to trigger will be greater than 80%.</li> <li>For a notification to be sent, the alert must occur 3 times in a row.</li> </ul> </li> <li>System disk:<ul> <li>Check will be done every minute.</li> <li>The alert value to trigger will be greater than 80%.</li> <li>For a notification to be sent, the alert must occur 3 times in a row.</li> </ul> </li> <li>Mail disk:<ul> <li>Check will be done every minute.</li> <li>The alert value to trigger will be greater than 80%.</li> <li>For a notification to be sent, the alert must occur 3 times in a row.</li> </ul> </li> <li>Shared resources disk:<ul> <li>Check will be done every minute.</li> <li>The alert value to trigger will be greater than 80%.</li> <li>For a notification to be sent, the alert must occur 3 times in a row.</li> </ul> </li> <li>DLM for system:<ul> <li>Check will be done once a day.</li> <li>The alert value to trigger will be equal to or greater than 1.</li> <li>For a notification to be sent, the alert must occur once.</li> </ul> </li> <li>DLM for mail:<ul> <li>Check will be done once a day.</li> <li>The alert value to trigger will be equal to or greater than 1.</li> <li>For a notification to be sent, the alert must occur once.</li> </ul> </li> <li>DLM for shared resources:<ul> <li>The check will be performed once a day.</li> <li>The alert value to trigger it will be equal to or greater than 1.</li> <li>For a notification to be sent, the alert must occur only once.</li> </ul> </li> <li>EC2 failed checks:<ul> <li>The check will be performed every minute.</li> <li>The alert value to trigger it will be greater than 80%.</li> <li>For a notification to be sent, the alert must occur 3 times consecutively.</li> </ul> </li> <li>Instance failed checks:<ul> <li>The check will be performed every minute.</li> <li>The alert value to trigger it will be greater than 80%.</li> <li>For a notification to be sent, the alert must occur 3 times consecutively.</li> </ul> </li> <li>Zentyal log errors:<ul> <li>The check will be performed once a day.</li> <li>The alert value to trigger it will be equal to or greater than 1.</li> <li>For a notification to be sent, the alert must occur only once.</li> </ul> </li> </ul>","tags":["AWS"]},{"location":"en/monitoring/#system-disk","title":"System Disk","text":"","tags":["AWS"]},{"location":"en/monitoring/#mail-disk","title":"Mail Disk","text":"","tags":["AWS"]},{"location":"en/monitoring/#shares-disk","title":"Shares Disk","text":"","tags":["AWS"]},{"location":"en/monitoring/#dlm-system","title":"DLM - System","text":"","tags":["AWS"]},{"location":"en/monitoring/#zentyal-log","title":"Zentyal log","text":"","tags":["AWS"]},{"location":"en/recovery/","title":"Recovery","text":"<p>On this page, we will explain the three possible scenarios regarding recoveries, from the \"most\" probable to the \"least\". In all three cases, we will use the DLM backup policies defined on the backup page.</p>","tags":["AWS"]},{"location":"en/recovery/#shared-resources","title":"Shared resources","text":"<p>In this section, I will simulate that a user has deleted an important file named <code>Nomimas 2023.pdf</code> in a shared resource called <code>rrhh</code>. The general process will be as follows:</p> <ol> <li>We will check the existence of the resource and then delete it.</li> <li>We will create an EBS volume from the latest available snapshot.</li> <li>We will mount the volume in a temporary location.</li> <li>We will restore the deleted file.</li> <li>We will verify that the user has the file again and that it is accessible.</li> <li>We will unmount and delete the volume.</li> </ol> <p>To simulate the loss of the important document, I will simply connect with the user, check the existence of the document, and delete it.</p> <ol> <li> <p>With the user, we will check the existence of the document in the shared resource:</p> <p></p> </li> <li> <p>We will delete the resource:</p> <p></p> </li> </ol> <p>With the simulated disaster, we will proceed with its recovery.</p> <ol> <li> <p>From <code>EC2 -&gt; Elastic Block Store -&gt; Snapshots -&gt; Create volume from snapshot</code>, we select the latest snapshot and create a volume:</p> <p></p> </li> <li> <p>We configure the temporary volume:</p> <p>Warning</p> <p>It must be created in the same availability zone.</p> <p> </p> </li> <li> <p>We verify that the volume has been successfully created and is available:</p> <p></p> </li> <li> <p>We attach the volume to the instance, for that, we go to <code>Actions -&gt; Attach volume</code>:</p> <p></p> </li> <li> <p>We connect via SSH to the server and verify that the operating system detects the new volume:</p> <pre><code>lsblk\n</code></pre> <p>In my environment, the volume has been mounted as <code>nvme3n1p1</code>:</p> <pre><code>NAME         MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nnvme0n1      259:0    0   30G  0 disk\n\u251c\u2500nvme0n1p1  259:2    0 29.9G  0 part /\n\u251c\u2500nvme0n1p14 259:3    0    4M  0 part\n\u2514\u2500nvme0n1p15 259:4    0  106M  0 part /boot/efi\nnvme2n1      259:1    0   10G  0 disk\n\u2514\u2500nvme2n1p1  259:5    0   10G  0 part /home\nnvme1n1      259:6    0   10G  0 disk\n\u2514\u2500nvme1n1p1  259:7    0   10G  0 part /var/vmail\nnvme3n1      259:8    0   10G  0 disk\n\u2514\u2500nvme3n1p1  259:9    0   10G  0 part\n</code></pre> </li> <li> <p>We create a temporary directory where we will mount the new disk:</p> <pre><code>sudo mkdir -v /mnt/shares-recovery\n</code></pre> </li> <li> <p>We mount the volume:</p> <pre><code>sudo mount /dev/nvme3n1p1 /mnt/shares-recovery\n</code></pre> </li> <li> <p>We search for the document in the shared resource <code>rrhh</code> in the directory where we mounted the temporary disk:</p> <pre><code>sudo find /mnt/shares-recovery/samba/shares/rrhh/ -type f -exec ls -l {} \\;\n</code></pre> <p>Example on my server:</p> <pre><code>-rwxrwx---+ 1 ICECROWN\\maria ICECROWN\\domain users 21377 Feb 27 20:57 '/mnt/shares-recovery/samba/shares/rrhh/Nominas 2023.pdf'\n</code></pre> </li> <li> <p>Once the file has been identified, we proceed with its restoration:</p> <pre><code>cp -vp /mnt/shares-recovery/samba/shares/rrhh/Nominas\\ 2023.pdf /home/samba/shares/rrhh/\n</code></pre> <p>Warning</p> <p>It is important to use the <code>-p</code> option to preserve the file permissions, otherwise, the user won't be able to access it.</p> </li> <li> <p>From the user, we verify that the file was recovered and that it is accessible:</p> <p></p> </li> <li> <p>Once we have confirmed the restoration of the file, we proceed to unmount the disk and delete the temporary directory created:</p> <pre><code>sudo umount -v /mnt/shares-recovery\nsudo rmdir -v /mnt/shares-recovery\n</code></pre> </li> <li> <p>We detach the EBS volume from the instance, for that, we go to <code>Actions -&gt; Detach volume</code>:</p> <p></p> </li> <li> <p>Finally, we delete the EBS volume from <code>Actions -&gt; Delete volume</code>:</p> <p></p> </li> </ol>","tags":["AWS"]},{"location":"en/recovery/#emails","title":"Emails","text":"<p>The objective of this section is to simulate that a user named <code>maria</code> has deleted an email called <code>Presupuesto 2023</code> with an attachment. The general process is very similar to the previous one, which consists of:</p> <ol> <li>We will check the existence of the email and then delete it.</li> <li>We will create an EBS volume from the latest available snapshot.</li> <li>We will mount the volume in a temporary location.</li> <li>We will restore the deleted email.</li> <li>We will check that the user has access to the email again.</li> <li>We will unmount and delete the volume.</li> </ol> <p>To simulate the loss of an important email, I will use the webmail to check the email and then delete it.</p> <ol> <li> <p>We log in with the user and check the email:</p> <p></p> </li> <li> <p>We delete the email:</p> <p> </p> </li> </ol> <p>Now that we have simulated the disaster, we will proceed to perform the necessary actions to recover the email.</p> <ol> <li> <p>From <code>EC2 -&gt; Elastic Block Store -&gt; Snapshots -&gt; Create volume from snapshot</code> we select the latest snapshot and create a volume:</p> <p></p> </li> <li> <p>We configure the temporary volume:</p> <p>Warning</p> <p>It must be created in the same availability zone.</p> <p> </p> </li> <li> <p>We verify that the volume has been created successfully and is available:</p> <p></p> </li> <li> <p>We attach the volume to the instance, for this, we go to <code>Actions -&gt; Attach volume</code>:</p> <p></p> </li> <li> <p>We connect via SSH to the server and check that the operating system detects the new volume:</p> <pre><code>lsblk\n</code></pre> <p>In my environment, the volume has been mounted as <code>nvme3n1p1</code>:</p> <pre><code>NAME         MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nnvme1n1      259:0    0   10G  0 disk\n\u2514\u2500nvme1n1p1  259:1    0   10G  0 part /var/vmail\nnvme0n1      259:2    0   30G  0 disk\n\u251c\u2500nvme0n1p1  259:5    0 29.9G  0 part /\n\u251c\u2500nvme0n1p14 259:6    0    4M  0 part\n\u2514\u2500nvme0n1p15 259:7    0  106M  0 part /boot/efi\nnvme2n1      259:3    0   10G  0 disk\n\u2514\u2500nvme2n1p1  259:4    0   10G  0 part /home\nnvme3n1      259:8    0   10G  0 disk\n\u2514\u2500nvme3n1p1  259:9    0   10G  0 part\n</code></pre> </li> <li> <p>We create a temporary directory where we will mount the new disk:</p> <pre><code>sudo mkdir -v /mnt/mail-recovery\n</code></pre> </li> <li> <p>We mount the volume:</p> <pre><code>sudo mount /dev/nvme3n1p1 /mnt/mail-recovery\n</code></pre> </li> <li> <p>We search for the email of the user <code>maria</code> in the directory where we have mounted the temporary disk:</p> <pre><code>sudo find /mnt/mail-recovery/icecrown.es/maria/ -type f -exec ls -l {} \\;\n</code></pre> <p>Example on my server:</p> <pre><code>-rw------- 1 ebox ebox 2180 Feb 27 21:36 /mnt/mail-recovery/icecrown.es/maria/Maildir/dovecot.index.cache\n-rw------- 1 ebox ebox 384 Feb 27 21:33 /mnt/mail-recovery/icecrown.es/maria/Maildir/dovecot.list.index.log\n-rw------- 1 ebox ebox 8 Feb 27 21:33 /mnt/mail-recovery/icecrown.es/maria/Maildir/dovecot-uidvalidity\n-rw------- 1 ebox ebox 102 Feb 27 21:36 /mnt/mail-recovery/icecrown.es/maria/Maildir/dovecot-uidlist\n-rw------- 1 ebox ebox 24 Feb 27 21:36 /mnt/mail-recovery/icecrown.es/maria/Maildir/maildirsize\n-r--r--r-- 1 ebox ebox 0 Feb 27 21:33 /mnt/mail-recovery/icecrown.es/maria/Maildir/dovecot-uidvalidity.63fd1386\n-rw------- 1 ebox ebox 31900 Feb 27 21:36 '/mnt/mail-recovery/icecrown.es/maria/Maildir/cur/1677530165.M104169P13132.arthas,S=31900,W=32366:2,S'\n-rw------- 1 ebox ebox 1124 Feb 27 21:37 /mnt/mail-recovery/icecrown.es/maria/Maildir/dovecot.index.log\n</code></pre> </li> <li> <p>Once the email has been identified, we proceed to restore it:</p> <pre><code>sudo cp -vp '/mnt/mail-recovery/icecrown.es/maria/Maildir/cur/1677530165.M104169P13132.arthas,S=31900,W=32366:2,S' /var/vmail/icecrown.es/maria/Maildir/cur/\n</code></pre> <p>Warning</p> <p>It is important to use the <code>-p</code> option to preserve the file permissions, otherwise, the user will not be able to access it. Additionally, it will also be important to restore it in the same directory, which in my case is: <code>icecrown.es/maria/Maildir/cur/</code>.</p> </li> <li> <p>From the user's email account, we verify that we have successfully recovered it along with its attachment.</p> <p> </p> </li> <li> <p>Once the email has been successfully restored, we proceed to unmount the disk and delete the temporary directory created:</p> <pre><code>sudo umount -v /mnt/mail-recovery\nsudo rmdir -v /mnt/mail-recovery\n</code></pre> </li> <li> <p>We detach the EBS volume from the instance, for this, we go to <code>Actions -&gt; Detach volume</code>:</p> <p></p> </li> <li> <p>Finally, we delete the EBS volume from  <code>Actions -&gt; Delete volume</code>:</p> <p></p> </li> </ol>","tags":["AWS"]},{"location":"en/recovery/#system","title":"System","text":"<p>For this section, I will simulate that the system has become completely inoperable because a system administrator has accidentally deleted the <code>zentyal-core</code> package. The general process is as follows:</p> <ol> <li>We will cause the disaster.</li> <li>We will create an EBS volume from the latest available snapshot.</li> <li>We will replace the instance volume with the new one.</li> <li>We will check that the server is back up and running.</li> <li>We will delete the original volume.</li> </ol> <p>To simulate the disaster, I will delete the <code>zentyal-core</code> package.</p> <ol> <li> <p>We will log in to the server via SSH and check the status of the Zentyal packages:</p> <pre><code>dpkg -l | egrep 'zen(buntu|tyal)-'\n</code></pre> <p>The result obtained in my case:</p> <pre><code>ii  zentyal-antivirus                     7.0.2                             all          Zentyal - Antivirus\nii  zentyal-ca                            7.0.1                             all          Zentyal - Certification Authority\nii  zentyal-core                          7.0.5                             all          Zentyal - Core\nii  zentyal-dns                           7.0.2                             all          Zentyal - DNS Server\nii  zentyal-firewall                      7.0.0                             all          Zentyal - Firewall\nii  zentyal-mail                          7.0.2                             all          Zentyal - Mail\nii  zentyal-mailfilter                    7.0.0                             all          Zentyal - Mail Filter\nii  zentyal-network                       7.0.0                             all          Zentyal - Network Configuration\nii  zentyal-ntp                           7.0.0                             all          Zentyal - NTP Service\nii  zentyal-openvpn                       7.0.0                             all          Zentyal - VPN\nii  zentyal-samba                         7.0.1                             all          Zentyal - Domain Controller and File Sharing\nii  zentyal-software                      7.0.0                             all          Zentyal - Software Management\nii  zentyal-sogo                          7.0.0                             all          Zentyal - Web Mail\n</code></pre> </li> <li> <p>We will remove the <code>zentyal-core</code> package to cause instability:</p> <pre><code>sudo apt remove -y zentyal-core\n</code></pre> </li> <li> <p>Finally, we confirm that the modules have been uninstalled, leaving the server inoperable:</p> <pre><code>dpkg -l | egrep 'zen(buntu|tyal)-'\n</code></pre> <p>The result obtained in my case:</p> <pre><code>rc  zentyal-antivirus                     7.0.2                             all          Zentyal - Antivirus\nrc  zentyal-ca                            7.0.1                             all          Zentyal - Certification Authority\nrc  zentyal-core                          7.0.5                             all          Zentyal - Core\nrc  zentyal-dns                           7.0.2                             all          Zentyal - DNS Server\nrc  zentyal-firewall                      7.0.0                             all          Zentyal - Firewall\nrc  zentyal-mail                          7.0.2                             all          Zentyal - Mail\nrc  zentyal-mailfilter                    7.0.0                             all          Zentyal - Mail Filter\nrc  zentyal-network                       7.0.0                             all          Zentyal - Network Configuration\nrc  zentyal-ntp                           7.0.0                             all          Zentyal - NTP Service\nrc  zentyal-openvpn                       7.0.0                             all          Zentyal - VPN\nrc  zentyal-samba                         7.0.1                             all          Zentyal - Domain Controller and File Sharing\nrc  zentyal-software                      7.0.0                             all          Zentyal - Software Management\nrc  zentyal-sogo                          7.0.0                             all          Zentyal - Web Mail\n</code></pre> </li> </ol> <p>With the disaster properly implemented, we will proceed to restore it using the latest available snapshot.</p> <ol> <li> <p>From <code>EC2 -&gt; Elastic Block Store -&gt; Snapshots -&gt; Create volume from snapshot</code>, we select the latest snapshot and create a volume:</p> <p></p> </li> <li> <p>We configure the volume:</p> <p>Warning</p> <p>It must be created in the same availability zone.</p> <p> </p> </li> <li> <p>We verify that the volume has been successfully created and is available:</p> <p></p> </li> <li> <p>We stop the EC2 instance by going to <code>EC2 -&gt; Instances -&gt; Instance state</code>:</p> <p></p> </li> <li> <p>Once stopped, we get the system volume mount point from <code>EC2 -&gt; Elastic Block Store -&gt; Volumes</code> (option Attached instances):</p> <p></p> </li> <li> <p>We detach the unstable EBS from the system from <code>Actions -&gt; Detach volume</code>:</p> <p></p> </li> <li> <p>We attach the new volume created in step 2 from <code>Actions -&gt; Detach volume</code>:</p> <p> </p> <p>Warning</p> <p>The mount point (Device name) must be the same as obtained in step 5.</p> </li> <li> <p>We start the instance from <code>EC2 -&gt; Instances -&gt; Instance state</code>:</p> <p></p> </li> <li> <p>We connect to the instance and check that the packages are properly installed again:</p> <pre><code>dpkg -l | egrep 'zen(buntu|tyal)-'\n</code></pre> <p>The result obtained in my case:</p> <pre><code>ii  zentyal-antivirus                     7.0.2                             all          Zentyal - Antivirus\nii  zentyal-ca                            7.0.1                             all          Zentyal - Certification Authority\nii  zentyal-core                          7.0.5                             all          Zentyal - Core\nii  zentyal-dns                           7.0.2                             all          Zentyal - DNS Server\nii  zentyal-firewall                      7.0.0                             all          Zentyal - Firewall\nii  zentyal-mail                          7.0.2                             all          Zentyal - Mail\nii  zentyal-mailfilter                    7.0.0                             all          Zentyal - Mail Filter\nii  zentyal-network                       7.0.0                             all          Zentyal - Network Configuration\nii  zentyal-ntp                           7.0.0                             all          Zentyal - NTP Service\nii  zentyal-openvpn                       7.0.0                             all          Zentyal - VPN\nii  zentyal-samba                         7.0.1                             all          Zentyal - Domain Controller and File Sharing\nii  zentyal-software                      7.0.0                             all          Zentyal - Software Management\nii  zentyal-sogo                          7.0.0                             all          Zentyal - Web Mail\n</code></pre> </li> <li> <p>We delete the unstable EBS volume by going to <code>EC2 -&gt; Elastic Block Store -&gt; Volumes -&gt; Delete volume</code>:</p> <p></p> </li> <li> <p>Finally, we modify the <code>Name</code> tag of the new volume from <code>Tags -&gt; Manage tags</code>:</p> <p> </p> </li> </ol>","tags":["AWS"]},{"location":"en/zentyal-bug-fixing/","title":"Bugfixing","text":"<p>On this page, we will briefly explain and propose solutions to the bugs found as of (2023-02) that affect the deployment of Zentyal in the project we have created.</p>","tags":["Zentyal"]},{"location":"en/zentyal-bug-fixing/#webadmin","title":"Webadmin","text":"<p>Below are the bugs found in the Webadmin module.</p>","tags":["Zentyal"]},{"location":"en/zentyal-bug-fixing/#saving-changes","title":"Saving changes","text":"<p>In version <code>7.0.5</code> of the <code>zentyal-core</code> module, there is this bug that causes the administration interface to always display the message \"saving changes\".</p> <p>To temporarily solve the issue, do the following:</p> <ol> <li> <p>In the file <code>/usr/share/perl5/EBox/WebAdmin.pm</code>, modify the _daemons method of line 99 with the following content:</p> <pre><code>sub _daemons\n{\nreturn [\n{ name =&gt; 'zentyal.webadmin-uwsgi' },\n{ name =&gt; 'zentyal.webadmin-nginx' }\n];\n}\n</code></pre> </li> <li> <p>Restart the Webadmin module:</p> <pre><code>sudo zs webadmin restart\n</code></pre> </li> </ol> <p>With this, the bug will be temporarily fixed.</p>","tags":["Zentyal"]},{"location":"en/zentyal-bug-fixing/#webmail","title":"Webmail","text":"<p>Below are the bugs found in the Webmail module.</p>","tags":["Zentyal"]},{"location":"en/zentyal-bug-fixing/#imaps","title":"IMAPS","text":"<p>The configuration established by Zentyal for the IMAPS protocol in the Webmail module is correct as long as a recognized certificate is used. If the default certificate is used, an error will be displayed when logging in, indicating that it cannot access the user's mailbox.</p> <p>This bug is present in version <code>7.0.0</code> of the <code>zentyal-sogo</code> package. We can see the version of our package by running the command: <code>sudo dpkg -l zentyal-sogo</code>.</p> <p>There are several solutions to this problem:</p> <ol> <li>We can modify the configuration parameter to allow insecure certificate connections on localhost.</li> <li>We can temporarily enable the <code>IMAP</code> protocol from <code>Mail -&gt; General</code>.</li> <li>We can use a recognized certificate in the Webmail (Sogo) module, as explained on the Certificates page.</li> </ol> <p>If we want to apply the first option, we need to perform the following actions:</p> <ol> <li> <p>In the file <code>/usr/share/perl5/EBox/SOGo.pm</code>, edit line 265 and set the following content:</p> <pre><code>my $imapServer = ($mail-&gt;imap() ? '127.0.0.1:143' : '\"imaps://127.0.0.1:993/?tlsVerifyMode=allowInsecureLocalhost\"');\n</code></pre> </li> <li> <p>Restart the modules: Webmail and Sogo:</p> <pre><code>sudo zs webadmin restart\nsudo zs sogo restart\n</code></pre> </li> <li> <p>Try to log in to Webmail again to confirm the solution.</p> </li> </ol>","tags":["Zentyal"]},{"location":"en/zentyal-certificates/","title":"Certificates","text":"<p>By default, Zentyal uses self-signed certificates for its modules, including the use of the CA module. This situation causes warnings to be displayed, for example, when using mail clients or when accessing the webadmin or webmail. Therefore, this page will show how to generate recognized certificates issued by Let's Encrypt.</p> <p>The actions I will take for the project are:</p> <ol> <li>I will issue 2 certificates, with one of them having two subdomains:<ul> <li>Webadmin module: <code>arthas.icecrown.es</code></li> <li>Mail and webmail module: <code>mail.icecrown.es</code> and <code>webmail.icecrown.es</code></li> </ul> </li> <li>I will use the HTTP challenge type.</li> <li>I will use the email account <code>it.infra@icecrown.es</code> as the email address to receive notifications from Let's Encrypt.</li> </ol> <p>Here are the actions to be performed before generating the certificates:</p> <ol> <li> <p>Install the necessary packages for generating certificates.</p> <pre><code>sudo apt update\nsudo apt install -y certbot python3-certbot-apache\n</code></pre> </li> <li> <p>Create a temporary rule in the Zentyal firewall and AWS security group that allows the HTTP protocol so that the certificate can be issued:</p> <p>For the Zentyal firewall: </p> <p>For the AWS security group: </p> <p>Nota</p> <p>We can remove this rule once we have issued the certificates or keep it to avoid having to re-establish it when it is time to renew the certificates.</p> </li> <li> <p>Create the email account that will receive notifications.</p> <p></p> </li> <li> <p>Verify that we can resolve the subdomains in question from the outside:</p> <pre><code>dig arthas.icecrown.es @8.8.8.8\ndig mail.icecrown.es @8.8.8.8\ndig webmail.icecrown.es @8.8.8.8\n</code></pre> <p>The result I obtained in my case is:</p> <pre><code>## Webadmin\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; arthas.icecrown.es @8.8.8.8\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 25953\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;arthas.icecrown.es.        IN  A\n\n;; ANSWER SECTION:\narthas.icecrown.es. 120 IN  A   15.237.168.75\n\n;; Query time: 20 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Sat Feb 18 22:20:39 CET 2023\n;; MSG SIZE  rcvd: 63\n\n## Mail\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; mail.icecrown.es @8.8.8.8\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 37980\n;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;mail.icecrown.es.      IN  A\n\n;; ANSWER SECTION:\nmail.icecrown.es.   300 IN  CNAME   arthas.icecrown.es.\narthas.icecrown.es. 120 IN  A   15.237.168.75\n\n;; Query time: 16 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Sat Feb 18 22:20:39 CET 2023\n;; MSG SIZE  rcvd: 82\n\n## Webmail\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; webmail.icecrown.es @8.8.8.8\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 45405\n;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;webmail.icecrown.es.       IN  A\n\n;; ANSWER SECTION:\nwebmail.icecrown.es.    300 IN  CNAME   arthas.icecrown.es.\narthas.icecrown.es. 120 IN  A   15.237.168.75\n\n;; Query time: 28 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Sat Feb 18 22:20:40 CET 2023\n;; MSG SIZE  rcvd: 85\n</code></pre> </li> </ol>","tags":["Zentyal"]},{"location":"en/zentyal-certificates/#webadmin","title":"Webadmin","text":"<p>To generate the certificate for the Webadmin (administration panel), we will use the package <code>python3-certbot-apache</code> instead of <code>python3-certbot-nginx</code> because Zentyal runs Nginx in a customized way, which causes errors when generating certificates.</p> <ol> <li> <p>Generate the certificate:</p> <pre><code>sudo certbot certonly \\\n--apache \\\n--preferred-challenges http \\\n-m it.infra@icecrown.es \\\n--agree-tos \\\n-d arthas.icecrown.es\n</code></pre> <p>An example of the result:</p> <pre><code>Saving debug log to /var/log/letsencrypt/letsencrypt.log\nPlugins selected: Authenticator apache, Installer apache\nObtaining a new certificate\nPerforming the following challenges:\nhttp-01 challenge for arthas.icecrown.es\nEnabled Apache rewrite module\nWaiting for verification...\nCleaning up challenges\n\nIMPORTANT NOTES:\n- Congratulations! Your certificate and chain have been saved at:\n/etc/letsencrypt/live/arthas.icecrown.es/fullchain.pem\nYour key file has been saved at:\n/etc/letsencrypt/live/arthas.icecrown.es/privkey.pem\nYour cert will expire on 2023-05-19. To obtain a new or tweaked\nversion of this certificate in the future, simply run certbot\nagain. To non-interactively renew *all* of your certificates, run\n\"certbot renew\"\n- If you like Certbot, please consider supporting our work by:\n\nDonating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate\nDonating to EFF:                    https://eff.org/donate-le\n</code></pre> </li> <li> <p>With the generated certificate, we will need to modify the configuration template (stub) of the module so that this change persists in future updates of the module by Zentyal. To do this, we will create the necessary directories:</p> <pre><code>sudo mkdir -vp /etc/zentyal/stubs/core\n</code></pre> </li> <li> <p>Copy the template to modify:</p> <pre><code>sudo cp -v /usr/share/zentyal/stubs/core/nginx.conf.mas /etc/zentyal/stubs/core/\n</code></pre> </li> <li> <p>Modify the following configuration parameters in the newly copied template:</p> <pre><code>## Custom certificates issued on 18-02-2023 by Daniel\n# ssl_certificate &lt;% $zentyalconfdir %&gt;ssl/ssl.pem;\n# ssl_certificate_key &lt;% $zentyalconfdir %&gt;ssl/ssl.pem;\nssl_certificate  /etc/letsencrypt/live/arthas.icecrown.es/fullchain.pem;\nssl_certificate_key /etc/letsencrypt/live/arthas.icecrown.es/privkey.pem;\n</code></pre> </li> <li> <p>Optionally, I will also modify the following configuration parameters, whose values have been generated from this website.</p> <pre><code>## Custom configuration applied on 18-02-2023 by Daniel\n## https://ssl-config.mozilla.org/#server=nginx&amp;version=1.17.7&amp;config=intermediate&amp;openssl=1.1.1k&amp;hsts=false&amp;ocsp=false&amp;guideline=5.6\n# ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n# ssl_ciphers \"ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK\";\n# ssl_prefer_server_ciphers on;\nssl_protocols TLSv1.2 TLSv1.3;\nssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;\nssl_prefer_server_ciphers off;\n</code></pre> </li> <li> <p>Stop the Webadmin module, reload Systemd, and then restart it to apply these changes.</p> <pre><code>sudo zs webadmin stop\nsudo systemctl daemon-reload\nsudo zs webadmin restart\n</code></pre> </li> <li> <p>Finally, access the webadmin to confirm that the certificate is correct.</p> <p></p> </li> </ol>","tags":["Zentyal"]},{"location":"en/zentyal-certificates/#mail-y-webmail","title":"Mail y Webmail","text":"<p>For the Mail and Webmail modules, I will use the same certificate, meaning that the certificate will be issued with 2 subdomains instead of 1.</p> <p>We will generate the certificate:</p> <pre><code>sudo certbot certonly \\\n--apache \\\n--preferred-challenges http \\\n-m it.infra@icecrown.es \\\n--agree-tos \\\n-d mail.icecrown.es \\\n-d webmail.icecrown.es\n</code></pre> <p>An example of the result:</p> <pre><code>Saving debug log to /var/log/letsencrypt/letsencrypt.log\nPlugins selected: Authenticator apache, Installer apache\nObtaining a new certificate\nPerforming the following challenges:\nhttp-01 challenge for mail.icecrown.es\nhttp-01 challenge for webmail.icecrown.es\nEnabled Apache rewrite module\nWaiting for verification...\nCleaning up challenges\n\nIMPORTANT NOTES:\n- Congratulations! Your certificate and chain have been saved at:\n/etc/letsencrypt/live/mail.icecrown.es/fullchain.pem\nYour key file has been saved at:\n/etc/letsencrypt/live/mail.icecrown.es/privkey.pem\nYour cert will expire on 2023-05-19. To obtain a new or tweaked\nversion of this certificate in the future, simply run certbot\nagain. To non-interactively renew *all* of your certificates, run\n\"certbot renew\"\n- If you like Certbot, please consider supporting our work by:\n\nDonating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate\nDonating to EFF:                    https://eff.org/donate-le\n</code></pre> <p>With the certificate correctly generated, I will proceed to configure both modules to use it.</p>","tags":["Zentyal"]},{"location":"en/zentyal-certificates/#webmail","title":"Webmail","text":"<p>For this module, it will not be necessary to edit a stub, but instead we will simply need to modify the Apache configuration file.</p> <ol> <li> <p>We modify the configuration file <code>/etc/apache2/sites-available/default-ssl.conf</code>:</p> <pre><code>## Custom certificates issued on 18-02-2023 by Daniel\n# SSLCertificateFile    /etc/ssl/certs/ssl-cert-snakeoil.pem\n# SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key\nSSLCertificateFile  /etc/letsencrypt/live/mail.icecrown.es/fullchain.pem\nSSLCertificateKeyFile /etc/letsencrypt/live/mail.icecrown.es/privkey.pem\n</code></pre> </li> <li> <p>Optionally, I will also add the following configuration parameters to the end of the configuration file. The values of the parameters have been generated from this website.</p> <pre><code>## Custom configuration applied on 18-02-2023 by Daniel\n## https://ssl-config.mozilla.org/#server=apache&amp;version=2.4.41&amp;config=intermediate&amp;openssl=1.1.1k&amp;hsts=false&amp;ocsp=false&amp;guideline=5.6\nSSLProtocol             all -SSLv3 -TLSv1 -TLSv1.1\nSSLCipherSuite          ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384\nSSLHonorCipherOrder     off\nSSLSessionTickets       off\n</code></pre> </li> <li> <p>We restart the Apache service:</p> <pre><code>sudo systemctl restart apache2\n</code></pre> </li> <li> <p>Finally, we access the webadmin to confirm that the certificate is correct:</p> <p></p> </li> </ol>","tags":["Zentyal"]},{"location":"en/zentyal-certificates/#mail","title":"Mail","text":"<p>For this module, we will need to modify two templates ([stubs]), one for the SMTP service (Postfix) and another for IMAP/POP3 (Dovecot):</p> <ul> <li>main.cf.mas</li> <li>dovecot.conf.mas</li> </ul> <p>The actions to be performed are:</p> <ol> <li> <p>We create the directory where we will place the templates:</p> <pre><code>sudo mkdir -vp /etc/zentyal/stubs/mail\n</code></pre> </li> <li> <p>We will copy the templates to be modified:</p> <pre><code>sudo sudo cp -v /usr/share/zentyal/stubs/mail/{main.cf,dovecot.conf}.mas /etc/zentyal/stubs/mail/\n</code></pre> </li> <li> <p>We modify the <code>main.cf.mas</code> template for the Postfix service (SMTP):</p> <pre><code>## Custom certificates issued on 18-02-2023 by Daniel\n# smtpd_tls_key_file  = &lt;% $keyFile  %&gt;\n# smtpd_tls_cert_file = &lt;% $certFile %&gt;\nsmtpd_tls_key_file  = /etc/letsencrypt/live/mail.icecrown.es/privkey.pem\nsmtpd_tls_cert_file = /etc/letsencrypt/live/mail.icecrown.es/fullchain.pem\n</code></pre> </li> <li> <p>We modify the other <code>dovecot.conf.mas</code> template for the Dovecot service (IMAP/POP3):</p> <pre><code>## Custom certificates issued on 18-02-2023 by Daniel\n# ssl_cert =&lt;/etc/dovecot/private/dovecot.pem\n# ssl_key =&lt;/etc/dovecot/private/dovecot.pem\nssl_key  =&lt;/etc/letsencrypt/live/mail.icecrown.es/privkey.pem\nssl_cert =&lt;/etc/letsencrypt/live/mail.icecrown.es/fullchain.pem\n</code></pre> </li> <li> <p>We restart the mail module to apply the changes:</p> <pre><code>sudo zs mail restart\n</code></pre> </li> <li> <p>Finally, we confirm that both services are correctly using the new certificate. To perform this action, we can use a mail client like Thunderbird or the <code>openssl</code> command as in my case:</p> <pre><code>openssl s_client -starttls smtp -showcerts -connect mail.icecrown.es:465 -servername mail.icecrown.es\nopenssl s_client -showcerts -connect mail.icecrown.es:993 -servername mail.icecrown.es\n</code></pre> <p>The result obtained in my case has been:</p> <pre><code>## SMTP\nCONNECTED(00000003)\ndepth=2 C = US, O = Internet Security Research Group, CN = ISRG Root X1\nverify return:1\ndepth=1 C = US, O = Let's Encrypt, CN = R3\nverify return:1\ndepth=0 CN = mail.icecrown.es\nverify return:1\n---\nCertificate chain\n0 s:CN = mail.icecrown.es\ni:C = US, O = Let's Encrypt, CN = R3\n\n## IMAP\nCONNECTED(00000003)\ndepth=2 C = US, O = Internet Security Research Group, CN = ISRG Root X1\nverify return:1\ndepth=1 C = US, O = Let's Encrypt, CN = R3\nverify return:1\ndepth=0 CN = mail.icecrown.es\nverify return:1\n---\nCertificate chain\n0 s:CN = mail.icecrown.es\ni:C = US, O = Let's Encrypt, CN = R3\n</code></pre> </li> </ol>","tags":["Zentyal"]},{"location":"en/zentyal-configuration/","title":"Zentyal Configuration","text":"<p>This page will cover the configuration of the Zentyal server to act as a mail and file sharing server.</p>","tags":["Zentyal"]},{"location":"en/zentyal-configuration/#objectives","title":"Objectives","text":"<p>The objectives that will be accomplished are:</p> <ul> <li>(Optional) Uninstallation of Snap.</li> <li>(Optional) Additional configuration of local system users:<ul> <li>Modification of the prompt.</li> <li>Modifications to the history.</li> <li>Configuration for the vim editor.</li> </ul> </li> <li>Creation of a SWAP partition.</li> <li>Configuration of additional EBS volumes.</li> <li>Implementation of quotas in the file system.</li> <li>Configuration of the following Zentyal modules:<ul> <li>Network</li> <li>Logs</li> <li>Firewall</li> <li>Software</li> <li>NTP</li> <li>DNS</li> <li>Controlador de dominio</li> <li>Correo</li> <li>Webmail</li> <li>Antivirus</li> <li>Mailfilter</li> <li>CA</li> <li>OpenVPN</li> </ul> </li> </ul> <p>At the end of this document, the Zentyal server will be ready to use, although in subsequent documents we will continue to establish additional configurations such as the configuration of Let's Encrypt issued certificates or highly recommended options such as hardening of the mail service.</p>","tags":["Zentyal"]},{"location":"en/zentyal-configuration/#optional-configuration","title":"Optional Configuration","text":"<p>In this section, various optional configurations will be made on the Zentyal server, so it can be skipped and move on to the 'Previous Configuration' section. Snap</p> <p>Since Zentyal does not use Snap, we will proceed with its uninstallation.</p> <ol> <li> <p>Stop the service:</p> <pre><code>sudo systemctl stop snapd snapd.socket\n</code></pre> </li> <li> <p>Remove the package:</p> <pre><code>sudo apt remove --purge -y snapd\n</code></pre> </li> <li> <p>Remove the directories that remain in the file system:</p> <pre><code>sudo rm -rf /root/snap/\n</code></pre> </li> </ol>","tags":["Zentyal"]},{"location":"en/zentyal-configuration/#prompt","title":"Prompt","text":"<p>To improve the user experience when performing tasks from the CLI, we will enable prompt colors for existing and future local users.</p> <pre><code>for user in /root /home/ubuntu /home/djoven /etc/skel/; do\nsudo sed -i 's/#force_color_prompt/force_color_prompt/' $user/.bashrc\ndone\n</code></pre>","tags":["Zentyal"]},{"location":"en/zentyal-configuration/#history","title":"History","text":"<p>In order to store more information in the personal history of users and also have a timestamp indicating the date and time a certain command was executed, we will add a series of additional options to both existing and future local users.</p> <pre><code>for user in /root /home/ubuntu /home/djoven /etc/skel/; do\nsudo tee -a $user/.bashrc &amp;&gt;/dev/null &lt;&lt;EOF\n## Custom options\nHISTTIMEFORMAT=\"%F %T  \"\nPROMPT_COMMAND='history -a'\nHISTIGNORE='clear:history'\nEOF\nsudo sed -i -e 's/HISTCONTROL=.*/HISTCONTROL=ignoreboth/' \\\n-e 's/HISTSIZE=.*/HISTSIZE=1000/' \\\n-e 's/HISTFILESIZE=.*/HISTFILESIZE=2000/' \\\n$user/.bashrc\ndone\n</code></pre>","tags":["Zentyal"]},{"location":"en/zentyal-configuration/#vim","title":"Vim","text":"<p>We will add a simple custom configuration for the <code>vim</code> text editor for both existing and future users. This configuration will establish the following:</p> <ul> <li>Tabulation of 2 spaces.</li> <li>Enables syntax highlighting.</li> <li>Displays line numbers.</li> <li>Uses the 'desert' color scheme.</li> <li>Configures the editor to use Yaml files.</li> </ul> <p>To set up the configuration, simply create a file called <code>.vimrc</code> in the users' home directory. Previous Configuration</p> <pre><code>for user in /root /home/ubuntu /home/djoven /etc/skel; do\nsudo tee -a $user/.vimrc &amp;&gt;/dev/null &lt;&lt;EOF\nset tabstop=2\nsyntax on\nset number\ncolor desert\nset shiftwidth=2\nauto FileType yaml,yml setlocal ai ts=2 sw=2 et\nEOF\ndone\n</code></pre>","tags":["Zentyal"]},{"location":"en/zentyal-configuration/#previous-configuration","title":"Previous Configuration","text":"<p>The previous configurations will be made before configuring the Zentyal modules. Except for the <code>Additional EBS Volumes</code> section, which is optional, the rest should be implemented.</p>","tags":["Zentyal"]},{"location":"en/zentyal-configuration/#swap-partition","title":"SWAP Partition","text":"<p>It is highly recommended to configure a SWAP partition on the server to increase server availability in case of RAM-related spikes. The actions we will take are documented here.</p> <ol> <li> <p>Create an empty 4GB file, which will be the size of our SWAP partition:</p> <pre><code>sudo dd if=/dev/zero of=/swapfile1 bs=128M count=32\n</code></pre> </li> <li> <p>Set the permissions for the file:</p> <pre><code>sudo chmod 0600 /swapfile1\n</code></pre> </li> <li> <p>Set the file as a SWAP area:</p> <pre><code>sudo mkswap /swapfile1\n</code></pre> </li> <li> <p>Enable the SWAP partition temporarily:</p> <pre><code>sudo swapon /swapfile1\n</code></pre> </li> <li> <p>Verify that the system recognizes the new SWAP partition by running the following commands:</p> <pre><code>sudo swapon -s\nsudo free -m\n</code></pre> <p>The result we should get is:</p> <pre><code>## Comando 'swapon'\nFilename                Type        Size      Used    Priority\n/swapfile1              file        4194300      0          -2\n\n## comando 'free'\n                total        used        free      shared  buff/cache   available\nMem:           3875        1218         209           2        2447        2396\nSwap:          4095           0        4095\n</code></pre> </li> <li> <p>Set the partition in the /etc/fstab configuration file so that it persists after the server restarts:</p> <pre><code>echo -e '\\n## SWAP partition 4GB\\n/swapfile1 swap swap defaults 0 0' | sudo tee -a /etc/fstab\n</code></pre> </li> <li> <p>Finally, check that the new entry in the file does not contain syntax errors:</p> <pre><code>sudo mount -a\n</code></pre> </li> </ol>","tags":["Zentyal"]},{"location":"en/zentyal-configuration/#additional-ebs-volumes","title":"Additional EBS volumes","text":"<p>In case we have added additional EBS volumes - as in my case for mailboxes and shared resources -, we will proceed to configure and mount them on the server.</p> <p>Note</p> <p>For the mount point of shared resources, <code>/home/samba/</code> could be used instead of <code>/home/</code>. However, using <code>/home/samba/</code> the personal directories of domain users (shared in 'H' letter by default) would not be stored in the EBS volume.</p> <ol> <li> <p>List the volumes with the command:</p> <pre><code>lsblk\n</code></pre> <p>In my specific case, it shows the following result:</p> <pre><code>NAME         MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nnvme1n1      259:0    0   10G  0 disk\nnvme0n1      259:1    0   30G  0 disk\n\u251c\u2500nvme0n1p1  259:2    0 29.9G  0 part /\n\u251c\u2500nvme0n1p14 259:3    0    4M  0 part\n\u2514\u2500nvme0n1p15 259:4    0  106M  0 part /boot/efi\nnvme2n1      259:5    0   10G  0 disk\n</code></pre> </li> <li> <p>Create a single partition that occupies the entire disk on the nvme1n1 and nvme2n1 volumes:</p> <pre><code>for disk in nvme1n1 nvme2n1; do\necho -e 'n\\np\\n\\n\\n\\nt\\n8e\\nw' | sudo fdisk /dev/$disk\ndone\n</code></pre> <p>Info</p> <p>'8e' sets the partition label as 'Linux'.</p> </li> <li> <p>Verify that the partitions have been created correctly:</p> <pre><code>lsblk\n</code></pre> <p>In my specific case, it shows the following result:</p> <pre><code>NAME         MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nnvme1n1      259:0    0   10G  0 disk\n\u2514\u2500nvme1n1p1  259:7    0   10G  0 part\nnvme0n1      259:1    0   30G  0 disk\n\u251c\u2500nvme0n1p1  259:2    0 29.9G  0 part /\n\u251c\u2500nvme0n1p14 259:3    0    4M  0 part\n\u2514\u2500nvme0n1p15 259:4    0  106M  0 part /boot/efi\nnvme2n1      259:5    0   10G  0 disk\n\u2514\u2500nvme2n1p1  259:8    0   10G  0 part\n</code></pre> </li> <li> <p>Set ext4 as the file system for the new partitions:</p> <pre><code>for disk in nvme1n1p1 nvme2n1p1; do\nsudo mkfs -t ext4 /dev/$disk\ndone\n</code></pre> </li> <li> <p>Verify that everything went well with the command:</p> <pre><code>lsblk -f\n</code></pre> <p>In my specific case, it shows the following result:</p> <pre><code>NAME         FSTYPE LABEL           UUID                                 FSAVAIL FSUSE% MOUNTPOINT\nnvme1n1\n\u2514\u2500nvme1n1p1  ext4                   28e5471e-8fc1-48b5-8729-778c56a19b90\nnvme0n1\n\u251c\u2500nvme0n1p1  ext4   cloudimg-rootfs 418a4763-c829-4fb6-b538-9a38158da803   26.8G     7% /\n\u251c\u2500nvme0n1p14\n\u2514\u2500nvme0n1p15 vfat   UEFI            CBF7-D252                              99.2M     5% /boot/efi\nnvme2n1\n\u2514\u2500nvme2n1p1  ext4                   e903ff6f-c431-4e3a-92a1-9f476c66b3be\n</code></pre> </li> <li> <p>Create the directory where the EBS volume for mailboxes will be mounted:</p> <pre><code>sudo mkdir -v -m0775 /var/vmail\n</code></pre> </li> <li> <p>Temporarily mount the EBS volume that will contain the shared resources:</p> <pre><code>sudo mount /dev/nvme2n1p1 /mnt\n</code></pre> </li> <li> <p>Copy the content of the /home/ directory to the temporary directory where we have mounted the EBS volume:</p> <pre><code>sudo cp -aR /home/* /mnt/\n</code></pre> </li> <li> <p>Unmount the EBS volume:</p> <pre><code>sudo umount /mnt\n</code></pre> </li> <li> <p>Obtain the identifier (UUID) of the volumes:</p> <pre><code>sudo sudo blkid | egrep \"nvme[12]n1p1\"\n</code></pre> <p>In my specific case, it shows the following result:</p> <pre><code>/dev/nvme2n1p1: UUID=\"28e5471e-8fc1-48b5-8729-778c56a19b90\" TYPE=\"ext4\" PARTUUID=\"558dd3b7-01\"\n/dev/nvme1n1p1: UUID=\"e903ff6f-c431-4e3a-92a1-9f476c66b3be\" TYPE=\"ext4\" PARTUUID=\"446d2929-01\"\n</code></pre> <p>Warning</p> <p>Remember that the volume for mailboxes was mounted first, so its mount point is <code>/dev/nvme1n1p1</code>.</p> </li> <li> <p>Set the EBS volume mounting in the <code>/etc/fstab</code> file:</p> <p>Warning</p> <p>You will have to change the value of the <code>UUID</code> parameter to your value obtained in step 7.</p> </li> <li> <p>Mount the volumes to verify that there are no syntax errors in the file from the previous step:</p> <pre><code>sudo mount -a\n</code></pre> </li> <li> <p>Finally, confirm that they have been mounted correctly by running the following commands:</p> <pre><code>mount | egrep 'nvme[12]n1p1'\ndf -h\n</code></pre> <p>In my specific case, it shows the following result:</p> <pre><code>## Comando 'mount'\n/dev/nvme2n1p1 on /var/vmail type ext4 (rw,nosuid,nodev,noexec,relatime)\n/dev/nvme1n1p1 on /home type ext4 (rw,nosuid,nodev,noexec,relatime)\n## Comando 'df'\nFilesystem       Size  Used Avail Use% Mounted on\n/dev/root         29G  7.9G   21G  28% /\ndevtmpfs         1.9G     0  1.9G   0% /dev\ntmpfs            1.9G  4.0K  1.9G   1% /dev/shm\ntmpfs            388M  2.6M  386M   1% /run\ntmpfs            5.0M     0  5.0M   0% /run/lock\ntmpfs            1.9G     0  1.9G   0% /sys/fs/cgroup\n/dev/nvme2n1p1   9.8G   17M  9.3G   1% /var/vmail\n/dev/nvme1n1p1   9.8G  228K  9.3G   1% /home\n/dev/nvme0n1p15  105M  5.2M  100M   5% /boot/efi\n</code></pre> </li> </ol>","tags":["Zentyal"]},{"location":"en/zentyal-configuration/#quota","title":"Quota","text":"<p>To be able to use the quotas that Zentyal allows setting to limit the use of information that a domain user can store on the server, as well as for the maximum mailbox size, it is necessary to install a series of packages and enable their use on the disk.</p> <p>Note</p> <p>It is not necessary to enable the quota on the disk that contains the mailboxes, since Zentyal manages them differently.</p> <ol> <li> <p>Install the following packages required for AWS instances:</p> <pre><code>sudo apt update\nsudo apt install -y quota quotatool linux-modules-extra-aws\n</code></pre> </li> <li> <p>Set the additional mount options on the EBS volume for shared resources, to do this, edit the configuration file /etc/fstab:</p> <pre><code>## AWS EBS - Shares\nUUID=28e5471e-8fc1-48b5-8729-778c56a19b90   /home   ext4    defaults,noexec,nodev,nosuid,usrjquota=quota.user,grpjquota=quota.group,jqfmt=vfsv0 0 2\n</code></pre> <p>Info</p> <p>The added options are: <code>usrjquota</code>, <code>grpjquota</code>, and <code>jqfmt</code>.</p> </li> <li> <p>Restart the server so that the latest kernel is loaded and we can securely enable quotas:</p> <pre><code>sudo reboot\n</code></pre> </li> <li> <p>Add the Quota module to the kernel:</p> <pre><code>sudo modprobe quota_v2\n</code></pre> </li> <li> <p>Persist the previous change:</p> <pre><code>echo 'quota_v2' | sudo tee -a /etc/modules\n</code></pre> </li> <li> <p>Let the system check quotas and create the necessary files:</p> <pre><code>sudo quotacheck -vugmf /home\n</code></pre> <p>The result I obtained in my case was:</p> <pre><code>quotacheck: Scanning /dev/nvme1n1p1 [/home] done\nquotacheck: Checked 8 directories and 18 files\n</code></pre> </li> </ol>","tags":["Zentyal"]},{"location":"en/zentyal-configuration/#configuration-of-the-modules","title":"Configuration of the modules","text":"<p>From this point on, we will be able to install, configure and check the Zentyal modules.</p>","tags":["Zentyal"]},{"location":"en/zentyal-configuration/#general","title":"General","text":"<p>First of all, what we need to do is configure the Zentyal base from the <code>System -&gt; General</code> menu.</p> <ol> <li> <p>We will set the language of the administration panel and the port on which the webadmin module will listen:</p> <p></p> </li> <li> <p>Then, from the same panel, we set the server name and domain:</p> <p></p> <p>Warning</p> <p>Once we enable the domain controller module, these 2 values cannot be changed.</p> </li> </ol>","tags":["Zentyal"]},{"location":"en/zentyal-configuration/#logs-module","title":"Logs module","text":"<p>Initially, we will enable the available 'domains', change the retention time to 30 days for the firewall and 90 for the administration panel changes as well as administrator logins:</p> <p></p>","tags":["Zentyal"]},{"location":"en/zentyal-configuration/#firewall-module","title":"Firewall module","text":"<p>For our network configuration (internal) and the modules we will use, the firewall sections we will use are:</p> <ul> <li>Filtering rules from internal networks to Zentyal</li> <li>Filtering rules from traffic coming out from Zentyal</li> </ul> <p>The default policies in both firewall sections are secure; however, we will add a <code>LOG</code> rule for SSH connections as it is always a good idea to have as much information as possible about this critical service. To do this, we will go to F<code>irewall -&gt; Packet Filter -&gt; Filtering rules from internal networks to Zentyal</code> and add the following rule:</p> <p></p> <p>Resulting in the following rules:</p> <p></p> <p>Considerations:</p> <ol> <li>It is important that the new rule goes above the rule that accepts the SSH connection; otherwise, it will never be executed as when a rule is fulfilled, the rest are not analyzed.</li> <li>Remember that in addition to this firewall, we also have the one from AWS (Security Group associated with the instance), so we will have to make sure that both firewalls have the same rules.</li> <li>It could be configured in the Zentyal firewall to allow all traffic and then, from the security group, be more restrictive, or vice versa. However, it is recommended to configure both equally.</li> </ol>","tags":["Zentyal"]},{"location":"en/zentyal-configuration/#software-module","title":"Software module","text":"<p>In order to have our server updated, we will enable and set the time at which automatic updates will be installed. In addition, we will proceed to install the modules we are going to use.</p> <ol> <li> <p>From the <code>Software Management -&gt; Settings</code> menu, we set the automatic update configurations:</p> <p></p> <p>Nota</p> <p>It is highly recommended to set a time that is after the server backups such as snapshots, so we have a stable restoration point in case an update causes a critical incident.</p> </li> <li> <p>Then, from the <code>Software Management -&gt; Zentyal Components</code> menu, we will proceed to install only the modules we are going to use:</p> <p></p> <p>Info</p> <p>After the modules are installed, multiple rules will be automatically created in the <code>Filtering rules from internal networks to Zentyal</code> section of the firewall to allow access to these modules.</p> </li> </ol>","tags":["Zentyal"]},{"location":"en/zentyal-configuration/#ntp-module","title":"NTP module","text":"<p>The first of the newly installed modules that we are going to configure is NTP. We will set the time zone and the geographically</p> <ol> <li> <p>Let's go to <code>System -&gt; Date/Time</code> and set the time zone:</p> <p></p> </li> <li> <p>Enable the option that allows syncing time with external servers:</p> <p></p> </li> <li> <p>Modify the default NTP servers to the official ones we have available on this website:</p> <p></p> </li> <li> <p>Finalmente, habilitamos el m\u00f3dulo de NTP desde <code>Modules Status</code>:</p> <p></p> </li> </ol>","tags":["Zentyal"]},{"location":"en/zentyal-configuration/#dns-module","title":"DNS module","text":"<p>The next module we will proceed to configure is the DNS module, which is critical for the functioning of the domain controller module and, by dependency, also the mail module.</p> <p>The configuration we will establish will be minimal, since we will manage the DNS record management from the administration panel where we have registered the domain - Route 53 in my case -.</p> <ol> <li> <p>We create the domain, which must match the one created in <code>System -&gt; General</code>. To do this, from the side menu we select <code>DNS</code>:</p> <p></p> </li> <li> <p>Next, we check that the server's IP address has been successfully registered to the domain, by going to the <code>Domain IP Addresses</code> field of the newly created domain:</p> <p></p> </li> <li> <p>We also check that the IP has been registered for the server name. In this case, the field is <code>Hostnames -&gt; IP Address</code>:</p> <p></p> </li> <li> <p>Next, we create additional alias records from <code>Hostnames -&gt; Alias</code>. In my case, I will create two records related to email: mail and webmail.</p> <p></p> </li> <li> <p>We set the DNS forwarders, which in this case will be those of Cloudflare and Quad9:</p> <p></p> </li> <li> <p>Once the module configuration has been established, we proceed to enable it from <code>Modules Status</code>:</p> <p></p> </li> <li> <p>Finally, we check that we can resolve the configured DNS records from the server itself. To do this, we will run the following commands:</p> <pre><code>## For the domain\ndig icecrown.es\n\n## For the server hostname\ndig arthas.icecrown.es\n\n## For the alias\ndig mail.icecrown.es\ndig webmail.icecrown.es\n</code></pre> <p>Below are the results I have obtained:</p> <pre><code>## For the domain\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; icecrown.es\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 11829\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: 517f093b1a488a630100000063ef1e5f33c655878c47e480 (good)\n;; QUESTION SECTION:\n;icecrown.es.           IN  A\n\n;; ANSWER SECTION:\nicecrown.es.        259200  IN  A   10.0.1.200\n\n;; Query time: 0 msec\n;; SERVER: 127.0.0.1#53(127.0.0.1)\n;; WHEN: Fri Feb 17 07:27:43 CET 2023\n;; MSG SIZE  rcvd: 84\n\n## For the server hostname\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; arthas.icecrown.es\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 53740\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: 0a10fe5bc110fbe20100000063ef1e79cd9a2652e62e1cba (good)\n;; QUESTION SECTION:\n;arthas.icecrown.es.        IN  A\n\n;; ANSWER SECTION:\narthas.icecrown.es. 259200  IN  A   10.0.1.200\n\n;; Query time: 0 msec\n;; SERVER: 127.0.0.1#53(127.0.0.1)\n;; WHEN: Fri Feb 17 07:28:09 CET 2023\n;; MSG SIZE  rcvd: 91\n\n## For the 'mail' alias\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; mail.icecrown.es\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 62966\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: c5ac7f415fe066aa0100000063ef1e9c7e18da9abf7650f1 (good)\n;; QUESTION SECTION:\n;mail.icecrown.es.      IN  A\n\n;; ANSWER SECTION:\nmail.icecrown.es.   259200  IN  CNAME   arthas.icecrown.es.\narthas.icecrown.es. 259200  IN  A   10.0.1.200\n\n;; Query time: 0 msec\n;; SERVER: 127.0.0.1#53(127.0.0.1)\n;; WHEN: Fri Feb 17 07:28:44 CET 2023\n;; MSG SIZE  rcvd: 110\n\n## For the 'webmail' alias\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; webmail.icecrown.es\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 40072\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: a1ff85fe806432700100000063ef1eb9ff2777f239f7c9a3 (good)\n;; QUESTION SECTION:\n;webmail.icecrown.es.       IN  A\n\n;; ANSWER SECTION:\nwebmail.icecrown.es.    259200  IN  CNAME   arthas.icecrown.es.\narthas.icecrown.es. 259200  IN  A   10.0.1.200\n\n;; Query time: 0 msec\n;; SERVER: 127.0.0.1#53(127.0.0.1)\n;; WHEN: Fri Feb 17 07:29:13 CET 2023\n;; MSG SIZE  rcvd: 113\n</code></pre> <p>As can be seen, the <code>status</code> for all is 'NOERROR' and the 'ANSWER SECTION' shows the DNS records in question.</p> </li> </ol> <p>At this point, the module would be configured in Zentyal. However, we still need to create the records with the server's public IP address in the DNS provider so that they are visible externally. Here are the steps to perform for AWS Route53:</p> <ol> <li> <p>Go to <code>Route 53 -&gt; Hosted zones -&gt; domain</code> and create the same records as in Zentyal but with the public IP:</p> <p></p> </li> <li> <p>We wait a few minutes for them to replicate globally.</p> </li> <li> <p>Finally, we check the resolution of the records:</p> <pre><code>## For the domain\ndig @8.8.8.8 icecrown.es\n\n## For the server name\ndig @8.8.8.8 arthas.icecrown.es\n\n## ParFor the alias\ndig @8.8.8.8 mail.icecrown.es\ndig @8.8.8.8 webmail.icecrown.es\n</code></pre> <p>A continuaci\u00f3n, los resultados que he obtenido:</p> <pre><code>## For the domain\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; @8.8.8.8 icecrown.es\n; (1 server found)\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 7888\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;icecrown.es.           IN  A\n\n;; ANSWER SECTION:\nicecrown.es.        60  IN  A   15.237.168.75\n\n;; Query time: 16 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Fri Feb 17 07:30:36 CET 2023\n;; MSG SIZE  rcvd: 56\n\n## For the server name\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; @8.8.8.8 arthas.icecrown.es\n; (1 server found)\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 33376\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;arthas.icecrown.es.        IN  A\n\n;; ANSWER SECTION:\narthas.icecrown.es. 120 IN  A   15.237.168.75\n\n;; Query time: 36 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Fri Feb 17 07:30:56 CET 2023\n;; MSG SIZE  rcvd: 63\n\n## For the 'mail' alias\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; @8.8.8.8 mail.icecrown.es\n; (1 server found)\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 46107\n;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;mail.icecrown.es.      IN  A\n\n;; ANSWER SECTION:\nmail.icecrown.es.   300 IN  CNAME   arthas.icecrown.es.\narthas.icecrown.es. 120 IN  A   15.237.168.75\n\n;; Query time: 16 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Fri Feb 17 07:31:29 CET 2023\n;; MSG SIZE  rcvd: 82\n\n## For the 'webmail' alias\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; @8.8.8.8 webmail.icecrown.es\n; (1 server found)\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 9490\n;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;webmail.icecrown.es.       IN  A\n\n;; ANSWER SECTION:\nwebmail.icecrown.es.    300 IN  CNAME   arthas.icecrown.es.\narthas.icecrown.es. 120 IN  A   15.237.168.75\n\n;; Query time: 36 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Fri Feb 17 07:31:59 CET 2023\n;; MSG SIZE  rcvd: 85\n</code></pre> </li> </ol> <p>After confirming the domain's functioning both internally (from Zentyal) and externally, the DNS module will be correctly configured, and we can proceed with the next module.</p>","tags":["Zentyal"]},{"location":"en/zentyal-configuration/#mail-module","title":"Mail module","text":"<p>With the domain controller module configured, we can now configure the mail module, as it depends on the former to be enabled first. In my specific case, I will establish the following optional settings:</p> <ul> <li>The postmaster user will be <code>postmaster@icecrown.es</code>.</li> <li>I will set 1GB as the default quota for mailboxes.</li> <li>The maximum size of an accepted message will be 25MB.</li> <li>Emails deleted in mailboxes will be automatically purged after 90 days.</li> <li>Emails in the spam folder will be automatically deleted after 90 days.</li> <li>Mail account synchronization through Fetchmail will be done every 5 minutes.</li> <li>Only IMAPS and POP3S protocols will be allowed.</li> <li>Fetchmail and Sieve will be disabled, as I won't be using them initially.</li> <li>The greylist will be enabled, and forwarding time will be reduced to 24 hours, with a 30-day deletion period.</li> </ul> <p>Here are the steps to configure the module:</p> <ol> <li> <p>Create the virtual mail domain, which will be the same as the domain configured in the DNS module. From the left-hand side menu, go to <code>Mail -&gt; Virtual Mail Domains</code>:</p> <p></p> </li> <li> <p>Establish the optional restrictive configurations mentioned from <code>Mail -&gt; General</code>:</p> <p></p> </li> <li> <p>Disable Fetchmail and Sieve:</p> <p></p> </li> <li> <p>Enable the greylist from <code>Mail -&gt; Greylist</code>:</p> <p></p> </li> <li> <p>Enable the module:</p> <p></p> </li> <li> <p>Create the <code>MX</code> type record in the domain. In my case, I will do it from Route53:</p> <p></p> <p>Additionally, I will also create it in Zentyal, but as it is an alias, it will have to be done using the CLI:</p> <pre><code>sudo samba-tool dns add 127.0.0.1 icecrown.es icecrown.es MX \"mail.icecrown.es 10\" -U zenadmin\n</code></pre> </li> <li> <p>Check the new DNS record both internally and externally:</p> <pre><code>dig MX icecrown.es\ndig @8.8.8.8 MX icecrown.es\n</code></pre> <p>The result I get is:</p> <pre><code>## Internal query\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; MX icecrown.es\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 432\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: 7d99083c5d639dad0100000063ef22121ec656087bc76972 (good)\n;; QUESTION SECTION:\n;icecrown.es.           IN  MX\n\n;; ANSWER SECTION:\nicecrown.es.        900 IN  MX  10 mail.icecrown.es.\n\n;; Query time: 8 msec\n;; SERVER: 127.0.0.1#53(127.0.0.1)\n;; WHEN: Fri Feb 17 07:43:30 CET 2023\n;; MSG SIZE  rcvd: 89\n\n## External query\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; @8.8.8.8 MX icecrown.es\n; (1 server found)\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 28263\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;icecrown.es.           IN  MX\n\n;; ANSWER SECTION:\nicecrown.es.        300 IN  MX  10 mail.icecrown.es.\n\n;; Query time: 36 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Fri Feb 17 07:44:00 CET 2023\n;; MSG SIZE  rcvd: 61\n</code></pre> </li> <li> <p>Create the <code>postmaster@icecrown.es</code> user specified in step 2 and also a test user, which in my case will be named <code>test.djoven</code>. To do this, go to <code>Users and Computers -&gt; Manage</code>:</p> <p> </p> </li> </ol> <p>Finally, we will test with a mail client (Thunderbird in my case) that we can configure the account of the test user created:</p> <ol> <li> <p>Configure a new account in Thunderbird:</p> <p></p> </li> <li> <p>Set the connection data with the SMTPS and IMAPS service:</p> <p></p> <p>Warning</p> <p>You must change the authentication type to 'Normal password', otherwise authentication will fail.</p> </li> <li> <p>After confirming the configuration, the following warning message about the certificate will appear, which is normal, as it is a self-signed certificate by Zentyal:</p> <p></p> </li> <li> <p>Once the security exception is confirmed, we should be able to see the email account:</p> <p></p> </li> <li> <p>Send a test email to ourselves and another to an external account to confirm the module's operation.</p> <p>Nota</p> <p>When we try to send the message, we will receive an error again due to the self-signed certificate, so we will have to confirm it again.</p> <p></p> <p></p> </li> <li> <p>If everything went well, we should have received the email both internally and externally, and also in the <code>/var/log/mail.log</code> log we should see similar records as:</p> <pre><code>Feb 17 07:02:41 ip-10-0-1-200 postfix/smtpd[27139]: connect from 36.red-45-4-127.staticip.rima-tde.net[88.6.127.36]\nFeb 17 07:02:41 ip-10-0-1-200 postfix/smtpd[27139]: 958BDFEEFC: client=36.red-45-4-127.staticip.rima-tde.net[88.6.127.36], sasl_method=PLAIN, sasl_username=test.\ndjoven@icecrown.es\nFeb 17 07:02:41 ip-10-0-1-200 postfix/cleanup[27145]: 958BDFEEFC: message-id=&lt;17715909-c13a-eed6-7f23-18f697740075@icecrown.es&gt;\nFeb 17 07:02:41 ip-10-0-1-200 postfix/qmgr[24894]: 958BDFEEFC: from=&lt;test.djoven@icecrown.es&gt;, size=681, nrcpt=2 (queue active)\nFeb 17 07:02:41 ip-10-0-1-200 dovecot: lda(test.djoven@icecrown.es)&lt;27148&gt;&lt;b1LEMJEm72MMagAAcf9/Kw&gt;: msgid=&lt;17715909-c13a-eed6-7f23-18f697740075@icecrown.es&gt;: sav\ned mail to INBOX\n\nFeb 17 07:02:41 ip-10-0-1-200 postfix/pipe[27146]: 958BDFEEFC: to=&lt;test.djoven@icecrown.es&gt;, relay=dovecot, delay=0.29, delays=0.24/0.01/0/0.03, dsn=2.0.0, status=sent (delivered via dovecot service)\n\nFeb 17 07:02:41 ip-10-0-1-200 postfix/smtpd[27139]: disconnect from 36.red-45-4-127.staticip.rima-tde.net[88.6.127.36] ehlo=2 starttls=1 auth=1 mail=1 rcpt=2 data=1 quit=1 commands=9\nFeb 17 07:02:42 ip-10-0-1-200 dovecot: imap-login: Disconnected (no auth attempts in 1 secs): user=&lt;&gt;, rip=88.6.127.36, lip=10.0.1.200, TLS handshaking: SSL_accept() failed: error:14094412:SSL routines:ssl3_read_bytes:sslv3 alert bad certificate: SSL alert number 42, session=&lt;mXZJ5t/0eLxYBn8k&gt;\n\nFeb 17 07:02:42 ip-10-0-1-200 postfix/smtp[27147]: 958BDFEEFC: to=&lt;external-account&gt;, relay=gmail-smtp-in.l.google.com[74.125.133.27]:25, delay=1, delays=0.24/0.01/0.08/0.67, dsn=2.0.0, status=sent (250 2.0.0 OK  1676617362 n13-20020adfe34d000000b002c56af91a8esi3912146wrj.115 - gsmtp)\n\nFeb 17 07:02:42 ip-10-0-1-200 postfix/qmgr[24894]: 958BDFEEFC: removed\n</code></pre> <p>Success</p> <p>As can be seen, the status of both emails is <code>sent</code>.</p> </li> </ol> <p>At this point, the mail module should be fully functional. However, it is not yet secured, so it is advisable not to use it yet until at least the Mailfilter module has been configured and enabled. Additionally, there is another page in this project called Hardening where the module's security will be further increased.</p> <p>Also, note that if the server is installed in the AWS cloud provider, sending emails is not allowed by default (check the next to last section of the AWS page).</p>","tags":["Zentyal"]},{"location":"en/zentyal-configuration/#webmail-module","title":"Webmail Module","text":"<p>The next module to configure will be the Webmail (Sogo), which will allow us to manage our email account from a web browser. Additionally, from the webmail, a user can change their password.</p> <ol> <li> <p>We enable the ActiveSync protocol from Mail -&gt; ActiveSync in case users want to synchronize their mobile devices.</p> <p></p> </li> <li> <p>We enable the module.</p> <p></p> </li> <li> <p>We check that we can access the login page from a web browser with the URL: https://arthas.icecrown.es/SOGo:</p> <p>Warning</p> <p>It will show a warning message due to the certificate used by the service, which is normal since it is self-signed.</p> <p></p> </li> <li> <p>Once we accept the exception, we should be able to see the login page:</p> <p></p> </li> <li> <p>We log in with the test user to confirm that authentication works correctly and that we can see our mailbox.</p> <p></p> <p>Warning</p> <p>If we do not see the mailbox, it is possible that we are experiencing an existing bug, which occurs when the insecure mail protocols are not configured, and the certificate used is self-signed. To solve this, see the section <code>IMAPS</code> on the bug fixing page.</p> </li> <li> <p>Finally, we try to send another email to ourselves to verify integration with the email module.</p> <p></p> </li> </ol> <p>At this point, the module is fully functional; however, I will set the following optional configurations:</p> <ul> <li>I will enable the option of automatic messages for vacations since it is disabled by default.</li> <li>I will initially set the number of workers (processes) that the module will use to 8.</li> </ul> <p>The following actions should be taken to apply the optional configurations:</p> <ol> <li> <p>We create the directory that will make the changes to the configuration templates (stubs) persistent against module updates.</p> <pre><code>sudo mkdir -vp /etc/zentyal/stubs/sogo\n</code></pre> </li> <li> <p>We copy the Sogo configuration template <code>sogo.conf.mas</code>.</p> <pre><code>sudo cp -v /usr/share/zentyal/stubs/sogo/sogo.conf.mas /etc/zentyal/stubs/sogo/\n</code></pre> </li> <li> <p>We set the parameter <code>SOGoVacationEnabled</code> to <code>YES</code> in the newly copied template.</p> <pre><code>sudo sed -i 's/SOGoVacationEnabled.*/SOGoVacationEnabled = YES;/' /etc/zentyal/stubs/sogo/sogo.conf.mas\n</code></pre> </li> <li> <p>We restart the Webmail module to apply the change.</p> <pre><code>sudo zs sogo restart\n</code></pre> </li> <li> <p>We log in to the Webadmin again and verify that the option is now available under <code>Preferences -&gt; Mail</code>.</p> <p></p> </li> <li> <p>We set the value of prefork in the configuration file <code>/etc/zentyal/sogo.conf</code>.</p> <pre><code>sed -i 's/#sogod_prefork.*/sogod_prefork=8/' /etc/zentyal/sogo.conf\n</code></pre> <p>If we have many concurrent users using the module, it is possible that Sogo cannot manage all requests properly, so it will be necessary to increase this value. To detect this scenario, we simply need to search for records in the Sogo log located at <code>/var/log/sogo/sogo.log</code> similar to the following:</p> <pre><code>sogod [3252]: [ERROR] &lt;0x0x55c9db827250[WOWatchDog]&gt; No child available to handle incoming request!\n</code></pre> </li> <li> <p>We restart the Webmail module to apply the change.</p> <pre><code>sudo zs sogo restart\n</code></pre> </li> <li> <p>Finally, we check that the service has been started with the new value applied.</p> <pre><code>ps -ef | grep sogod | head -1\n</code></pre> <p>In my case, the result obtained from the command was:</p> <pre><code>sogo 24430 1 0 00:40 ? 00:00:00 /usr/sbin/sogod -WOWorkersCount 8 -WOPidFile /var/run/sogo/sogo.pid -WOLogFile /var/log/sogo/sogo.log\n</code></pre> </li> </ol>","tags":["Zentyal"]},{"location":"en/zentyal-configuration/#antivirus-module","title":"Antivirus Module","text":"<p>The next module we will configure is the Antivirus. Although this module consumes a lot of RAM, it is necessary for the analysis of the emails managed by the mailfilter module.</p> <p>The configuration that we can define for this module from the Zentyal administration panel in the Development version is nonexistent. Therefore, we can only enable the module and verify that the signature database is up-to-date.</p> <ol> <li> <p>We enable the module.</p> <p></p> </li> <li> <p>We update the signature database.</p> <pre><code>sudo freshclam -v\n</code></pre> </li> <li> <p>We confirm that the module is active.</p> <pre><code>sudo zs antivirus status\n</code></pre> </li> </ol> <p>If using a commercial version, we will have the following additional functionalities described here:</p> <ul> <li>System analysis.</li> <li>Live monitoring of directories.</li> </ul>","tags":["Zentyal"]},{"location":"en/zentyal-configuration/#mailfilter-module","title":"Mailfilter module","text":"<p>After enabling the Antivirus, we will proceed to configure the Mailfilter module, which will allow us to considerably increase the security of the organization's email service.</p> <p>The configuration that I will apply will be:</p> <ul> <li>I will use the email account <code>issues@icecrown.es</code> for notifications of problematic emails.</li> <li>I will set the threshold for emails considered as SPAM to 5.</li> <li>I will also set the auto-learn threshold to 5.</li> <li>I will add the domain to the whitelist.</li> <li>Except for the incorrect header policy, all other policies will be denied.</li> <li>I will disable certain extensions that can pose a security risk.</li> </ul> <p>Here are the steps to configure the module:</p> <ol> <li> <p>We enable the services of this module and set an email address for non-spam problematic emails from <code>Mail filter -&gt; SMTP Mail Filter</code>:</p> <p></p> </li> <li> <p>We set the default policies regarding the behavior of the module in response to certain events:</p> <p></p> </li> <li> <p>We set the antispam policies from <code>Mail Filter -&gt; Antispam</code>:</p> <p></p> </li> <li> <p>Optionally, we can add our domain to the whitelist so that it is not processed by the Mailfilter module:</p> <p></p> </li> <li> <p>We disable the following extensions from <code>Mail Filter -&gt; Files ACL -&gt; File extensions</code>:</p> <ul> <li>bas</li> <li>bat</li> <li>cmd</li> <li>dll</li> <li>exe</li> <li>ini</li> <li>msi</li> <li>reg</li> <li>sh</li> </ul> <p></p> </li> <li> <p>We enable the module:</p> <p></p> </li> <li> <p>We create the email account that we established in step 1 from <code>Users and Computers -&gt; Manage</code>:</p> <p></p> </li> <li> <p>We send a simple email from an external domain and check in the log file <code>/var/log/mail.log</code> that the module has analyzed it through the Amavis service:</p> <pre><code>Feb 18 11:18:57 arthas postfix/smtpd[18582]: connect from mail-lj1-f176.google.com[209.85.208.176]\nFeb 18 11:18:57 arthas postgrey[16618]: action=pass, reason=client whitelist, client_name=mail-lj1-f176.google.com, client_address=209.85.208.176/32, sender=some-account@gmail.com, recipient=test.djoven@icecrown.es\nFeb 18 11:18:57 arthas postfix/smtpd[18582]: A69DDFEF59: client=mail-lj1-f176.google.com[209.85.208.176]\nFeb 18 11:18:57 arthas postfix/cleanup[18587]: A69DDFEF59: message-id=&lt;CAHOKk5tCux0aM8WgNr_RQJ7YXBr1H6Er37AT5j9vvyJ1ZORSKw@mail.gmail.com&gt;\nFeb 18 11:18:57 arthas postfix/qmgr[18435]: A69DDFEF59: from=&lt;some-account@gmail.com&gt;, size=2749, nrcpt=1 (queue active)\nFeb 18 11:18:57 arthas amavis[18438]: (18438-01) ESMTP :10024 /var/lib/amavis/amavis-20230218T111857-18438-QzIlgFHk: &lt;some-account@gmail.com&gt; -&gt; &lt;test.djoven@icecrown.es&gt; SIZE=2749 Received: from mail.icecrown.es ([127.0.0.1]) by localhost (arthas.icecrown.es [127.0.0.1]) (amavisd-new, port 10024) with ESMTP for &lt;test.djoven@icecrown.es&gt;; Sat, 18 Feb 2023 11:18:57 +0100 (CET)\nFeb 18 11:18:57 arthas amavis[18438]: (18438-01) Checking: O_3VfGJTdv4Z [127.0.0.1] &lt;some-account@gmail.com&gt; -&gt; &lt;test.djoven@icecrown.es&gt;\nFeb 18 11:18:59 arthas amavis[18591]: (18438-01) SA info: util: setuid: ruid=128 euid=128 rgid=136 136 egid=136 136\nFeb 18 11:19:02 arthas postfix/smtpd[18592]: connect from localhost.localdomain[127.0.0.1]\nFeb 18 11:19:02 arthas postfix/smtpd[18592]: 8975FFEF70: client=localhost.localdomain[127.0.0.1]\nFeb 18 11:19:02 arthas postfix/cleanup[18587]: 8975FFEF70: message-id=&lt;CAHOKk5tCux0aM8WgNr_RQJ7YXBr1H6Er37AT5j9vvyJ1ZORSKw@mail.gmail.com&gt;\nFeb 18 11:19:02 arthas postfix/qmgr[18435]: 8975FFEF70: from=&lt;some-account@gmail.com&gt;, size=3762, nrcpt=1 (queue active)\n\nFeb 18 11:19:02 arthas amavis[18438]: (18438-01) O_3VfGJTdv4Z FWD from &lt;some-account@gmail.com&gt; -&gt; &lt;test.djoven@icecrown.es&gt;, BODY=7BIT 250 2.0.0 from MTA(smtp:[127.0.0.1]:10025): 250 2.0.0 Ok: queued as 8975FFEF70\nFeb 18 11:19:02 arthas amavis[18438]: (18438-01) Passed CLEAN, [127.0.0.1] &lt;some-account@gmail.com&gt; -&gt; &lt;test.djoven@icecrown.es&gt;, Message-ID: &lt;CAHOKk5tCux0aM8WgNr_RQJ7YXBr1H6Er37AT5j9vvyJ1ZORSKw@mail.gmail.com&gt;, Hits: -5.947\nFeb 18 11:19:02 arthas postfix/smtp[18588]: A69DDFEF59: to=&lt;test.djoven@icecrown.es&gt;, relay=127.0.0.1[127.0.0.1]:10024, delay=4.9, delays=0.07/0.01/0.01/4.9, dsn=2.0.0, status=sent (250 2.0.0 from MTA(smtp:[127.0.0.1]:10025): 250 2.0.0 Ok: queued as 8975FFEF70)\n\nFeb 18 11:19:02 arthas postfix/qmgr[18435]: A69DDFEF59: removed\n\nFeb 18 11:19:02 arthas dovecot: lda(test.djoven@icecrown.es)&lt;18594&gt;&lt;u/B4JBam8GOiSAAAcf9/Kw&gt;: msgid=&lt;CAHOKk5tCux0aM8WgNr_RQJ7YXBr1H6Er37AT5j9vvyJ1ZORSKw@mail.gmail.com&gt;: saved mail to INBOX\nFeb 18 11:19:02 arthas postfix/pipe[18593]: 8975FFEF70: to=&lt;test.djoven@icecrown.es&gt;, relay=dovecot, delay=0.09, delays=0.03/0.01/0/0.05, dsn=2.0.0, status=sent (delivered via dovecot service)\n\nFeb 18 11:19:02 arthas postfix/qmgr[18435]: 8975FFEF70: removed\n</code></pre> <p>As you can see, the message arrived from a Gmail account, was analyzed by the 'Amavis' service, which scored it with '-5.947' and deemed it good, so the message arrived in the internal user's mailbox.</p> </li> <li> <p>Once we confirm that emails are properly received, we will proceed to verify the functioning of the module by sending another email with an attachment whose extension is <code>.sh</code> - denied in step 5 - from an external account. Here are the log records regarding the success of the block in <code>/var/log/mail.log</code>:</p> <pre><code>Feb 18 11:31:30 arthas postfix/smtpd[18720]: connect from mail-lj1-f171.google.com[209.85.208.171]\nFeb 18 11:31:30 arthas postgrey[16618]: action=pass, reason=client whitelist, client_name=mail-lj1-f171.google.com, client_address=209.85.208.171/32, sender=some-account@gmail.com, recipient=test.djoven@icecrown.es\nFeb 18 11:31:30 arthas postfix/smtpd[18720]: 79C12FEF59: client=mail-lj1-f171.google.com[209.85.208.171]\nFeb 18 11:31:30 arthas postfix/cleanup[18722]: 79C12FEF59: message-id=&lt;CAHOKk5uyuTatJ4c7_qp9oZsovphBziK_YDbUfHtO7Jkg89P5yQ@mail.gmail.com&gt;\nFeb 18 11:31:30 arthas postfix/qmgr[18435]: 79C12FEF59: from=&lt;some-account@gmail.com&gt;, size=3158, nrcpt=1 (queue active)\n\nFeb 18 11:31:30 arthas amavis[18438]: (18438-02) ESMTP :10024 /var/lib/amavis/amavis-20230218T111857-18438-QzIlgFHk: &lt;some-account@gmail.com&gt; -&gt; &lt;test.djoven@icecrown.es&gt; SIZE=3158 Received: from mail.icecrown.es ([127.0.0.1]) by localhost (arthas.icecrown.es [127.0.0.1]) (amavisd-new, port 10024) with ESMTP for &lt;test.djoven@icecrown.es&gt;; Sat, 18 Feb 2023 11:31:30 +0100 (CET)\nFeb 18 11:31:30 arthas amavis[18438]: (18438-02) Checking: BVbKQQ9S3o7N [127.0.0.1] &lt;some-account@gmail.com&gt; -&gt; &lt;test.djoven@icecrown.es&gt;\nFeb 18 11:31:30 arthas amavis[18438]: (18438-02) p.path BANNED:1 test.djoven@icecrown.es: \"P=p004,L=1,M=multipart/mixed | P=p003,L=1/2,M=application/x-shellscript,T=asc,N=sample-script.sh\", matching_key=\"(?^i:\\\\.sh$)\"\n\nFeb 18 11:31:30 arthas postfix/smtpd[18725]: connect from localhost.localdomain[127.0.0.1]\nFeb 18 11:31:30 arthas postfix/smtpd[18725]: AA4D5FEF71: client=localhost.localdomain[127.0.0.1]\nFeb 18 11:31:30 arthas postfix/cleanup[18722]: AA4D5FEF71: message-id=&lt;VABVbKQQ9S3o7N@arthas.icecrown.es&gt;\nFeb 18 11:31:30 arthas postfix/smtpd[18725]: disconnect from localhost.localdomain[127.0.0.1] ehlo=1 mail=1 rcpt=1 data=1 quit=1 commands=5\nFeb 18 11:31:30 arthas postfix/qmgr[18435]: AA4D5FEF71: from=&lt;postmaster@arthas.icecrown.es&gt;, size=4373, nrcpt=1 (queue active)\n\nFeb 18 11:31:30 arthas amavis[18438]: (18438-02) yMQxchA40B3f(BVbKQQ9S3o7N) SEND from &lt;postmaster@arthas.icecrown.es&gt; -&gt; &lt;issues@icecrown.es&gt;, ENVID=AM.yMQxchA40B3f.20230218T103130Z@arthas.icecrown.es 250 2.0.0 from MTA(smtp:[127.0.0.1]:10025): 250 2.0.0 Ok: queued as AA4D5FEF71\nFeb 18 11:31:30 arthas postfix/smtpd[18725]: connect from localhost.localdomain[127.0.0.1]\nFeb 18 11:31:30 arthas postfix/smtpd[18725]: B0E32FEF75: client=localhost.localdomain[127.0.0.1]\nFeb 18 11:31:30 arthas postfix/cleanup[18722]: B0E32FEF75: message-id=&lt;VSBVbKQQ9S3o7N@arthas.icecrown.es&gt;\nFeb 18 11:31:30 arthas postfix/smtpd[18725]: disconnect from localhost.localdomain[127.0.0.1] ehlo=1 mail=1 rcpt=1 data=1 quit=1 commands=5\nFeb 18 11:31:30 arthas postfix/qmgr[18435]: B0E32FEF75: from=&lt;&gt;, size=6606, nrcpt=1 (queue active)\n\nFeb 18 11:31:30 arthas amavis[18438]: (18438-02) jkDgUKQwzSN1(BVbKQQ9S3o7N) SEND from &lt;&gt; -&gt; &lt;some-account@gmail.com&gt;, BODY=7BIT ENVID=AM.jkDgUKQwzSN1.20230218T103130Z@arthas.icecrown.es 250 2.0.0 from MTA(smtp:[127.0.0.1]:10025): 250 2.0.0 Ok: queued as B0E32FEF75\nFeb 18 11:31:30 arthas amavis[18438]: (18438-02) Blocked BANNED (application/x-shellscript,.asc,sample-script.sh), [127.0.0.1] &lt;some-account@gmail.com&gt; -&gt; &lt;test.djoven@icecrown.es&gt;, Message-ID: &lt;CAHOKk5uyuTatJ4c7_qp9oZsovphBziK_YDbUfHtO7Jkg89P5yQ@mail.gmail.com&gt;, Hits: -\nFeb 18 11:31:30 arthas postfix/smtp[18723]: 79C12FEF59: to=&lt;test.djoven@icecrown.es&gt;, relay=127.0.0.1[127.0.0.1]:10024, delay=0.29, delays=0.08/0.01/0/0.2, dsn=2.5.0, status=sent (250 2.5.0 Ok, id=18438-02, BOUNCE)\nFeb 18 11:31:30 arthas postfix/qmgr[18435]: 79C12FEF59: removed\n\nFeb 18 11:31:30 arthas dovecot: lda(issues@icecrown.es)&lt;18727&gt;&lt;zrubKwKp8GMnSQAAcf9/Kw&gt;: msgid=&lt;VABVbKQQ9S3o7N@arthas.icecrown.es&gt;: saved mail to INBOX\nFeb 18 11:31:30 arthas postfix/pipe[18726]: AA4D5FEF71: to=&lt;issues@icecrown.es&gt;, relay=dovecot, delay=0.07, delays=0.02/0.01/0/0.04, dsn=2.0.0, status=sent (delivered via dovecot service)\nFeb 18 11:31:30 arthas postfix/qmgr[18435]: AA4D5FEF71: removed\n\nFeb 18 11:31:31 arthas postfix/smtp[18728]: B0E32FEF75: to=&lt;some-account@gmail.com&gt;, relay=gmail-smtp-in.l.google.com[173.194.76.27]:25, delay=0.47, delays=0.02/0.01/0.08/0.36, dsn=2.0.0, status=sent (250 2.0.0 OK  1676716291 o14-20020a5d62ce000000b002c58cc4a950si7000660wrv.22 - gsmtp)\nFeb 18 11:31:31 arthas postfix/qmgr[18435]: B0E32FEF75: removed\n</code></pre> <p>As can be seen, the email from a GMail account arrived at the server, the Amavis service analyzed it and denied it due to the extension of the attached file. Then it notified <code>issues@icecrown.es</code> and finally returned the email to the external account.</p> </li> <li> <p>Finally, we confirm that the <code>issues@icecrown.es</code> account has an email with our latest test.</p> <p></p> </li> </ol> <p>At this point, our email service is secure enough to be used in production. However, it is highly recommended to configure at least SPF and DKIM, and ideally, DMARC. These security configurations are discussed on the Hardening page. Additionally, it is also recommended to establish certificates issued by recognized certification authorities such as Let's Encrypt. Again, this will be addressed on another page of the project, specifically in Certificates.</p>","tags":["Zentyal"]},{"location":"en/zentyal-configuration/#ca-module","title":"CA module","text":"<p>In order to use the OpenVPN module, we need to configure the CA module beforehand, which is extremely easy to set up.</p> <ol> <li> <p>We create our certification entity from <code>Certificate Authority -&gt; General</code>:</p> <p></p> </li> <li> <p>Finally, we save changes for our CA to be created.</p> <p>Info</p> <p>This module cannot be 'enabled' like the others.</p> </li> </ol> <p>Additionally, it is possible to issue certificates for the modules we are using with the correct CommonName, however, since we are going to issue certificates recognized through Let's Encrypt, we will not use such functionality. If you want to use it, you would have to go to <code>Certificate Authority -&gt; Services</code> as indicated below:</p> <p></p>","tags":["Zentyal"]},{"location":"en/zentyal-configuration/#openvpn-module","title":"OpenVPN Module","text":"<p>The last module we will configure will be OpenVPN. The purpose of using this module is to allow domain users to securely access the shared resources configured in the domain controller module from any location.</p> <p>The settings I will establish are:</p> <ul> <li>As an additional security measure, access will only be allowed using certificates with the CommonName prefix: Icecrown-RC-.</li> <li>The VPN connection prefix certificate will have a validity of 120 days. However, it should be noted that setting this value will force us to perform maintenance tasks every 4 months.</li> <li>A different VPN port and address than the default will be used.</li> </ul> <p>The following steps need to be performed to configure the module:</p> <ol> <li> <p>Create the certificate that we will use as the name. To do this, go to <code>Certificate Authority -&gt; General</code>:</p> <p></p> </li> <li> <p>Create the VPN connection from <code>VPN -&gt; Servers</code>:</p> <p></p> </li> <li> <p>Configure the connection from <code>VPN -&gt; Servers -&gt; Configuration</code>:</p> <p> </p> </li> <li> <p>Confirm that the server's internal network is configured in the VPN connection by going to <code>VPN -&gt; Servers -&gt; Advertised networks</code>:</p> <p></p> </li> <li> <p>Enable the module:</p> <p></p> </li> <li> <p>Create a network service with the defined VPN connection port:</p> <p> </p> <p>Warning</p> <p>Remember that the protocol is UDP.</p> </li> <li> <p>Finally, create a rule in the Zentyal firewall that allows the connection and save changes:</p> <p></p> </li> </ol> <p>With the module now configured, we create a certificate, user, and shared resource to confirm the full functionality of this module. To do so, follow these steps:</p> <ol> <li> <p>Create a certificate:</p> <p></p> </li> <li> <p>Create a domain user:</p> <p></p> </li> <li> <p>Create a shared folder with read and write permissions for the test user:</p> <p> </p> </li> <li> <p>Save changes.</p> </li> <li> <p>Download a bundle with the VPN connection configuration for the client by going to <code>VPN -&gt; Servers -&gt; Download client bundle</code>:</p> <p>Note</p> <p>For this specific example, I will use a Windows 10 machine with OpenVPN already installed for the client.</p> <p></p> </li> <li> <p>Copy the bundle to the client from where you want to establish the VPN connection and configure the OpenVPN client:</p> <p></p> </li> <li> <p>Establish the connection from the OpenVPN client. If everything went well, we should be able to see similar logs in the Zentyal VPN connection log file called <code>/var/log/openvpn/Icecrown-RecursosCompartidos.log</code>:</p> <pre><code>Sat Feb  4 20:51:33 2023 88.6.127.36:35754 TLS: Initial packet from [AF_INET]88.6.127.36:35754 (via [AF_INET]10.0.1.200%ens5), sid=7c56b72b 70d7b663\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 VERIFY OK: depth=1, C=ES, ST=Spain, L=Zaragoza, O=Icecrown CA, CN=Icecrown CA Authority Certificate\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 VERIFY X509NAME OK: C=ES, ST=Spain, L=Zaragoza, O=Icecrown CA, CN=Icecrown-RC-Maria\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 VERIFY OK: depth=0, C=ES, ST=Spain, L=Zaragoza, O=Icecrown CA, CN=Icecrown-RC-Maria\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_VER=2.6.0\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_PLAT=win\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_TCPNL=1\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_MTU=1600\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_NCP=2\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_CIPHERS=AES-256-GCM:AES-128-GCM\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_PROTO=478\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_LZ4=1\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_LZ4v2=1\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_LZO=1\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_COMP_STUB=1\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_COMP_STUBv2=1\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_GUI_VER=OpenVPN_GUI_11\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 peer info: IV_SSO=openurl,webauth,crtext\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 WARNING: 'tun-mtu' is used inconsistently, local='tun-mtu 1532', remote='tun-mtu 1500'\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 WARNING: 'cipher' is present in local config but missing in remote config, local='cipher AES-256-CBC'\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 Control Channel: TLSv1.3, cipher TLSv1.3 TLS_AES_256_GCM_SHA384, 4096 bit RSA\nSat Feb  4 20:51:33 2023 88.6.127.36:35754 [Icecrown-RC-Maria] Peer Connection Initiated with [AF_INET]88.6.127.36:35754 (via [AF_INET]10.0.1.200%ens5)\nSat Feb  4 20:51:33 2023 Icecrown-RC-Maria/88.6.127.36:35754 MULTI_sva: pool returned IPv4=192.168.210.2, IPv6=(Not enabled)\nSat Feb  4 20:51:34 2023 Icecrown-RC-Maria/88.6.127.36:35754 PUSH: Received control message: 'PUSH_REQUEST'\nSat Feb  4 20:51:34 2023 Icecrown-RC-Maria/88.6.127.36:35754 SENT CONTROL [Icecrown-RC-Maria]: 'PUSH_REPLY,route 10.0.1.0 255.255.255.0,route-gateway 192.168.210.1,ping 10,ping-restart 120,ifconfig 192.168.210.2 255.255.255.0,peer-id 0,cipher AES-256-GCM' (status=1)\nSat Feb  4 20:51:34 2023 Icecrown-RC-Maria/88.6.127.36:35754 Data Channel: using negotiated cipher 'AES-256-GCM'\nSat Feb  4 20:51:34 2023 Icecrown-RC-Maria/88.6.127.36:35754 Outgoing Data Channel: Cipher 'AES-256-GCM' initialized with 256 bit key\nSat Feb  4 20:51:34 2023 Icecrown-RC-Maria/88.6.127.36:35754 Incoming Data Channel: Cipher 'AES-256-GCM' initialized with 256 bit key\nSat Feb  4 20:51:34 2023 Icecrown-RC-Maria/88.6.127.36:35754 MULTI: Learn: 00:ff:83:a2:23:96 -&gt; Icecrown-RC-Maria/88.6.127.36:35754\n</code></pre> </li> <li> <p>Once the connection is established, from the file browser, we will set the server URL, which in my case is: <code>\\\\arthas.icecrown.es</code>. Then, it will ask us for the user credentials.</p> <p></p> </li> <li> <p>After logging in, we should see the user's personal directory and shared resources.</p> <p></p> </li> <li> <p>Add a file to the <code>Maria</code> and <code>rrhh</code> resources and verify its creation from the Zentyal server CLI:</p> <pre><code>ls -l /home/maria/test-file-1.txt\n    -rwxrwx--x+ 1 ICECROWN\\maria ICECROWN\\domain users 0 Feb  4 20:56 /home/maria/test-file-1.txt\n\nls -l /home/samba/shares/rrhh/test-file-2.txt\n    -rwxrwx---+ 1 ICECROWN\\maria ICECROWN\\domain users 0 Feb  4 20:56 /home/samba/shares/rrhh/test-file-2.txt\n</code></pre> </li> </ol> <p>At this point, the server would be ready for production use. However, as mentioned several times, it is highly recommended to perform certain additional tasks such as:</p> <ul> <li>Use certificates issued by recognized certification authorities.</li> <li>Secure the email service with SPF, DKIM, and DMARC.</li> <li>Set restrictions on domain user passwords.</li> <li>Create a backup policy.</li> <li>Monitor the server.</li> <li>Know and schedule maintenance tasks.</li> </ul> <p>All these configurations will be explained on other pages of the project (see top menu).</p>","tags":["Zentyal"]},{"location":"en/zentyal-hardening/","title":"Hardening","text":"<p>On this page, a series of implementations will be carried out in several modules whose purpose is to increase their security.</p> <p>The modules on which these improvements will be applied are:</p> <ul> <li>Domain controller</li> <li>Mail</li> <li>Webmail</li> </ul>","tags":["Zentyal"]},{"location":"en/zentyal-hardening/#domain-controller-module","title":"Domain Controller module","text":"<p>The additional security configurations that will be implemented in the domain controller module are:</p> <ul> <li>Password policies.</li> </ul>","tags":["Zentyal"]},{"location":"en/zentyal-hardening/#password-policy","title":"Password policy","text":"<p>We will establish password policies through the <code>samba-tool domain passwordsettings</code> command for domain users, in this way, we will reduce the possibility of weak passwords being used.</p> <p>Additionally, it should be mentioned that starting from Samba 4.9, it is possible to define more particular password policies as explained in this link. However, using this functionality has a resource increase as mentioned in the link, so I will not use this specific functionality in my particular case.</p> <p>The policies that I will define are:</p> <ul> <li>I will enable password complexity.</li> <li>I will set a minimum of 8 characters that passwords must have.</li> <li>A password will have a maximum validity period of 6 months.</li> </ul> <p>The following are the actions to be performed to apply these policies:</p> <ol> <li> <p>We verify the default policies in use:</p> <pre><code>sudo samba-tool domain passwordsettings show\n</code></pre> <p>The result obtained in my case is:</p> <pre><code>Password information for domain 'DC=icecrown,DC=es'\n\nPassword complexity: off\nStore plaintext passwords: off\nPassword history length: 24\nMinimum password length: 0\nMinimum password age (days): 0\nMaximum password age (days): 365\nAccount lockout duration (mins): 30\nAccount lockout threshold (attempts): 0\nReset account lockout after (mins): 30\n</code></pre> </li> <li> <p>We establish the new policies:</p> <pre><code>sudo samba-tool domain passwordsettings \\\nset \\\n--complexity=on \\\n--min-pwd-length=8 \\\n--max-pwd-age=180\n</code></pre> </li> <li> <p>We show the configuration again to make sure that the policies were applied:</p> <pre><code>sudo samba-tool domain passwordsettings show\n</code></pre> <p>The result obtained in my case is:</p> <pre><code>Password information for domain 'DC=icecrown,DC=es'\n\nPassword complexity: on\nStore plaintext passwords: off\nPassword history length: 24\nMinimum password length: 8\nMinimum password age (days): 0\nMaximum password age (days): 180\nAccount lockout duration (mins): 30\nAccount lockout threshold (attempts): 0\nReset account lockout after (mins): 30\n</code></pre> </li> <li> <p>Finally, we try to create a user with a weak password to confirm that the policies are in operation:</p> <p></p> </li> </ol>","tags":["Zentyal"]},{"location":"en/zentyal-hardening/#mail-module","title":"Mail module","text":"<p>For this module, we will implement the following features to significantly increase the security of our mail service:</p> <ul> <li>SPF</li> <li>DKIM</li> <li>DMARC</li> </ul>","tags":["Zentyal"]},{"location":"en/zentyal-hardening/#spf","title":"SPF","text":"<p>SPF will be the first one we will implement. The goal that SPF tries to cover is to protect our domain against spoofing and phishing attacks. Basically, we will create a record in our DNS which will indicate which servers can send emails from our domain. For more information, see this link.</p> <ol> <li> <p>Through this website, we will generate the necessary DNS record to implement this authentication method:</p> <p></p> </li> <li> <p>We create the <code>TXT</code> record both in the DNS module and in the DNS provider - in my case, Route53 -:</p> <p>For Zentyal, we go to <code>DNS -&gt; Domains -&gt; TXT records</code>:</p> <p></p> <p>For Route 53:</p> <p></p> </li> <li> <p>We check the resolution of the new record both internally and externally:</p> <pre><code>dig TXT icecrown.es\ndig @8.8.8.8 icecrown.es\n</code></pre> <p>The result obtained in my case:</p> <pre><code>## Internal query (from Zentyal)\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; TXT icecrown.es\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 8888\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: f1292e180a5d3b430100000063f25f4ddf828c60e1a71af2 (good)\n;; QUESTION SECTION:\n;icecrown.es.           IN  TXT\n\n;; ANSWER SECTION:\nicecrown.es.        259200  IN  TXT \"v=spf1 mx ip4:15.237.168.75 ~all\"\n\n;; Query time: 204 msec\n;; SERVER: 127.0.0.1#53(127.0.0.1)\n;; WHEN: Sun Feb 19 18:41:33 CET 2023\n;; MSG SIZE  rcvd: 113\n\n## External query\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; @8.8.8.8 TXT icecrown.es\n; (1 server found)\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 5656\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;icecrown.es.           IN  TXT\n\n;; ANSWER SECTION:\nicecrown.es.        300 IN  TXT \"v=spf1 mx ip4:15.237.168.75 ~all\"\n\n;; Query time: 16 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Sun Feb 19 18:42:07 CET 2023\n;; MSG SIZE  rcvd: 85\n</code></pre> </li> <li> <p>We will also use MXtoolbox to check the record:</p> <p></p> </li> <li> <p>Finally, we will send an email to an external account - GMail in my case - and verify the headers:</p> <p></p> </li> </ol>","tags":["Zentyal"]},{"location":"en/zentyal-hardening/#dkim","title":"DKIM","text":"<p>DKIM will be the next security implementation we will carry out. The objective of DKIM is that the receiver can verify that the received email is legitimate. The necessary configuration steps have been taken from here.</p> <ol> <li> <p>We install the necessary packages for the implementation of DKIM:</p> <pre><code>sudo apt update\nsudo apt install -y opendkim opendkim-tools\n</code></pre> </li> <li> <p>We create the directory where the OpenDKIM keys will be stored:</p> <pre><code>sudo mkdir -vp /etc/opendkim/keys\n</code></pre> </li> <li> <p>We generate the private key that will be used to sign the emails and set it as <code>mail</code>:</p> <pre><code>sudo opendkim-genkey -s mail -d icecrown.es -D /etc/opendkim/keys\n</code></pre> </li> <li> <p>We set the correct permissions for the files generated by the previous command:</p> <pre><code>sudo chown -R opendkim:opendkim /etc/opendkim/\nsudo chmod 0640 /etc/opendkim/keys/*.private\n</code></pre> </li> <li> <p>We create the <code>/etc/opendkim/TrustedHosts</code> configuration file and set the trusted domain and IP addresses in it:</p> <pre><code>127.0.0.1\nlocalhost\n15.237.168.75/32\nmail.icecrown.es\n</code></pre> </li> <li> <p>We create the configuration file <code>/etc/opendkim/SigningTable</code> which will contain the domain to be signed by OpenDKIM.</p> <pre><code>*@icecrown.es mail._domainkey.icecrown.es\n</code></pre> </li> <li> <p>We create the configuration file <code>/etc/opendkim/KeyTable</code> which will have the selector name and the path to the private key responsible for signing the emails.</p> <pre><code>mail._domainkey.icecrown.es icecrown.es:mail:/etc/opendkim/keys/mail.private\n</code></pre> </li> <li> <p>We create the main configuration file named <code>/etc/opendkim.conf</code> and set the configuration of the OpenDKIM service.</p> <pre><code>Syslog                  yes\nLogWhy                  yes\nUMask                   007\nMode                    sv\nSubDomains              no\nCanonicalization        relaxed/simple\nSocket                  inet:8891@127.0.0.1\nPidFile                 /run/opendkim/opendkim.pid\nOversignHeaders         From\nTrustAnchorFile         /usr/share/dns/root.key\nUserID                  opendkim\nAutoRestart             yes\nAutoRestartRate         10/1M\nBackground              yes\nDNSTimeout              5\nSignatureAlgorithm      rsa-sha256\nExternalIgnoreList      refile:/etc/opendkim/TrustedHosts\nInternalHosts           refile:/etc/opendkim/TrustedHosts\nKeyTable                refile:/etc/opendkim/KeyTable\nSigningtable            refile:/etc/opendkim/SigningTable\n</code></pre> </li> <li> <p>We set the socket configuration in the configuration file <code>/etc/default/opendkim</code>:</p> <pre><code>## Custom configuration created on 19-02-2023 by Daniel\n# SOCKET=local:$RUNDIR/opendkim.sock\nSOCKET=inet:8891@127.0.0.1\n</code></pre> </li> <li> <p>We enable, restart, and verify the OpenDKIM service:</p> <pre><code>sudo systemctl enable opendkim\nsudo systemctl restart opendkim\nsudo systemctl status opendkim\n</code></pre> </li> <li> <p>The content of the <code>TXT</code> record that we need to create in the domain is located in the configuration file <code>/etc/opendkim/keys/mail.txt</code>.</p> <p>In my case, the content is:</p> <pre><code>mail._domainkey IN  TXT ( \"v=DKIM1; h=sha256; k=rsa; \"\n  \"p=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu2kM2TmbrV6DNQR37F3EZ4YSgfRWV+XLI7Fi02pSqNuPeIwKIRBpoHRj7FU2ff4fHN8fg7iO3qkGbH5vwY8RgLM46pYE4pth0Zl7prFy3YJU6Kz4kzA9JKKAypU7+Z5ji+t+5zKGIJ49CQzIm8czRjnCYdI8ZjTBvUOo36lkVEO2qn43vAoL1a4gFJh3ZdSAqBdGMqVqcgINyn\"\n  \"9ss6+JNE3kbdsbztcR+IeU+6PJZDGTr7VLJ1dXi3NM8HH+R1phgWXKjIScEX4sM3okzPnXZoKSFpNORLVfHf/LwwWF3VLNEpI2zjGYVjc7/jEqZCqZmk/8VNYkUA7vcMyColzJAwIDAQAB\" )  ; ----- DKIM key mail for icecrown.es\n</code></pre> </li> <li> <p>We create the DNS record of type <code>TXT</code> both on the Zentyal server and on the DNS provider.</p> <p>To create the record on the Zentyal server, we will have to use the CLI due to Zentyal's character limitation in the graphical environment:</p> <pre><code>sudo samba-tool dns add \\\n127.0.0.1 \\\nicecrown.es \\\nmail._domainkey.icecrown.es \\\nTXT \\\n'v=DKIM1; h=sha256; k=rsa;\n    \"p=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu2kM2TmbrV6DNQR37F3EZ4YSgfRWV+XLI7Fi02pSqNuPeIwKIRBpoHRj7FU2ff4fHN8fg7iO3qkGbH5vwY8RgLM46pYE4pth0Zl7prFy3YJU6Kz4kzA9JKKAypU7+Z5ji+t+5zKGIJ49CQzIm8czRjnCYdI8ZjTBvUOo36lkVEO2qn43vAoL1a4gFJh3ZdSAqBdGMqVqcgINyn\"\n    \"9ss6+JNE3kbdsbztcR+IeU+6PJZDGTr7VLJ1dXi3NM8HH+R1phgWXKjIScEX4sM3okzPnXZoKSFpNORLVfHf/LwwWF3VLNEpI2zjGYVjc7/jEqZCqZmk/8VNYkUA7vcMyColzJAwIDAQAB\"' \\\n-U zenadmin\n</code></pre> <p>For Route53:</p> <p></p> <p>Warning</p> <p>We must pay attention to the quotation marks when creating the TXT record.</p> </li> <li> <p>We check the resolution of the new record both internally and externally.</p> <pre><code>dig TXT mail._domainkey.icecrown.es\ndig @8.8.8.8 TXT mail._domainkey.icecrown.es\n</code></pre> <p>The result obtained in my case is:</p> <pre><code>## Internal query (from Zentyal)\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; TXT mail._domainkey.icecrown.es\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 47343\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: e524c5bb228993ae0100000063f26951777512932a30cbc1 (good)\n;; QUESTION SECTION:\n;mail._domainkey.icecrown.es.   IN  TXT\n\n;; ANSWER SECTION:\nmail._domainkey.icecrown.es. 900 IN TXT \"v=DKIM1;\" \"h=sha256;\" \"k=rsa;\" \"p=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu2kM2TmbrV6DNQR37F3EZ4YSgfRWV+XLI7Fi02pSqNuPeIwKIRBpoHRj7FU2ff4fHN8fg7iO3qkGbH5vwY8RgLM46pYE4pth0Zl7prFy3YJU6Kz4kzA9JKKAypU7+Z5ji+t+5zKGIJ49CQzIm8czRjnCYdI8ZjTBvUOo36lkVEO2qn43vAoL1a4gFJh3ZdSAqBdGMqVqcgINyn\" \"9ss6+JNE3kbdsbztcR+IeU+6PJZDGTr7VLJ1dXi3NM8HH+R1phgWXKjIScEX4sM3okzPnXZoKSFpNORLVfHf/LwwWF3VLNEpI2zjGYVjc7/jEqZCqZmk/8VNYkUA7vcMyColzJAwIDAQAB\"\n\n;; Query time: 4 msec\n;; SERVER: 127.0.0.1#53(127.0.0.1)\n;; WHEN: Sun Feb 19 19:24:17 CET 2023\n;; MSG SIZE  rcvd: 518\n\n## External query\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; @8.8.8.8 TXT mail._domainkey.icecrown.es\n; (1 server found)\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 58941\n;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;mail._domainkey.icecrown.es.   IN  TXT\n\n;; ANSWER SECTION:\nmail._domainkey.icecrown.es. 300 IN TXT \"9ss6+JNE3kbdsbztcR+IeU+6PJZDGTr7VLJ1dXi3NM8HH+R1phgWXKjIScEX4sM3okzPnXZoKSFpNORLVfHf/LwwWF3VLNEpI2zjGYVjc7/jEqZCqZmk/8VNYkUA7vcMyColzJAwIDAQAB\"\nmail._domainkey.icecrown.es. 300 IN TXT \"v=DKIM1; h=sha256; k=rsa;\" \"p=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu2kM2TmbrV6DNQR37F3EZ4YSgfRWV+XLI7Fi02pSqNuPeIwKIRBpoHRj7FU2ff4fHN8fg7iO3qkGbH5vwY8RgLM46pYE4pth0Zl7prFy3YJU6Kz4kzA9JKKAypU7+Z5ji+t+5zKGIJ49CQzIm8czRjnCYdI8ZjTBvUOo36lkVEO2qn43vAoL1a4gFJh3ZdSAqBdGMqVqcgINyn\"\n\n;; Query time: 16 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Sun Feb 19 19:25:24 CET 2023\n;; MSG SIZE  rcvd: 502\n</code></pre> </li> <li> <p>We will also use MXtoolbox to check the record:</p> <p></p> </li> <li> <p>Once the DNS record is confirmed, we will proceed to configure the Postfix (SMTP) service to make use of this service. To do this, we add the following lines at the end of the stub <code>/etc/zentyal/stubs/mail/main.cf.mas</code>.</p> <pre><code>## DKIM Configuration created on 19-02-2023 by Daniel\nmilter_protocol = 6\nmilter_default_action = accept\nsmtpd_milters = inet:127.0.0.1:8891\nnon_smtpd_milters = inet:127.0.0.1:8891\n</code></pre> <p>If we do not have this file, we will have to execute the following commands:</p> <pre><code>sudo mkdir -v /etc/zentyal/stubs/mail/\nsudo cp -v /usr/share/zentyal/stubs/mail/main.cf.mas /etc/zentyal/stubs/mail/main.cf.mas\n</code></pre> </li> <li> <p>We restart the mail module to apply the changes.</p> <pre><code>sudo zs mail restart\n</code></pre> </li> <li> <p>Finally, we will send an email to an external account - GMail in my case - and verify the headers.</p> <p></p> </li> </ol>","tags":["Zentyal"]},{"location":"en/zentyal-hardening/#dmarc","title":"DMARC","text":"<p>The last implementation we will perform will be DMARC. This authentication mechanism will integrate with SPF and DKIM, so it will be necessary to have them previously implemented.</p> <ol> <li> <p>Through this website, we will generate the necessary DNS record to implement this authentication method:</p> <p> </p> </li> <li> <p>We create the DNS record of type <code>TXT</code> on both the Zentyal server and the DNS provider:</p> <p>For the Zentyal server, we go to <code>DNS -&gt; Domains -&gt; TXT records</code>:</p> <p></p> <p>For Route53:</p> <p></p> </li> <li> <p>We check the resolution of the new record both internally and externally:</p> <pre><code>dig TXT _DMARC.icecrown.es\ndig @8.8.8.8 TXT _DMARC.icecrown.es\n</code></pre> <p>The result obtained in my case:</p> <pre><code>## Internal query (from Zentyal)\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; TXT _DMARC.novadevs.com\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 37988\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: 035a971807e4de9f0100000063f27c0e87c3ffcc2d62887c (good)\n;; QUESTION SECTION:\n;_DMARC.novadevs.com.       IN  TXT\n\n;; ANSWER SECTION:\n_DMARC.novadevs.com.    14400   IN  TXT \"v=DMARC1; p=quarantine; sp=quarantine; adkim=s; aspf=s; rua=mailto:webmaster@novadevs.com; ruf=mailto:webmaster@novadevs.com; rf=afrf; pct=100; ri=86400\"\n\n;; Query time: 40 msec\n;; SERVER: 127.0.0.1#53(127.0.0.1)\n;; WHEN: Sun Feb 19 20:44:14 CET 2023\n;; MSG SIZE  rcvd: 241\n\n## External query\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; @8.8.8.8 TXT _DMARC.icecrown.es\n; (1 server found)\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 42645\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 512\n;; QUESTION SECTION:\n;_DMARC.icecrown.es.        IN  TXT\n\n;; ANSWER SECTION:\n_DMARC.icecrown.es. 300 IN  TXT \"v=DMARC1; p=quarantine; rua=mailto:issues@icecrown.es; ruf=mailto:issues@icecrown.es; rf=afrf; sp=quarantine; fo=1; pct=100; ri=86400; adkim=s; aspf=s\"\n\n;; Query time: 16 msec\n;; SERVER: 8.8.8.8#53(8.8.8.8)\n;; WHEN: Sun Feb 19 20:44:48 CET 2023\n;; MSG SIZE  rcvd: 210\n</code></pre> </li> <li> <p>We will also use MXtoolbox to check the record:</p> <p></p> </li> <li> <p>Finally, we will send an email to an external account - Gmail in my case - and verify the headers:</p> <p></p> </li> </ol>","tags":["Zentyal"]},{"location":"en/zentyal-hardening/#webmail-module","title":"Webmail module","text":"<p>The Webmail module serves its content through the Apache service, which by default displays too much information, which can be used for a possible attack.</p>","tags":["Zentyal"]},{"location":"en/zentyal-hardening/#apache","title":"Apache","text":"<p>By default, it is possible to obtain the version of Ubuntu and Apache used by the web service. Additionally, the default Apache page is very characteristic. Therefore, we will proceed to reduce the information that is possible to obtain by querying the service and also create a very simple page.</p> <ol> <li> <p>We modify the following configuration parameters in the file <code>/etc/apache2/conf-enabled/security.conf</code> to reduce the service information:</p> <pre><code>sed -i \\\n-e 's/^ServerSignature.*/ServerSignature Off/' \\\n-e 's/^ServerTokens.*/ServerTokens Prod/' \\\n/etc/apache2/conf-enabled/security.conf\n</code></pre> </li> <li> <p>We restart the service to apply the changes:</p> <pre><code>sudo systemctl restart apache2\n</code></pre> </li> <li> <p>Finally, we modify the default index:</p> <pre><code>echo '&lt;h1&gt;Website not found&lt;/h1&gt;' | sudo tee /var/www/html/index.html\n</code></pre> </li> </ol>","tags":["Zentyal"]},{"location":"en/zentyal-installation/","title":"Zentyal Installation","text":"<p>On this page, we will explain how to install Zentyal 7.0 on an Ubuntu Server 20.04 on an EC2 instance from AWS cloud provider. The objective is simply to install Zentyal 7.0 with only the essential modules and confirm that there are no network incidents after a reboot.</p> <p>For the installation, we will use this script available from Zentyal. It is worth mentioning that we will install Zentyal without a graphical environment, as we want to reduce the resource usage needed by the server.</p> <p>The environment data for the project will be:</p> <ul> <li>Server Name: arthas</li> <li>Domain: icecrown.es</li> <li>IP: 10.0.1.200/24</li> <li>Network Type: Internal</li> <li>Name of an additional administrative user: djoven</li> </ul>","tags":["Zentyal"]},{"location":"en/zentyal-installation/#requirements","title":"Requirements","text":"<ul> <li>The operating system must be <code>Ubuntu 20.04 LTS</code>.</li> <li>The server must have a minimum of 4GB of RAM.</li> <li>An administrator user (group <code>sudo</code>) is required.</li> </ul>","tags":["Zentyal"]},{"location":"en/zentyal-installation/#considerations","title":"Considerations","text":"<ul> <li>The steps described below are identical in both cloud and on-premise environments.</li> <li>In case of not having robust knowledge about Linux, it is recommended to use the commercial version, as support access can be contracted, which can be very useful in case of incidents or version updates.</li> <li>If the server is installed in a cloud provider or a location without physical access to the server, the stability of the network module will be critical. Below are some recommendations regarding this:<ul> <li>Define the configuration that will be set in advance.</li> <li>Assign a specific IP to the instance's network interface (in case a cloud provider is used).</li> <li>Set the instance IP as static in Zentyal.</li> <li>It is recommended to configure the network card in Zentyal as internal, thus avoiding self-blocking during the initial configuration.</li> </ul> </li> </ul>","tags":["Zentyal"]},{"location":"en/zentyal-installation/#previous-configuration","title":"Previous configuration","text":"<p>Before proceeding to install Zentyal, we will perform the following actions:</p> <ol> <li> <p>We connect to the instance through SSH using the private key that we downloaded when creating the Key pair:</p> <pre><code>ssh -i KP-Prod-Zentyal.pem ubuntu@arthas.icecrown.es\n</code></pre> </li> <li> <p>We set a password for the users; <code>root</code> and <code>ubuntu</code>:</p> <pre><code>sudo passwd root\nsudo passwd ubuntu\n</code></pre> </li> <li> <p>We update the server packages:</p> <pre><code>sudo apt update\nsudo apt dist-upgrade -y\n</code></pre> </li> <li> <p>We create an additional administrative user, which we will use to manage Zentyal from the administration interface:</p> <pre><code>sudo useradd -m -d /home/djoven -G sudo -s /bin/bash -c 'Sysadmin' djoven\nsudo passwd djoven\n</code></pre> <p>Warning</p> <p>It's important that the user belongs to the <code>sudo</code> group, otherwise we won't be able to use it to access the administration interface.</p> </li> <li> <p>We log in with the newly created user:</p> <pre><code>su - djoven\n</code></pre> </li> <li> <p>We create the necessary directory and file to host our public key to be able to connect via SSH:</p> <pre><code>mkdir -v .ssh\ntouch .ssh/authorized_keys\n</code></pre> </li> <li> <p>Finally, we add the contents of our public key to the newly created file <code>.ssh/authorized_keys</code>.</p> </li> </ol>","tags":["Zentyal"]},{"location":"en/zentyal-installation/#instalation","title":"Instalation","text":"<p>From now on, the server will be ready to install Zentyal 7.0. Here are the steps to follow for its installation:</p> <ol> <li> <p>Create a directory where we will store the Zentyal installation script:</p> <pre><code>sudo mkdir /opt/zentyal-install\n</code></pre> </li> <li> <p>Download the script and give it the appropriate permissions:</p> <pre><code>sudo wget -O /opt/zentyal-install/zentyal_installer.sh https://zentyal.com/zentyal_installer.sh\nsudo chmod 0750 /opt/zentyal-install/zentyal_installer.sh\n</code></pre> </li> <li> <p>Install Zentyal through the script:</p> <pre><code>sudo bash /opt/zentyal-install/zentyal_installer.sh\n</code></pre> <p>Note</p> <p>We will answer <code>n</code> to the question: 'Do you want to install the Zentyal Graphical environment?', since we don't want to install the graphical environment.</p> <p>The Zentyal packages that the script will install for us are:</p> <ul> <li>zentyal (meta-package)</li> <li>zentyal-core</li> <li>zentyal-software</li> </ul> <p>Warning</p> <p>At this point, we cannot restart the server until we have installed and configured the network module, otherwise the server will start without an IP address and we will lose access through SSH.</p> </li> <li> <p>Once the script has finished, we log in to the Zentyal administration panel: https://arthas.icecrown.es:8443</p> <p></p> <p>Info</p> <p>If we haven't created the <code>A</code> record in the DNS, we will use the public IP address of the instance.</p> </li> <li> <p>We log in with the administrator user that we previously created, in my case it's djoven.</p> </li> <li> <p>In the initial configuration wizard, we only install the firewall module, this way the network module will be installed as a dependency.</p> </li> <li> <p>We configure the network card as internal and static:</p> <p> </p> <p>Warning</p> <p>It's possible that when the network is finished configuring, the reported bug here will occur. If this is the case, follow the steps described on the Bug fixing page (see top navigation menu) or simply modify the URL to: https://arthas.icecrown.es:8443</p> </li> <li> <p>Once changes have been saved, we can start managing Zentyal through the dashboard.</p> <p></p> </li> <li> <p>Finally, before proceeding to configure the server, we will perform the following checks to confirm the stability of the server:</p> <ol> <li>We ensure that all modules are enabled (Modules Status).</li> <li> <p>The machine has access to the Internet:</p> <pre><code>ping -c4 8.8.8.8\nping -c4 google.es\n</code></pre> </li> <li> <p>There have been no errors in the log <code>/var/log/zentyal/zentyal.log</code>. Here is an example of the logs without any errors:</p> <pre><code>2022/10/23 08:17:51 DEBUG&gt; PAM.pm:83 Authen::Simple::PAM::check - Successfully authenticated user 'djoven' using service 'zentyal'.\n2022/10/23 08:20:29 INFO&gt; install-packages:61 main:: - Starting package installation process\n2022/10/23 08:20:39 INFO&gt; Base.pm:256 EBox::Module::Base::saveConfig - Saving config for module: network\n2022/10/23 08:20:39 INFO&gt; Base.pm:256 EBox::Module::Base::saveConfig - Saving config for module: network\n2022/10/23 08:20:40 INFO&gt; Service.pm:965 EBox::Module::Service::restartService - Restarting service for module: network\n2022/10/23 08:20:43 INFO&gt; Base.pm:256 EBox::Module::Base::saveConfig - Saving config for module: network\n2022/10/23 08:20:43 INFO&gt; Base.pm:256 EBox::Module::Base::saveConfig - Saving config for module: firewall\n2022/10/23 08:20:43 INFO&gt; Base.pm:231 EBox::Module::Base::save - Restarting service for module: firewall\n2022/10/23 08:20:44 INFO&gt; Service.pm:965 EBox::Module::Service::restartService - Restarting service for module: firewall\n2022/10/23 08:20:49 INFO&gt; install-packages:121 main:: - Package installation process finished\n2022/10/23 08:23:15 INFO&gt; Network.pm:89 EBox::Network::CGI::Wizard::Network::_processWizard - Configuring ens5 as 10.0.1.200/255.255.255.0\n2022/10/23 08:23:15 INFO&gt; Network.pm:93 EBox::Network::CGI::Wizard::Network::_processWizard - Adding gateway 10.0.1.1 for iface ens5\n2022/10/23 08:23:15 INFO&gt; Network.pm:108 EBox::Network::CGI::Wizard::Network::_processWizard - Adding nameserver 1.1.1.1\n2022/10/23 08:23:15 INFO&gt; Network.pm:114 EBox::Network::CGI::Wizard::Network::_processWizard - Adding nameserver 9.9.9.9\n2022/10/23 08:23:17 INFO&gt; GlobalImpl.pm:571 EBox::GlobalImpl::saveAllModules - First installation, enabling modules: network firewall webadmin logs audit firewall\n2022/10/23 08:23:17 INFO&gt; GlobalImpl.pm:574 EBox::GlobalImpl::saveAllModules - Enabling module network\n2022/10/23 08:23:17 INFO&gt; GlobalImpl.pm:574 EBox::GlobalImpl::saveAllModules - Enabling module firewall\n2022/10/23 08:23:17 INFO&gt; GlobalImpl.pm:574 EBox::GlobalImpl::saveAllModules - Enabling module webadmin\n2022/10/23 08:23:18 INFO&gt; GlobalImpl.pm:574 EBox::GlobalImpl::saveAllModules - Enabling module logs\n2022/10/23 08:23:18 INFO&gt; GlobalImpl.pm:574 EBox::GlobalImpl::saveAllModules - Enabling module audit\n2022/10/23 08:23:19 INFO&gt; GlobalImpl.pm:574 EBox::GlobalImpl::saveAllModules - Enabling module firewall\n2022/10/23 08:23:19 INFO&gt; Base.pm:231 EBox::Module::Base::save - Restarting service for module: network\n2022/10/23 08:23:23 INFO&gt; Base.pm:231 EBox::Module::Base::save - Restarting service for module: firewall\n2022/10/23 08:23:23 INFO&gt; Base.pm:231 EBox::Module::Base::save - Restarting service for module: logs\n2022/10/23 08:23:23 INFO&gt; Base.pm:231 EBox::Module::Base::save - Restarting service for module: audit\n2022/10/23 08:23:23 INFO&gt; Base.pm:231 EBox::Module::Base::save - Restarting service for module: firewall\n2022/10/23 08:23:24 INFO&gt; Base.pm:231 EBox::Module::Base::save - Restarting service for module: sysinfo\n2022/10/23 08:23:25 INFO&gt; GlobalImpl.pm:660 EBox::GlobalImpl::saveAllModules - Saving configuration: webadmin\n2022/10/23 08:23:25 INFO&gt; Base.pm:231 EBox::Module::Base::save - Restarting service for module: webadmin\n2022/10/23 08:24:51 INFO&gt; Index.pm:187 EBox::Dashboard::CGI::Index::masonParameters - dashboard1\n</code></pre> </li> <li> <p>We restart the server to ensure that it is able to start without any network problems.</p> <pre><code>sudo reboot\n</code></pre> </li> <li> <p>We verify that we can connect through SSH and to the Zentyal administration interface.</p> </li> </ol> </li> </ol>","tags":["Zentyal"]}]}